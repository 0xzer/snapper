// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: createContentMessage.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateContentMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId                         *UUID                             `protobuf:"bytes,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	ClientResolutionId               uint64                            `protobuf:"varint,2,opt,name=clientResolutionId,proto3" json:"clientResolutionId,omitempty"`
	Destinations                     []*DeliveryDestination            `protobuf:"bytes,3,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Content                          *ContentEnvelope                  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	DependentClientResolutionIds     []uint64                          `protobuf:"varint,5,rep,packed,name=dependentClientResolutionIds,proto3" json:"dependentClientResolutionIds,omitempty"`
	FeatureAttachment                []*FeatureAttachment              `protobuf:"bytes,6,rep,name=featureAttachment,proto3" json:"featureAttachment,omitempty"`
	IsRetry                          bool                              `protobuf:"varint,7,opt,name=isRetry,proto3" json:"isRetry,omitempty"`
	CreateContentMessageBlizzardData *CreateContentMessageBlizzardData `protobuf:"bytes,8,opt,name=createContentMessageBlizzardData,proto3" json:"createContentMessageBlizzardData,omitempty"`
}

func (x *CreateContentMessageRequest) Reset() {
	*x = CreateContentMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_createContentMessage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentMessageRequest) ProtoMessage() {}

func (x *CreateContentMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_createContentMessage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentMessageRequest.ProtoReflect.Descriptor instead.
func (*CreateContentMessageRequest) Descriptor() ([]byte, []int) {
	return file_createContentMessage_proto_rawDescGZIP(), []int{0}
}

func (x *CreateContentMessageRequest) GetSenderId() *UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *CreateContentMessageRequest) GetClientResolutionId() uint64 {
	if x != nil {
		return x.ClientResolutionId
	}
	return 0
}

func (x *CreateContentMessageRequest) GetDestinations() []*DeliveryDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *CreateContentMessageRequest) GetContent() *ContentEnvelope {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *CreateContentMessageRequest) GetDependentClientResolutionIds() []uint64 {
	if x != nil {
		return x.DependentClientResolutionIds
	}
	return nil
}

func (x *CreateContentMessageRequest) GetFeatureAttachment() []*FeatureAttachment {
	if x != nil {
		return x.FeatureAttachment
	}
	return nil
}

func (x *CreateContentMessageRequest) GetIsRetry() bool {
	if x != nil {
		return x.IsRetry
	}
	return false
}

func (x *CreateContentMessageRequest) GetCreateContentMessageBlizzardData() *CreateContentMessageBlizzardData {
	if x != nil {
		return x.CreateContentMessageBlizzardData
	}
	return nil
}

type CreateContentMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientResolutionId uint64                        `protobuf:"varint,1,opt,name=clientResolutionId,proto3" json:"clientResolutionId,omitempty"`
	Result             []*CreateContentMessageResult `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *CreateContentMessageResponse) Reset() {
	*x = CreateContentMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_createContentMessage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentMessageResponse) ProtoMessage() {}

func (x *CreateContentMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_createContentMessage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentMessageResponse.ProtoReflect.Descriptor instead.
func (*CreateContentMessageResponse) Descriptor() ([]byte, []int) {
	return file_createContentMessage_proto_rawDescGZIP(), []int{1}
}

func (x *CreateContentMessageResponse) GetClientResolutionId() uint64 {
	if x != nil {
		return x.ClientResolutionId
	}
	return 0
}

func (x *CreateContentMessageResponse) GetResult() []*CreateContentMessageResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type CreateContentMessageResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestinationId      *UUID                    `protobuf:"bytes,1,opt,name=destinationId,proto3" json:"destinationId,omitempty"`
	Success            bool                     `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	FailureReason      *FailureReason           `protobuf:"bytes,3,opt,name=failureReason,proto3" json:"failureReason,omitempty"`
	Retryable          bool                     `protobuf:"varint,4,opt,name=retryable,proto3" json:"retryable,omitempty"`
	CurrentVersion     uint64                   `protobuf:"varint,5,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"`
	CreatedMessageId   uint64                   `protobuf:"varint,6,opt,name=createdMessageId,proto3" json:"createdMessageId,omitempty"`
	ReleasePolicy      ContentReadReleasePolicy `protobuf:"varint,7,opt,name=releasePolicy,proto3,enum=policy.ContentReadReleasePolicy" json:"releasePolicy,omitempty"`
	MessageMetadata    *MessageMetadata         `protobuf:"bytes,8,opt,name=messageMetadata,proto3" json:"messageMetadata,omitempty"`
	StreakMetadata     *StreakMetadata          `protobuf:"bytes,9,opt,name=streakMetadata,proto3" json:"streakMetadata,omitempty"`
	SnapStoryReference *MediaReference          `protobuf:"bytes,10,opt,name=snapStoryReference,proto3" json:"snapStoryReference,omitempty"`
	AnalyticsMessageId *LegacyMessageId         `protobuf:"bytes,11,opt,name=analyticsMessageId,proto3" json:"analyticsMessageId,omitempty"`
	// Types that are assignable to DestinationRes:
	//
	//	*CreateContentMessageResult_ConversationDestinationResult
	//	*CreateContentMessageResult_StoryDestinationResult
	//	*CreateContentMessageResult_PhoneNumberDestinationResult
	DestinationRes isCreateContentMessageResult_DestinationRes `protobuf_oneof:"destinationRes"`
}

func (x *CreateContentMessageResult) Reset() {
	*x = CreateContentMessageResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_createContentMessage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentMessageResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentMessageResult) ProtoMessage() {}

func (x *CreateContentMessageResult) ProtoReflect() protoreflect.Message {
	mi := &file_createContentMessage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentMessageResult.ProtoReflect.Descriptor instead.
func (*CreateContentMessageResult) Descriptor() ([]byte, []int) {
	return file_createContentMessage_proto_rawDescGZIP(), []int{2}
}

func (x *CreateContentMessageResult) GetDestinationId() *UUID {
	if x != nil {
		return x.DestinationId
	}
	return nil
}

func (x *CreateContentMessageResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateContentMessageResult) GetFailureReason() *FailureReason {
	if x != nil {
		return x.FailureReason
	}
	return nil
}

func (x *CreateContentMessageResult) GetRetryable() bool {
	if x != nil {
		return x.Retryable
	}
	return false
}

func (x *CreateContentMessageResult) GetCurrentVersion() uint64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

func (x *CreateContentMessageResult) GetCreatedMessageId() uint64 {
	if x != nil {
		return x.CreatedMessageId
	}
	return 0
}

func (x *CreateContentMessageResult) GetReleasePolicy() ContentReadReleasePolicy {
	if x != nil {
		return x.ReleasePolicy
	}
	return ContentReadReleasePolicy_HIGH_WATER_MARK
}

func (x *CreateContentMessageResult) GetMessageMetadata() *MessageMetadata {
	if x != nil {
		return x.MessageMetadata
	}
	return nil
}

func (x *CreateContentMessageResult) GetStreakMetadata() *StreakMetadata {
	if x != nil {
		return x.StreakMetadata
	}
	return nil
}

func (x *CreateContentMessageResult) GetSnapStoryReference() *MediaReference {
	if x != nil {
		return x.SnapStoryReference
	}
	return nil
}

func (x *CreateContentMessageResult) GetAnalyticsMessageId() *LegacyMessageId {
	if x != nil {
		return x.AnalyticsMessageId
	}
	return nil
}

func (m *CreateContentMessageResult) GetDestinationRes() isCreateContentMessageResult_DestinationRes {
	if m != nil {
		return m.DestinationRes
	}
	return nil
}

func (x *CreateContentMessageResult) GetConversationDestinationResult() *ConversationDestinationResult {
	if x, ok := x.GetDestinationRes().(*CreateContentMessageResult_ConversationDestinationResult); ok {
		return x.ConversationDestinationResult
	}
	return nil
}

func (x *CreateContentMessageResult) GetStoryDestinationResult() *StoryDestinationResult {
	if x, ok := x.GetDestinationRes().(*CreateContentMessageResult_StoryDestinationResult); ok {
		return x.StoryDestinationResult
	}
	return nil
}

func (x *CreateContentMessageResult) GetPhoneNumberDestinationResult() *PhoneNumberDestinationResult {
	if x, ok := x.GetDestinationRes().(*CreateContentMessageResult_PhoneNumberDestinationResult); ok {
		return x.PhoneNumberDestinationResult
	}
	return nil
}

type isCreateContentMessageResult_DestinationRes interface {
	isCreateContentMessageResult_DestinationRes()
}

type CreateContentMessageResult_ConversationDestinationResult struct {
	ConversationDestinationResult *ConversationDestinationResult `protobuf:"bytes,12,opt,name=conversationDestinationResult,proto3,oneof"`
}

type CreateContentMessageResult_StoryDestinationResult struct {
	StoryDestinationResult *StoryDestinationResult `protobuf:"bytes,13,opt,name=storyDestinationResult,proto3,oneof"`
}

type CreateContentMessageResult_PhoneNumberDestinationResult struct {
	PhoneNumberDestinationResult *PhoneNumberDestinationResult `protobuf:"bytes,14,opt,name=phoneNumberDestinationResult,proto3,oneof"`
}

func (*CreateContentMessageResult_ConversationDestinationResult) isCreateContentMessageResult_DestinationRes() {
}

func (*CreateContentMessageResult_StoryDestinationResult) isCreateContentMessageResult_DestinationRes() {
}

func (*CreateContentMessageResult_PhoneNumberDestinationResult) isCreateContentMessageResult_DestinationRes() {
}

type CreateContentMessageBlizzardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendMessageAttemptId *UUID `protobuf:"bytes,1,opt,name=sendMessageAttemptId,proto3" json:"sendMessageAttemptId,omitempty"`
}

func (x *CreateContentMessageBlizzardData) Reset() {
	*x = CreateContentMessageBlizzardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_createContentMessage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContentMessageBlizzardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContentMessageBlizzardData) ProtoMessage() {}

func (x *CreateContentMessageBlizzardData) ProtoReflect() protoreflect.Message {
	mi := &file_createContentMessage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContentMessageBlizzardData.ProtoReflect.Descriptor instead.
func (*CreateContentMessageBlizzardData) Descriptor() ([]byte, []int) {
	return file_createContentMessage_proto_rawDescGZIP(), []int{3}
}

func (x *CreateContentMessageBlizzardData) GetSendMessageAttemptId() *UUID {
	if x != nil {
		return x.SendMessageAttemptId
	}
	return nil
}

var File_createContentMessage_proto protoreflect.FileDescriptor

var file_createContentMessage_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x04, 0x0a,
	0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x08,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x04, 0x52, 0x1c, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x52, 0x0a, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x52, 0x65, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x12, 0x82, 0x01, 0x0a, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6c,
	0x69, 0x7a, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x36, 0x2e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6c, 0x69, 0x7a,
	0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6c,
	0x69, 0x7a, 0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x98, 0x01, 0x0a, 0x1c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x48, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xdc, 0x07, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x39, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0d, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x46, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x43, 0x0a, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0e, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x6e,
	0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x12, 0x73,
	0x6e, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x49, 0x0a, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74,
	0x69, 0x63, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x78, 0x0a, 0x1d,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x63, 0x0a, 0x16, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x48, 0x00, 0x52, 0x16, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x75, 0x0a, 0x1c, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x6c, 0x69, 0x7a,
	0x7a, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x14, 0x73, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41,
	0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_createContentMessage_proto_rawDescOnce sync.Once
	file_createContentMessage_proto_rawDescData = file_createContentMessage_proto_rawDesc
)

func file_createContentMessage_proto_rawDescGZIP() []byte {
	file_createContentMessage_proto_rawDescOnce.Do(func() {
		file_createContentMessage_proto_rawDescData = protoimpl.X.CompressGZIP(file_createContentMessage_proto_rawDescData)
	})
	return file_createContentMessage_proto_rawDescData
}

var file_createContentMessage_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_createContentMessage_proto_goTypes = []interface{}{
	(*CreateContentMessageRequest)(nil),      // 0: createContentMessage.CreateContentMessageRequest
	(*CreateContentMessageResponse)(nil),     // 1: createContentMessage.CreateContentMessageResponse
	(*CreateContentMessageResult)(nil),       // 2: createContentMessage.CreateContentMessageResult
	(*CreateContentMessageBlizzardData)(nil), // 3: createContentMessage.CreateContentMessageBlizzardData
	(*UUID)(nil),                             // 4: uuid.UUID
	(*DeliveryDestination)(nil),              // 5: messages.DeliveryDestination
	(*ContentEnvelope)(nil),                  // 6: contentEnvelope.ContentEnvelope
	(*FeatureAttachment)(nil),                // 7: featureAttachment.FeatureAttachment
	(*FailureReason)(nil),                    // 8: http.FailureReason
	(ContentReadReleasePolicy)(0),            // 9: policy.ContentReadReleasePolicy
	(*MessageMetadata)(nil),                  // 10: messages.MessageMetadata
	(*StreakMetadata)(nil),                   // 11: common.StreakMetadata
	(*MediaReference)(nil),                   // 12: media.MediaReference
	(*LegacyMessageId)(nil),                  // 13: messages.LegacyMessageId
	(*ConversationDestinationResult)(nil),    // 14: destinationResult.ConversationDestinationResult
	(*StoryDestinationResult)(nil),           // 15: destinationResult.StoryDestinationResult
	(*PhoneNumberDestinationResult)(nil),     // 16: destinationResult.PhoneNumberDestinationResult
}
var file_createContentMessage_proto_depIdxs = []int32{
	4,  // 0: createContentMessage.CreateContentMessageRequest.senderId:type_name -> uuid.UUID
	5,  // 1: createContentMessage.CreateContentMessageRequest.destinations:type_name -> messages.DeliveryDestination
	6,  // 2: createContentMessage.CreateContentMessageRequest.content:type_name -> contentEnvelope.ContentEnvelope
	7,  // 3: createContentMessage.CreateContentMessageRequest.featureAttachment:type_name -> featureAttachment.FeatureAttachment
	3,  // 4: createContentMessage.CreateContentMessageRequest.createContentMessageBlizzardData:type_name -> createContentMessage.CreateContentMessageBlizzardData
	2,  // 5: createContentMessage.CreateContentMessageResponse.result:type_name -> createContentMessage.CreateContentMessageResult
	4,  // 6: createContentMessage.CreateContentMessageResult.destinationId:type_name -> uuid.UUID
	8,  // 7: createContentMessage.CreateContentMessageResult.failureReason:type_name -> http.FailureReason
	9,  // 8: createContentMessage.CreateContentMessageResult.releasePolicy:type_name -> policy.ContentReadReleasePolicy
	10, // 9: createContentMessage.CreateContentMessageResult.messageMetadata:type_name -> messages.MessageMetadata
	11, // 10: createContentMessage.CreateContentMessageResult.streakMetadata:type_name -> common.StreakMetadata
	12, // 11: createContentMessage.CreateContentMessageResult.snapStoryReference:type_name -> media.MediaReference
	13, // 12: createContentMessage.CreateContentMessageResult.analyticsMessageId:type_name -> messages.LegacyMessageId
	14, // 13: createContentMessage.CreateContentMessageResult.conversationDestinationResult:type_name -> destinationResult.ConversationDestinationResult
	15, // 14: createContentMessage.CreateContentMessageResult.storyDestinationResult:type_name -> destinationResult.StoryDestinationResult
	16, // 15: createContentMessage.CreateContentMessageResult.phoneNumberDestinationResult:type_name -> destinationResult.PhoneNumberDestinationResult
	4,  // 16: createContentMessage.CreateContentMessageBlizzardData.sendMessageAttemptId:type_name -> uuid.UUID
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_createContentMessage_proto_init() }
func file_createContentMessage_proto_init() {
	if File_createContentMessage_proto != nil {
		return
	}
	file_uuid_proto_init()
	file_messages_proto_init()
	file_contentEnvelope_proto_init()
	file_http_proto_init()
	file_policy_proto_init()
	file_common_proto_init()
	file_media_proto_init()
	file_destinationResult_proto_init()
	file_featureAttachment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_createContentMessage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_createContentMessage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_createContentMessage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentMessageResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_createContentMessage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateContentMessageBlizzardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_createContentMessage_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CreateContentMessageResult_ConversationDestinationResult)(nil),
		(*CreateContentMessageResult_StoryDestinationResult)(nil),
		(*CreateContentMessageResult_PhoneNumberDestinationResult)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_createContentMessage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_createContentMessage_proto_goTypes,
		DependencyIndexes: file_createContentMessage_proto_depIdxs,
		MessageInfos:      file_createContentMessage_proto_msgTypes,
	}.Build()
	File_createContentMessage_proto = out.File
	file_createContentMessage_proto_rawDesc = nil
	file_createContentMessage_proto_goTypes = nil
	file_createContentMessage_proto_depIdxs = nil
}
