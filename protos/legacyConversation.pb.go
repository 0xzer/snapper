// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: legacyConversation.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LegacyConversationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LegacyInfo:
	//
	//	*LegacyConversationInfo_LegacyOneOnOneConversationInfo
	//	*LegacyConversationInfo_LegacyGroupConversationInfo
	LegacyInfo isLegacyConversationInfo_LegacyInfo `protobuf_oneof:"legacyInfo"`
}

func (x *LegacyConversationInfo) Reset() {
	*x = LegacyConversationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyConversationInfo) ProtoMessage() {}

func (x *LegacyConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyConversationInfo.ProtoReflect.Descriptor instead.
func (*LegacyConversationInfo) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{0}
}

func (m *LegacyConversationInfo) GetLegacyInfo() isLegacyConversationInfo_LegacyInfo {
	if m != nil {
		return m.LegacyInfo
	}
	return nil
}

func (x *LegacyConversationInfo) GetLegacyOneOnOneConversationInfo() *LegacyOneOnOneConversationInfo {
	if x, ok := x.GetLegacyInfo().(*LegacyConversationInfo_LegacyOneOnOneConversationInfo); ok {
		return x.LegacyOneOnOneConversationInfo
	}
	return nil
}

func (x *LegacyConversationInfo) GetLegacyGroupConversationInfo() *LegacyGroupConversationInfo {
	if x, ok := x.GetLegacyInfo().(*LegacyConversationInfo_LegacyGroupConversationInfo); ok {
		return x.LegacyGroupConversationInfo
	}
	return nil
}

type isLegacyConversationInfo_LegacyInfo interface {
	isLegacyConversationInfo_LegacyInfo()
}

type LegacyConversationInfo_LegacyOneOnOneConversationInfo struct {
	LegacyOneOnOneConversationInfo *LegacyOneOnOneConversationInfo `protobuf:"bytes,1,opt,name=legacyOneOnOneConversationInfo,proto3,oneof"`
}

type LegacyConversationInfo_LegacyGroupConversationInfo struct {
	LegacyGroupConversationInfo *LegacyGroupConversationInfo `protobuf:"bytes,2,opt,name=legacyGroupConversationInfo,proto3,oneof"`
}

func (*LegacyConversationInfo_LegacyOneOnOneConversationInfo) isLegacyConversationInfo_LegacyInfo() {}

func (*LegacyConversationInfo_LegacyGroupConversationInfo) isLegacyConversationInfo_LegacyInfo() {}

type LegacyOneOnOneConversationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SequenceNumbers       *LegacyOneOnOneSequenceNumbers                         `protobuf:"bytes,2,opt,name=sequenceNumbers,proto3" json:"sequenceNumbers,omitempty"`
	UnviewedReceivedSnaps []*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap `protobuf:"bytes,3,rep,name=unviewedReceivedSnaps,proto3" json:"unviewedReceivedSnaps,omitempty"`
	UnexpiredSentSnaps    []*LegacyOneOnOneConversationInfo_UnexpiredSentSnap    `protobuf:"bytes,4,rep,name=unexpiredSentSnaps,proto3" json:"unexpiredSentSnaps,omitempty"`
}

func (x *LegacyOneOnOneConversationInfo) Reset() {
	*x = LegacyOneOnOneConversationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyOneOnOneConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOneOnOneConversationInfo) ProtoMessage() {}

func (x *LegacyOneOnOneConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOneOnOneConversationInfo.ProtoReflect.Descriptor instead.
func (*LegacyOneOnOneConversationInfo) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{1}
}

func (x *LegacyOneOnOneConversationInfo) GetSequenceNumbers() *LegacyOneOnOneSequenceNumbers {
	if x != nil {
		return x.SequenceNumbers
	}
	return nil
}

func (x *LegacyOneOnOneConversationInfo) GetUnviewedReceivedSnaps() []*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap {
	if x != nil {
		return x.UnviewedReceivedSnaps
	}
	return nil
}

func (x *LegacyOneOnOneConversationInfo) GetUnexpiredSentSnaps() []*LegacyOneOnOneConversationInfo_UnexpiredSentSnap {
	if x != nil {
		return x.UnexpiredSentSnaps
	}
	return nil
}

type LegacyGroupConversationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LegacyGroupConversationInfo) Reset() {
	*x = LegacyGroupConversationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyGroupConversationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyGroupConversationInfo) ProtoMessage() {}

func (x *LegacyGroupConversationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyGroupConversationInfo.ProtoReflect.Descriptor instead.
func (*LegacyGroupConversationInfo) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{2}
}

type LegacyOneOnOneSequenceNumbers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequesterSequenceNumber        *LegacyOneOnOneSequenceNumbers_SequenceNumber `protobuf:"bytes,1,opt,name=requesterSequenceNumber,proto3" json:"requesterSequenceNumber,omitempty"`
	OtherParticipantSequenceNumber *LegacyOneOnOneSequenceNumbers_SequenceNumber `protobuf:"bytes,2,opt,name=otherParticipantSequenceNumber,proto3" json:"otherParticipantSequenceNumber,omitempty"`
}

func (x *LegacyOneOnOneSequenceNumbers) Reset() {
	*x = LegacyOneOnOneSequenceNumbers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyOneOnOneSequenceNumbers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOneOnOneSequenceNumbers) ProtoMessage() {}

func (x *LegacyOneOnOneSequenceNumbers) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOneOnOneSequenceNumbers.ProtoReflect.Descriptor instead.
func (*LegacyOneOnOneSequenceNumbers) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{3}
}

func (x *LegacyOneOnOneSequenceNumbers) GetRequesterSequenceNumber() *LegacyOneOnOneSequenceNumbers_SequenceNumber {
	if x != nil {
		return x.RequesterSequenceNumber
	}
	return nil
}

func (x *LegacyOneOnOneSequenceNumbers) GetOtherParticipantSequenceNumber() *LegacyOneOnOneSequenceNumbers_SequenceNumber {
	if x != nil {
		return x.OtherParticipantSequenceNumber
	}
	return nil
}

type LegacyOneOnOneConversationInfo_UnviewedReceivedSnap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapId int64 `protobuf:"varint,1,opt,name=snapId,proto3" json:"snapId,omitempty"` // very confusing
}

func (x *LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) Reset() {
	*x = LegacyOneOnOneConversationInfo_UnviewedReceivedSnap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) ProtoMessage() {}

func (x *LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOneOnOneConversationInfo_UnviewedReceivedSnap.ProtoReflect.Descriptor instead.
func (*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{4}
}

func (x *LegacyOneOnOneConversationInfo_UnviewedReceivedSnap) GetSnapId() int64 {
	if x != nil {
		return x.SnapId
	}
	return 0
}

type LegacyOneOnOneConversationInfo_UnexpiredSentSnap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapId               int64 `protobuf:"varint,1,opt,name=snapId,proto3" json:"snapId,omitempty"`
	HasBeenViewed        bool  `protobuf:"varint,2,opt,name=hasBeenViewed,proto3" json:"hasBeenViewed,omitempty"`
	HasBeenReplayed      bool  `protobuf:"varint,3,opt,name=hasBeenReplayed,proto3" json:"hasBeenReplayed,omitempty"`
	HasBeenScreenshotted bool  `protobuf:"varint,4,opt,name=hasBeenScreenshotted,proto3" json:"hasBeenScreenshotted,omitempty"`
	HasBeenRecorded      bool  `protobuf:"varint,5,opt,name=hasBeenRecorded,proto3" json:"hasBeenRecorded,omitempty"`
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) Reset() {
	*x = LegacyOneOnOneConversationInfo_UnexpiredSentSnap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOneOnOneConversationInfo_UnexpiredSentSnap) ProtoMessage() {}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOneOnOneConversationInfo_UnexpiredSentSnap.ProtoReflect.Descriptor instead.
func (*LegacyOneOnOneConversationInfo_UnexpiredSentSnap) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{5}
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) GetSnapId() int64 {
	if x != nil {
		return x.SnapId
	}
	return 0
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) GetHasBeenViewed() bool {
	if x != nil {
		return x.HasBeenViewed
	}
	return false
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) GetHasBeenReplayed() bool {
	if x != nil {
		return x.HasBeenReplayed
	}
	return false
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) GetHasBeenScreenshotted() bool {
	if x != nil {
		return x.HasBeenScreenshotted
	}
	return false
}

func (x *LegacyOneOnOneConversationInfo_UnexpiredSentSnap) GetHasBeenRecorded() bool {
	if x != nil {
		return x.HasBeenRecorded
	}
	return false
}

type LegacyOneOnOneSequenceNumbers_SequenceNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSequenceNumber int64 `protobuf:"varint,1,opt,name=messageSequenceNumber,proto3" json:"messageSequenceNumber,omitempty"`
	UpdateSequenceNumber  int64 `protobuf:"varint,2,opt,name=updateSequenceNumber,proto3" json:"updateSequenceNumber,omitempty"`
	SnapTimestamp         int64 `protobuf:"varint,3,opt,name=snapTimestamp,proto3" json:"snapTimestamp,omitempty"`
}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) Reset() {
	*x = LegacyOneOnOneSequenceNumbers_SequenceNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_legacyConversation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyOneOnOneSequenceNumbers_SequenceNumber) ProtoMessage() {}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) ProtoReflect() protoreflect.Message {
	mi := &file_legacyConversation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyOneOnOneSequenceNumbers_SequenceNumber.ProtoReflect.Descriptor instead.
func (*LegacyOneOnOneSequenceNumbers_SequenceNumber) Descriptor() ([]byte, []int) {
	return file_legacyConversation_proto_rawDescGZIP(), []int{6}
}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) GetMessageSequenceNumber() int64 {
	if x != nil {
		return x.MessageSequenceNumber
	}
	return 0
}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) GetUpdateSequenceNumber() int64 {
	if x != nil {
		return x.UpdateSequenceNumber
	}
	return 0
}

func (x *LegacyOneOnOneSequenceNumbers_SequenceNumber) GetSnapTimestamp() int64 {
	if x != nil {
		return x.SnapTimestamp
	}
	return 0
}

var File_legacyConversation_proto protoreflect.FileDescriptor

var file_legacyConversation_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x99,
	0x02, 0x0a, 0x16, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x7c, 0x0a, 0x1e, 0x6c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65,
	0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x1e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4f,
	0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x73, 0x0a, 0x1b, 0x6c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x1b, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x0c, 0x0a, 0x0a,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf2, 0x02, 0x0a, 0x1e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x5b, 0x0a,
	0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x7d, 0x0a, 0x15, 0x75, 0x6e,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x6c, 0x65, 0x67, 0x61,
	0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x55, 0x6e,
	0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x6e,
	0x61, 0x70, 0x52, 0x15, 0x75, 0x6e, 0x76, 0x69, 0x65, 0x77, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x12, 0x74, 0x0a, 0x12, 0x75, 0x6e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x52, 0x12, 0x75, 0x6e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x22,
	0x1d, 0x0a, 0x1b, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa6,
	0x02, 0x0a, 0x1d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e,
	0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x12, 0x7a, 0x0a, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65,
	0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x5f, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x17, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x88, 0x01, 0x0a,
	0x1e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x5f, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x1e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x33, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x55, 0x6e, 0x76, 0x69, 0x65, 0x77,
	0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x6e, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x6e, 0x61, 0x70, 0x49, 0x64, 0x22, 0xf8, 0x01, 0x0a, 0x30, 0x4c, 0x65, 0x67, 0x61, 0x63,
	0x79, 0x4f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x55, 0x6e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x53, 0x6e, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6e, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6e, 0x61,
	0x70, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x68, 0x61, 0x73, 0x42,
	0x65, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73,
	0x42, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x42, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x68, 0x61, 0x73, 0x42, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x22, 0xbe, 0x01, 0x0a, 0x2c, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4f, 0x6e, 0x65, 0x4f,
	0x6e, 0x4f, 0x6e, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x5f, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x6e, 0x61, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x6e, 0x61, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_legacyConversation_proto_rawDescOnce sync.Once
	file_legacyConversation_proto_rawDescData = file_legacyConversation_proto_rawDesc
)

func file_legacyConversation_proto_rawDescGZIP() []byte {
	file_legacyConversation_proto_rawDescOnce.Do(func() {
		file_legacyConversation_proto_rawDescData = protoimpl.X.CompressGZIP(file_legacyConversation_proto_rawDescData)
	})
	return file_legacyConversation_proto_rawDescData
}

var file_legacyConversation_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_legacyConversation_proto_goTypes = []interface{}{
	(*LegacyConversationInfo)(nil),                              // 0: legacyConversation.LegacyConversationInfo
	(*LegacyOneOnOneConversationInfo)(nil),                      // 1: legacyConversation.LegacyOneOnOneConversationInfo
	(*LegacyGroupConversationInfo)(nil),                         // 2: legacyConversation.LegacyGroupConversationInfo
	(*LegacyOneOnOneSequenceNumbers)(nil),                       // 3: legacyConversation.LegacyOneOnOneSequenceNumbers
	(*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap)(nil), // 4: legacyConversation.LegacyOneOnOneConversationInfo_UnviewedReceivedSnap
	(*LegacyOneOnOneConversationInfo_UnexpiredSentSnap)(nil),    // 5: legacyConversation.LegacyOneOnOneConversationInfo_UnexpiredSentSnap
	(*LegacyOneOnOneSequenceNumbers_SequenceNumber)(nil),        // 6: legacyConversation.LegacyOneOnOneSequenceNumbers_SequenceNumber
}
var file_legacyConversation_proto_depIdxs = []int32{
	1, // 0: legacyConversation.LegacyConversationInfo.legacyOneOnOneConversationInfo:type_name -> legacyConversation.LegacyOneOnOneConversationInfo
	2, // 1: legacyConversation.LegacyConversationInfo.legacyGroupConversationInfo:type_name -> legacyConversation.LegacyGroupConversationInfo
	3, // 2: legacyConversation.LegacyOneOnOneConversationInfo.sequenceNumbers:type_name -> legacyConversation.LegacyOneOnOneSequenceNumbers
	4, // 3: legacyConversation.LegacyOneOnOneConversationInfo.unviewedReceivedSnaps:type_name -> legacyConversation.LegacyOneOnOneConversationInfo_UnviewedReceivedSnap
	5, // 4: legacyConversation.LegacyOneOnOneConversationInfo.unexpiredSentSnaps:type_name -> legacyConversation.LegacyOneOnOneConversationInfo_UnexpiredSentSnap
	6, // 5: legacyConversation.LegacyOneOnOneSequenceNumbers.requesterSequenceNumber:type_name -> legacyConversation.LegacyOneOnOneSequenceNumbers_SequenceNumber
	6, // 6: legacyConversation.LegacyOneOnOneSequenceNumbers.otherParticipantSequenceNumber:type_name -> legacyConversation.LegacyOneOnOneSequenceNumbers_SequenceNumber
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_legacyConversation_proto_init() }
func file_legacyConversation_proto_init() {
	if File_legacyConversation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_legacyConversation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyConversationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyOneOnOneConversationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyGroupConversationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyOneOnOneSequenceNumbers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyOneOnOneConversationInfo_UnviewedReceivedSnap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyOneOnOneConversationInfo_UnexpiredSentSnap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_legacyConversation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyOneOnOneSequenceNumbers_SequenceNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_legacyConversation_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LegacyConversationInfo_LegacyOneOnOneConversationInfo)(nil),
		(*LegacyConversationInfo_LegacyGroupConversationInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_legacyConversation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_legacyConversation_proto_goTypes,
		DependencyIndexes: file_legacyConversation_proto_depIdxs,
		MessageInfos:      file_legacyConversation_proto_msgTypes,
	}.Build()
	File_legacyConversation_proto = out.File
	file_legacyConversation_proto_rawDesc = nil
	file_legacyConversation_proto_goTypes = nil
	file_legacyConversation_proto_depIdxs = nil
}
