// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: status.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StreakStatus int32

const (
	StreakStatus_STREAK_STATUS_UNSET StreakStatus = 0
	StreakStatus_STREAK_STATUS_START StreakStatus = 1
	StreakStatus_STREAK_STATUS_END   StreakStatus = 2
)

// Enum value maps for StreakStatus.
var (
	StreakStatus_name = map[int32]string{
		0: "STREAK_STATUS_UNSET",
		1: "STREAK_STATUS_START",
		2: "STREAK_STATUS_END",
	}
	StreakStatus_value = map[string]int32{
		"STREAK_STATUS_UNSET": 0,
		"STREAK_STATUS_START": 1,
		"STREAK_STATUS_END":   2,
	}
)

func (x StreakStatus) Enum() *StreakStatus {
	p := new(StreakStatus)
	*p = x
	return p
}

func (x StreakStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreakStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[0].Descriptor()
}

func (StreakStatus) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[0]
}

func (x StreakStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreakStatus.Descriptor instead.
func (StreakStatus) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

type InviteLinkStatus int32

const (
	InviteLinkStatus_INVITE_LINK_STATUS_UNSET   InviteLinkStatus = 0
	InviteLinkStatus_INVITE_LINK_STATUS_CREATED InviteLinkStatus = 1
	InviteLinkStatus_INVITE_LINK_STATUS_DELETED InviteLinkStatus = 2
)

// Enum value maps for InviteLinkStatus.
var (
	InviteLinkStatus_name = map[int32]string{
		0: "INVITE_LINK_STATUS_UNSET",
		1: "INVITE_LINK_STATUS_CREATED",
		2: "INVITE_LINK_STATUS_DELETED",
	}
	InviteLinkStatus_value = map[string]int32{
		"INVITE_LINK_STATUS_UNSET":   0,
		"INVITE_LINK_STATUS_CREATED": 1,
		"INVITE_LINK_STATUS_DELETED": 2,
	}
)

func (x InviteLinkStatus) Enum() *InviteLinkStatus {
	p := new(InviteLinkStatus)
	*p = x
	return p
}

func (x InviteLinkStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteLinkStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[1].Descriptor()
}

func (InviteLinkStatus) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[1]
}

func (x InviteLinkStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteLinkStatus.Descriptor instead.
func (InviteLinkStatus) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{1}
}

type ChangeConversationRetentionPolicyDisplayStatus int32

const (
	ChangeConversationRetentionPolicyDisplayStatus_DISPLAY_TYPE_UNSET                    ChangeConversationRetentionPolicyDisplayStatus = 0
	ChangeConversationRetentionPolicyDisplayStatus_DISPLAY_TYPE_PERMANENT_USER_INITIATED ChangeConversationRetentionPolicyDisplayStatus = 1
	ChangeConversationRetentionPolicyDisplayStatus_DISPLAY_TYPE_PERMANENT_SYSTEM         ChangeConversationRetentionPolicyDisplayStatus = 2
	ChangeConversationRetentionPolicyDisplayStatus_DISPLAY_TYPE_TOGGLEABLE               ChangeConversationRetentionPolicyDisplayStatus = 3
)

// Enum value maps for ChangeConversationRetentionPolicyDisplayStatus.
var (
	ChangeConversationRetentionPolicyDisplayStatus_name = map[int32]string{
		0: "DISPLAY_TYPE_UNSET",
		1: "DISPLAY_TYPE_PERMANENT_USER_INITIATED",
		2: "DISPLAY_TYPE_PERMANENT_SYSTEM",
		3: "DISPLAY_TYPE_TOGGLEABLE",
	}
	ChangeConversationRetentionPolicyDisplayStatus_value = map[string]int32{
		"DISPLAY_TYPE_UNSET":                    0,
		"DISPLAY_TYPE_PERMANENT_USER_INITIATED": 1,
		"DISPLAY_TYPE_PERMANENT_SYSTEM":         2,
		"DISPLAY_TYPE_TOGGLEABLE":               3,
	}
)

func (x ChangeConversationRetentionPolicyDisplayStatus) Enum() *ChangeConversationRetentionPolicyDisplayStatus {
	p := new(ChangeConversationRetentionPolicyDisplayStatus)
	*p = x
	return p
}

func (x ChangeConversationRetentionPolicyDisplayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeConversationRetentionPolicyDisplayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[2].Descriptor()
}

func (ChangeConversationRetentionPolicyDisplayStatus) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[2]
}

func (x ChangeConversationRetentionPolicyDisplayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeConversationRetentionPolicyDisplayStatus.Descriptor instead.
func (ChangeConversationRetentionPolicyDisplayStatus) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{2}
}

type MediaTypeToCountStatus_Type int32

const (
	MediaTypeToCountStatus_Type_UNKNOWN_MEDIA_COUNT_STATUS MediaTypeToCountStatus_Type = 0
	MediaTypeToCountStatus_Type_IMAGE_MEDIA_COUNT_STATUS   MediaTypeToCountStatus_Type = 1
	MediaTypeToCountStatus_Type_VIDEO_MEDIA_COUNT_STATUS   MediaTypeToCountStatus_Type = 2
)

// Enum value maps for MediaTypeToCountStatus_Type.
var (
	MediaTypeToCountStatus_Type_name = map[int32]string{
		0: "UNKNOWN_MEDIA_COUNT_STATUS",
		1: "IMAGE_MEDIA_COUNT_STATUS",
		2: "VIDEO_MEDIA_COUNT_STATUS",
	}
	MediaTypeToCountStatus_Type_value = map[string]int32{
		"UNKNOWN_MEDIA_COUNT_STATUS": 0,
		"IMAGE_MEDIA_COUNT_STATUS":   1,
		"VIDEO_MEDIA_COUNT_STATUS":   2,
	}
)

func (x MediaTypeToCountStatus_Type) Enum() *MediaTypeToCountStatus_Type {
	p := new(MediaTypeToCountStatus_Type)
	*p = x
	return p
}

func (x MediaTypeToCountStatus_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaTypeToCountStatus_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[3].Descriptor()
}

func (MediaTypeToCountStatus_Type) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[3]
}

func (x MediaTypeToCountStatus_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaTypeToCountStatus_Type.Descriptor instead.
func (MediaTypeToCountStatus_Type) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{3}
}

type MessageEraseType int32

const (
	MessageEraseType_MESSAGE_TYPE_UNSET MessageEraseType = 0
	MessageEraseType_MESSAGE_TYPE_CHAT  MessageEraseType = 1
	MessageEraseType_MESSAGE_TYPE_SNAP  MessageEraseType = 2
)

// Enum value maps for MessageEraseType.
var (
	MessageEraseType_name = map[int32]string{
		0: "MESSAGE_TYPE_UNSET",
		1: "MESSAGE_TYPE_CHAT",
		2: "MESSAGE_TYPE_SNAP",
	}
	MessageEraseType_value = map[string]int32{
		"MESSAGE_TYPE_UNSET": 0,
		"MESSAGE_TYPE_CHAT":  1,
		"MESSAGE_TYPE_SNAP":  2,
	}
)

func (x MessageEraseType) Enum() *MessageEraseType {
	p := new(MessageEraseType)
	*p = x
	return p
}

func (x MessageEraseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageEraseType) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[4].Descriptor()
}

func (MessageEraseType) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[4]
}

func (x MessageEraseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageEraseType.Descriptor instead.
func (MessageEraseType) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{4}
}

type ParticipantStatusChange int32

const (
	ParticipantStatusChange_STATUS_ADDED   ParticipantStatusChange = 0
	ParticipantStatusChange_STATUS_CREATED ParticipantStatusChange = 1
	ParticipantStatusChange_STATUS_LEFT    ParticipantStatusChange = 2
)

// Enum value maps for ParticipantStatusChange.
var (
	ParticipantStatusChange_name = map[int32]string{
		0: "STATUS_ADDED",
		1: "STATUS_CREATED",
		2: "STATUS_LEFT",
	}
	ParticipantStatusChange_value = map[string]int32{
		"STATUS_ADDED":   0,
		"STATUS_CREATED": 1,
		"STATUS_LEFT":    2,
	}
)

func (x ParticipantStatusChange) Enum() *ParticipantStatusChange {
	p := new(ParticipantStatusChange)
	*p = x
	return p
}

func (x ParticipantStatusChange) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantStatusChange) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[5].Descriptor()
}

func (ParticipantStatusChange) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[5]
}

func (x ParticipantStatusChange) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantStatusChange.Descriptor instead.
func (ParticipantStatusChange) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{5}
}

type ParticipantLeaveReason int32

const (
	ParticipantLeaveReason_LEAVE_REASON_UNSET          ParticipantLeaveReason = 0
	ParticipantLeaveReason_LEAVE_REASON_SELF_INITIATED ParticipantLeaveReason = 1
	ParticipantLeaveReason_LEAVE_REASON_KICKED         ParticipantLeaveReason = 2
)

// Enum value maps for ParticipantLeaveReason.
var (
	ParticipantLeaveReason_name = map[int32]string{
		0: "LEAVE_REASON_UNSET",
		1: "LEAVE_REASON_SELF_INITIATED",
		2: "LEAVE_REASON_KICKED",
	}
	ParticipantLeaveReason_value = map[string]int32{
		"LEAVE_REASON_UNSET":          0,
		"LEAVE_REASON_SELF_INITIATED": 1,
		"LEAVE_REASON_KICKED":         2,
	}
)

func (x ParticipantLeaveReason) Enum() *ParticipantLeaveReason {
	p := new(ParticipantLeaveReason)
	*p = x
	return p
}

func (x ParticipantLeaveReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantLeaveReason) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[6].Descriptor()
}

func (ParticipantLeaveReason) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[6]
}

func (x ParticipantLeaveReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantLeaveReason.Descriptor instead.
func (ParticipantLeaveReason) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{6}
}

type ScreenCaptureType int32

const (
	ScreenCaptureType_SCREEN_SHOT   ScreenCaptureType = 0
	ScreenCaptureType_SCREEN_RECORD ScreenCaptureType = 1
)

// Enum value maps for ScreenCaptureType.
var (
	ScreenCaptureType_name = map[int32]string{
		0: "SCREEN_SHOT",
		1: "SCREEN_RECORD",
	}
	ScreenCaptureType_value = map[string]int32{
		"SCREEN_SHOT":   0,
		"SCREEN_RECORD": 1,
	}
)

func (x ScreenCaptureType) Enum() *ScreenCaptureType {
	p := new(ScreenCaptureType)
	*p = x
	return p
}

func (x ScreenCaptureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScreenCaptureType) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[7].Descriptor()
}

func (ScreenCaptureType) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[7]
}

func (x ScreenCaptureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScreenCaptureType.Descriptor instead.
func (ScreenCaptureType) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{7}
}

type CallStatus int32

const (
	CallStatus_STARTED CallStatus = 0
	CallStatus_ENDED   CallStatus = 1
	CallStatus_LEFT    CallStatus = 2
	CallStatus_JOINED  CallStatus = 3
	CallStatus_MISSED  CallStatus = 4
)

// Enum value maps for CallStatus.
var (
	CallStatus_name = map[int32]string{
		0: "STARTED",
		1: "ENDED",
		2: "LEFT",
		3: "JOINED",
		4: "MISSED",
	}
	CallStatus_value = map[string]int32{
		"STARTED": 0,
		"ENDED":   1,
		"LEFT":    2,
		"JOINED":  3,
		"MISSED":  4,
	}
)

func (x CallStatus) Enum() *CallStatus {
	p := new(CallStatus)
	*p = x
	return p
}

func (x CallStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[8].Descriptor()
}

func (CallStatus) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[8]
}

func (x CallStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallStatus.Descriptor instead.
func (CallStatus) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{8}
}

type CallType int32

const (
	CallType_AUDIO CallType = 0
	CallType_VIDEO CallType = 1
)

// Enum value maps for CallType.
var (
	CallType_name = map[int32]string{
		0: "AUDIO",
		1: "VIDEO",
	}
	CallType_value = map[string]int32{
		"AUDIO": 0,
		"VIDEO": 1,
	}
)

func (x CallType) Enum() *CallType {
	p := new(CallType)
	*p = x
	return p
}

func (x CallType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallType) Descriptor() protoreflect.EnumDescriptor {
	return file_status_proto_enumTypes[9].Descriptor()
}

func (CallType) Type() protoreflect.EnumType {
	return &file_status_proto_enumTypes[9]
}

func (x CallType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallType.Descriptor instead.
func (CallType) EnumDescriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{9}
}

type StatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Status:
	//
	//	*StatusMessage_ScreenCapture
	//	*StatusMessage_CallingStatus
	//	*StatusMessage_ParticipantChange
	//	*StatusMessage_NameStatusChange
	//	*StatusMessage_MessageErase
	//	*StatusMessage_GroupChatCreated
	//	*StatusMessage_SaveToCameraRoll
	//	*StatusMessage_ChangeConversationRetentionPolicy
	//	*StatusMessage_GameClosed
	//	*StatusMessage_InviteLink
	//	*StatusMessage_GroupInviteStickerJoinTextPrompt
	//	*StatusMessage_CanvasUpdate
	//	*StatusMessage_LiveLocationTerminated
	//	*StatusMessage_InMyContacts
	//	*StatusMessage_AcceptFamilyCenterInvite
	//	*StatusMessage_LeaveFamilyCenter
	//	*StatusMessage_DwebUpsell
	//	*StatusMessage_QuoteReplyShare
	//	*StatusMessage_UpdateChatWallpaperStatusMessage
	//	*StatusMessage_PlusGift
	//	*StatusMessage_Streak
	//	*StatusMessage_MerlinWelcome
	//	*StatusMessage_LiveLocationGroupMessage
	//	*StatusMessage_SnapPostOpenViewingPolicyStatusMessage
	Status isStatusMessage_Status `protobuf_oneof:"status"`
}

func (x *StatusMessage) Reset() {
	*x = StatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusMessage) ProtoMessage() {}

func (x *StatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusMessage.ProtoReflect.Descriptor instead.
func (*StatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{0}
}

func (m *StatusMessage) GetStatus() isStatusMessage_Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (x *StatusMessage) GetScreenCapture() *ScreenCaptureStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_ScreenCapture); ok {
		return x.ScreenCapture
	}
	return nil
}

func (x *StatusMessage) GetCallingStatus() *CallingStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_CallingStatus); ok {
		return x.CallingStatus
	}
	return nil
}

func (x *StatusMessage) GetParticipantChange() *ParticipantChangeStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_ParticipantChange); ok {
		return x.ParticipantChange
	}
	return nil
}

func (x *StatusMessage) GetNameStatusChange() *NameChangeStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_NameStatusChange); ok {
		return x.NameStatusChange
	}
	return nil
}

func (x *StatusMessage) GetMessageErase() *MessageEraseStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_MessageErase); ok {
		return x.MessageErase
	}
	return nil
}

func (x *StatusMessage) GetGroupChatCreated() *GroupChatCreatedStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_GroupChatCreated); ok {
		return x.GroupChatCreated
	}
	return nil
}

func (x *StatusMessage) GetSaveToCameraRoll() *SaveToCameraRollStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_SaveToCameraRoll); ok {
		return x.SaveToCameraRoll
	}
	return nil
}

func (x *StatusMessage) GetChangeConversationRetentionPolicy() *ChangeConversationRetentionPolicyStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_ChangeConversationRetentionPolicy); ok {
		return x.ChangeConversationRetentionPolicy
	}
	return nil
}

func (x *StatusMessage) GetGameClosed() *GameClosedStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_GameClosed); ok {
		return x.GameClosed
	}
	return nil
}

func (x *StatusMessage) GetInviteLink() *InviteLinkStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_InviteLink); ok {
		return x.InviteLink
	}
	return nil
}

func (x *StatusMessage) GetGroupInviteStickerJoinTextPrompt() *GroupInviteStickerJoinTextPromptStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_GroupInviteStickerJoinTextPrompt); ok {
		return x.GroupInviteStickerJoinTextPrompt
	}
	return nil
}

func (x *StatusMessage) GetCanvasUpdate() *CanvasCustomUpdateStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_CanvasUpdate); ok {
		return x.CanvasUpdate
	}
	return nil
}

func (x *StatusMessage) GetLiveLocationTerminated() *LiveLocationShareTerminatedStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_LiveLocationTerminated); ok {
		return x.LiveLocationTerminated
	}
	return nil
}

func (x *StatusMessage) GetInMyContacts() *InMyContactsStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_InMyContacts); ok {
		return x.InMyContacts
	}
	return nil
}

func (x *StatusMessage) GetAcceptFamilyCenterInvite() *AcceptFamilyCenterInviteStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_AcceptFamilyCenterInvite); ok {
		return x.AcceptFamilyCenterInvite
	}
	return nil
}

func (x *StatusMessage) GetLeaveFamilyCenter() *LeaveFamilyCenterStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_LeaveFamilyCenter); ok {
		return x.LeaveFamilyCenter
	}
	return nil
}

func (x *StatusMessage) GetDwebUpsell() *DWebUpsellStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_DwebUpsell); ok {
		return x.DwebUpsell
	}
	return nil
}

func (x *StatusMessage) GetQuoteReplyShare() *QuoteReplyShareStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_QuoteReplyShare); ok {
		return x.QuoteReplyShare
	}
	return nil
}

func (x *StatusMessage) GetUpdateChatWallpaperStatusMessage() *UpdateChatWallpaperStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_UpdateChatWallpaperStatusMessage); ok {
		return x.UpdateChatWallpaperStatusMessage
	}
	return nil
}

func (x *StatusMessage) GetPlusGift() *PlusGiftStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_PlusGift); ok {
		return x.PlusGift
	}
	return nil
}

func (x *StatusMessage) GetStreak() *StreakStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_Streak); ok {
		return x.Streak
	}
	return nil
}

func (x *StatusMessage) GetMerlinWelcome() *MerlinWelcomeStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_MerlinWelcome); ok {
		return x.MerlinWelcome
	}
	return nil
}

func (x *StatusMessage) GetLiveLocationGroupMessage() *LiveLocationGroupShareStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_LiveLocationGroupMessage); ok {
		return x.LiveLocationGroupMessage
	}
	return nil
}

func (x *StatusMessage) GetSnapPostOpenViewingPolicyStatusMessage() *SnapPostOpenViewingPolicyStatusMessage {
	if x, ok := x.GetStatus().(*StatusMessage_SnapPostOpenViewingPolicyStatusMessage); ok {
		return x.SnapPostOpenViewingPolicyStatusMessage
	}
	return nil
}

type isStatusMessage_Status interface {
	isStatusMessage_Status()
}

type StatusMessage_ScreenCapture struct {
	ScreenCapture *ScreenCaptureStatusMessage `protobuf:"bytes,1,opt,name=screenCapture,proto3,oneof"`
}

type StatusMessage_CallingStatus struct {
	CallingStatus *CallingStatusMessage `protobuf:"bytes,2,opt,name=callingStatus,proto3,oneof"`
}

type StatusMessage_ParticipantChange struct {
	ParticipantChange *ParticipantChangeStatusMessage `protobuf:"bytes,3,opt,name=participantChange,proto3,oneof"`
}

type StatusMessage_NameStatusChange struct {
	NameStatusChange *NameChangeStatusMessage `protobuf:"bytes,4,opt,name=nameStatusChange,proto3,oneof"`
}

type StatusMessage_MessageErase struct {
	MessageErase *MessageEraseStatusMessage `protobuf:"bytes,5,opt,name=messageErase,proto3,oneof"`
}

type StatusMessage_GroupChatCreated struct {
	GroupChatCreated *GroupChatCreatedStatusMessage `protobuf:"bytes,6,opt,name=groupChatCreated,proto3,oneof"`
}

type StatusMessage_SaveToCameraRoll struct {
	SaveToCameraRoll *SaveToCameraRollStatusMessage `protobuf:"bytes,7,opt,name=saveToCameraRoll,proto3,oneof"`
}

type StatusMessage_ChangeConversationRetentionPolicy struct {
	ChangeConversationRetentionPolicy *ChangeConversationRetentionPolicyStatusMessage `protobuf:"bytes,8,opt,name=changeConversationRetentionPolicy,proto3,oneof"`
}

type StatusMessage_GameClosed struct {
	GameClosed *GameClosedStatusMessage `protobuf:"bytes,9,opt,name=gameClosed,proto3,oneof"`
}

type StatusMessage_InviteLink struct {
	InviteLink *InviteLinkStatusMessage `protobuf:"bytes,10,opt,name=inviteLink,proto3,oneof"`
}

type StatusMessage_GroupInviteStickerJoinTextPrompt struct {
	GroupInviteStickerJoinTextPrompt *GroupInviteStickerJoinTextPromptStatusMessage `protobuf:"bytes,11,opt,name=groupInviteStickerJoinTextPrompt,proto3,oneof"`
}

type StatusMessage_CanvasUpdate struct {
	CanvasUpdate *CanvasCustomUpdateStatusMessage `protobuf:"bytes,12,opt,name=canvasUpdate,proto3,oneof"`
}

type StatusMessage_LiveLocationTerminated struct {
	LiveLocationTerminated *LiveLocationShareTerminatedStatusMessage `protobuf:"bytes,13,opt,name=liveLocationTerminated,proto3,oneof"`
}

type StatusMessage_InMyContacts struct {
	InMyContacts *InMyContactsStatusMessage `protobuf:"bytes,14,opt,name=inMyContacts,proto3,oneof"`
}

type StatusMessage_AcceptFamilyCenterInvite struct {
	AcceptFamilyCenterInvite *AcceptFamilyCenterInviteStatusMessage `protobuf:"bytes,15,opt,name=acceptFamilyCenterInvite,proto3,oneof"`
}

type StatusMessage_LeaveFamilyCenter struct {
	LeaveFamilyCenter *LeaveFamilyCenterStatusMessage `protobuf:"bytes,16,opt,name=leaveFamilyCenter,proto3,oneof"`
}

type StatusMessage_DwebUpsell struct {
	DwebUpsell *DWebUpsellStatusMessage `protobuf:"bytes,17,opt,name=dwebUpsell,proto3,oneof"`
}

type StatusMessage_QuoteReplyShare struct {
	QuoteReplyShare *QuoteReplyShareStatusMessage `protobuf:"bytes,18,opt,name=quoteReplyShare,proto3,oneof"`
}

type StatusMessage_UpdateChatWallpaperStatusMessage struct {
	UpdateChatWallpaperStatusMessage *UpdateChatWallpaperStatusMessage `protobuf:"bytes,19,opt,name=updateChatWallpaperStatusMessage,proto3,oneof"`
}

type StatusMessage_PlusGift struct {
	PlusGift *PlusGiftStatusMessage `protobuf:"bytes,20,opt,name=plusGift,proto3,oneof"`
}

type StatusMessage_Streak struct {
	Streak *StreakStatusMessage `protobuf:"bytes,21,opt,name=streak,proto3,oneof"`
}

type StatusMessage_MerlinWelcome struct {
	MerlinWelcome *MerlinWelcomeStatusMessage `protobuf:"bytes,22,opt,name=merlinWelcome,proto3,oneof"`
}

type StatusMessage_LiveLocationGroupMessage struct {
	LiveLocationGroupMessage *LiveLocationGroupShareStatusMessage `protobuf:"bytes,23,opt,name=liveLocationGroupMessage,proto3,oneof"`
}

type StatusMessage_SnapPostOpenViewingPolicyStatusMessage struct {
	SnapPostOpenViewingPolicyStatusMessage *SnapPostOpenViewingPolicyStatusMessage `protobuf:"bytes,24,opt,name=snapPostOpenViewingPolicyStatusMessage,proto3,oneof"`
}

func (*StatusMessage_ScreenCapture) isStatusMessage_Status() {}

func (*StatusMessage_CallingStatus) isStatusMessage_Status() {}

func (*StatusMessage_ParticipantChange) isStatusMessage_Status() {}

func (*StatusMessage_NameStatusChange) isStatusMessage_Status() {}

func (*StatusMessage_MessageErase) isStatusMessage_Status() {}

func (*StatusMessage_GroupChatCreated) isStatusMessage_Status() {}

func (*StatusMessage_SaveToCameraRoll) isStatusMessage_Status() {}

func (*StatusMessage_ChangeConversationRetentionPolicy) isStatusMessage_Status() {}

func (*StatusMessage_GameClosed) isStatusMessage_Status() {}

func (*StatusMessage_InviteLink) isStatusMessage_Status() {}

func (*StatusMessage_GroupInviteStickerJoinTextPrompt) isStatusMessage_Status() {}

func (*StatusMessage_CanvasUpdate) isStatusMessage_Status() {}

func (*StatusMessage_LiveLocationTerminated) isStatusMessage_Status() {}

func (*StatusMessage_InMyContacts) isStatusMessage_Status() {}

func (*StatusMessage_AcceptFamilyCenterInvite) isStatusMessage_Status() {}

func (*StatusMessage_LeaveFamilyCenter) isStatusMessage_Status() {}

func (*StatusMessage_DwebUpsell) isStatusMessage_Status() {}

func (*StatusMessage_QuoteReplyShare) isStatusMessage_Status() {}

func (*StatusMessage_UpdateChatWallpaperStatusMessage) isStatusMessage_Status() {}

func (*StatusMessage_PlusGift) isStatusMessage_Status() {}

func (*StatusMessage_Streak) isStatusMessage_Status() {}

func (*StatusMessage_MerlinWelcome) isStatusMessage_Status() {}

func (*StatusMessage_LiveLocationGroupMessage) isStatusMessage_Status() {}

func (*StatusMessage_SnapPostOpenViewingPolicyStatusMessage) isStatusMessage_Status() {}

type SnapPostOpenViewingPolicyStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUserId          *UUID                     `protobuf:"bytes,1,opt,name=initiatingUserId,proto3" json:"initiatingUserId,omitempty"`
	SnapPostOpenViewingPolicy SnapPostOpenViewingPolicy `protobuf:"varint,2,opt,name=snapPostOpenViewingPolicy,proto3,enum=policy.SnapPostOpenViewingPolicy" json:"snapPostOpenViewingPolicy,omitempty"`
}

func (x *SnapPostOpenViewingPolicyStatusMessage) Reset() {
	*x = SnapPostOpenViewingPolicyStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnapPostOpenViewingPolicyStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapPostOpenViewingPolicyStatusMessage) ProtoMessage() {}

func (x *SnapPostOpenViewingPolicyStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapPostOpenViewingPolicyStatusMessage.ProtoReflect.Descriptor instead.
func (*SnapPostOpenViewingPolicyStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{1}
}

func (x *SnapPostOpenViewingPolicyStatusMessage) GetInitiatingUserId() *UUID {
	if x != nil {
		return x.InitiatingUserId
	}
	return nil
}

func (x *SnapPostOpenViewingPolicyStatusMessage) GetSnapPostOpenViewingPolicy() SnapPostOpenViewingPolicy {
	if x != nil {
		return x.SnapPostOpenViewingPolicy
	}
	return SnapPostOpenViewingPolicy_POLICY_UNSET_OR_ENVELOPE
}

type LiveLocationGroupShareStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LiveLocationGroupShareStatusMessage) Reset() {
	*x = LiveLocationGroupShareStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLocationGroupShareStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLocationGroupShareStatusMessage) ProtoMessage() {}

func (x *LiveLocationGroupShareStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLocationGroupShareStatusMessage.ProtoReflect.Descriptor instead.
func (*LiveLocationGroupShareStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{2}
}

type MerlinWelcomeStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MerlinWelcomeStatusMessage) Reset() {
	*x = MerlinWelcomeStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MerlinWelcomeStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerlinWelcomeStatusMessage) ProtoMessage() {}

func (x *MerlinWelcomeStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerlinWelcomeStatusMessage.ProtoReflect.Descriptor instead.
func (*MerlinWelcomeStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{3}
}

type StreakStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StreakStatus StreakStatus `protobuf:"varint,1,opt,name=streakStatus,proto3,enum=status.StreakStatus" json:"streakStatus,omitempty"`
	StreakCount  int32        `protobuf:"varint,2,opt,name=streakCount,proto3" json:"streakCount,omitempty"`
}

func (x *StreakStatusMessage) Reset() {
	*x = StreakStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreakStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreakStatusMessage) ProtoMessage() {}

func (x *StreakStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreakStatusMessage.ProtoReflect.Descriptor instead.
func (*StreakStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{4}
}

func (x *StreakStatusMessage) GetStreakStatus() StreakStatus {
	if x != nil {
		return x.StreakStatus
	}
	return StreakStatus_STREAK_STATUS_UNSET
}

func (x *StreakStatusMessage) GetStreakCount() int32 {
	if x != nil {
		return x.StreakCount
	}
	return 0
}

type PlusGiftStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlusGiftStatusMessage) Reset() {
	*x = PlusGiftStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlusGiftStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlusGiftStatusMessage) ProtoMessage() {}

func (x *PlusGiftStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlusGiftStatusMessage.ProtoReflect.Descriptor instead.
func (*PlusGiftStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{5}
}

type UpdateChatWallpaperStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateChatWallpaperStatusMessage) Reset() {
	*x = UpdateChatWallpaperStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChatWallpaperStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChatWallpaperStatusMessage) ProtoMessage() {}

func (x *UpdateChatWallpaperStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChatWallpaperStatusMessage.ProtoReflect.Descriptor instead.
func (*UpdateChatWallpaperStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{6}
}

type QuoteReplyShareStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuoteReplyShareStatusMessage) Reset() {
	*x = QuoteReplyShareStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteReplyShareStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteReplyShareStatusMessage) ProtoMessage() {}

func (x *QuoteReplyShareStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteReplyShareStatusMessage.ProtoReflect.Descriptor instead.
func (*QuoteReplyShareStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{7}
}

type DWebUpsellStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DWebUpsellStatusMessage) Reset() {
	*x = DWebUpsellStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DWebUpsellStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DWebUpsellStatusMessage) ProtoMessage() {}

func (x *DWebUpsellStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DWebUpsellStatusMessage.ProtoReflect.Descriptor instead.
func (*DWebUpsellStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{8}
}

type LeaveFamilyCenterStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LeaveFamilyCenterStatusMessage) Reset() {
	*x = LeaveFamilyCenterStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveFamilyCenterStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveFamilyCenterStatusMessage) ProtoMessage() {}

func (x *LeaveFamilyCenterStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveFamilyCenterStatusMessage.ProtoReflect.Descriptor instead.
func (*LeaveFamilyCenterStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{9}
}

type AcceptFamilyCenterInviteStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptFamilyCenterInviteStatusMessage) Reset() {
	*x = AcceptFamilyCenterInviteStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptFamilyCenterInviteStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptFamilyCenterInviteStatusMessage) ProtoMessage() {}

func (x *AcceptFamilyCenterInviteStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptFamilyCenterInviteStatusMessage.ProtoReflect.Descriptor instead.
func (*AcceptFamilyCenterInviteStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{10}
}

type InMyContactsStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InMyContactsStatusMessage) Reset() {
	*x = InMyContactsStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InMyContactsStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InMyContactsStatusMessage) ProtoMessage() {}

func (x *InMyContactsStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InMyContactsStatusMessage.ProtoReflect.Descriptor instead.
func (*InMyContactsStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{11}
}

type LiveLocationShareTerminatedStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUserId *UUID `protobuf:"bytes,1,opt,name=initiatingUserId,proto3" json:"initiatingUserId,omitempty"`
	TerminateReason  int32 `protobuf:"varint,2,opt,name=terminateReason,proto3" json:"terminateReason,omitempty"`
}

func (x *LiveLocationShareTerminatedStatusMessage) Reset() {
	*x = LiveLocationShareTerminatedStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiveLocationShareTerminatedStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiveLocationShareTerminatedStatusMessage) ProtoMessage() {}

func (x *LiveLocationShareTerminatedStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiveLocationShareTerminatedStatusMessage.ProtoReflect.Descriptor instead.
func (*LiveLocationShareTerminatedStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{12}
}

func (x *LiveLocationShareTerminatedStatusMessage) GetInitiatingUserId() *UUID {
	if x != nil {
		return x.InitiatingUserId
	}
	return nil
}

func (x *LiveLocationShareTerminatedStatusMessage) GetTerminateReason() int32 {
	if x != nil {
		return x.TerminateReason
	}
	return 0
}

type CanvasCustomUpdateStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        *UUID                   `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	MediaUserIds []*UUID                 `protobuf:"bytes,2,rep,name=mediaUserIds,proto3" json:"mediaUserIds,omitempty"`
	TextContent  string                  `protobuf:"bytes,3,opt,name=textContent,proto3" json:"textContent,omitempty"`
	UpdateInfo   *CanvasCustomUpdateInfo `protobuf:"bytes,4,opt,name=updateInfo,proto3" json:"updateInfo,omitempty"`
}

func (x *CanvasCustomUpdateStatusMessage) Reset() {
	*x = CanvasCustomUpdateStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanvasCustomUpdateStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanvasCustomUpdateStatusMessage) ProtoMessage() {}

func (x *CanvasCustomUpdateStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanvasCustomUpdateStatusMessage.ProtoReflect.Descriptor instead.
func (*CanvasCustomUpdateStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{13}
}

func (x *CanvasCustomUpdateStatusMessage) GetAppId() *UUID {
	if x != nil {
		return x.AppId
	}
	return nil
}

func (x *CanvasCustomUpdateStatusMessage) GetMediaUserIds() []*UUID {
	if x != nil {
		return x.MediaUserIds
	}
	return nil
}

func (x *CanvasCustomUpdateStatusMessage) GetTextContent() string {
	if x != nil {
		return x.TextContent
	}
	return ""
}

func (x *CanvasCustomUpdateStatusMessage) GetUpdateInfo() *CanvasCustomUpdateInfo {
	if x != nil {
		return x.UpdateInfo
	}
	return nil
}

type CanvasCustomUpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path    string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Payload string `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *CanvasCustomUpdateInfo) Reset() {
	*x = CanvasCustomUpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanvasCustomUpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanvasCustomUpdateInfo) ProtoMessage() {}

func (x *CanvasCustomUpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanvasCustomUpdateInfo.ProtoReflect.Descriptor instead.
func (*CanvasCustomUpdateInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{14}
}

func (x *CanvasCustomUpdateInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *CanvasCustomUpdateInfo) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type GroupInviteStickerJoinTextPromptStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteGroupId   *UUID  `protobuf:"bytes,1,opt,name=inviteGroupId,proto3" json:"inviteGroupId,omitempty"`
	InviteGroupName string `protobuf:"bytes,2,opt,name=inviteGroupName,proto3" json:"inviteGroupName,omitempty"`
	InviteId        *UUID  `protobuf:"bytes,3,opt,name=inviteId,proto3" json:"inviteId,omitempty"`
}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) Reset() {
	*x = GroupInviteStickerJoinTextPromptStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupInviteStickerJoinTextPromptStatusMessage) ProtoMessage() {}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupInviteStickerJoinTextPromptStatusMessage.ProtoReflect.Descriptor instead.
func (*GroupInviteStickerJoinTextPromptStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{15}
}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) GetInviteGroupId() *UUID {
	if x != nil {
		return x.InviteGroupId
	}
	return nil
}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) GetInviteGroupName() string {
	if x != nil {
		return x.InviteGroupName
	}
	return ""
}

func (x *GroupInviteStickerJoinTextPromptStatusMessage) GetInviteId() *UUID {
	if x != nil {
		return x.InviteId
	}
	return nil
}

type InviteLinkStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUserId *UUID            `protobuf:"bytes,1,opt,name=initiatingUserId,proto3" json:"initiatingUserId,omitempty"`
	InviteLinkStatus InviteLinkStatus `protobuf:"varint,2,opt,name=inviteLinkStatus,proto3,enum=status.InviteLinkStatus" json:"inviteLinkStatus,omitempty"`
}

func (x *InviteLinkStatusMessage) Reset() {
	*x = InviteLinkStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteLinkStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteLinkStatusMessage) ProtoMessage() {}

func (x *InviteLinkStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteLinkStatusMessage.ProtoReflect.Descriptor instead.
func (*InviteLinkStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{16}
}

func (x *InviteLinkStatusMessage) GetInitiatingUserId() *UUID {
	if x != nil {
		return x.InitiatingUserId
	}
	return nil
}

func (x *InviteLinkStatusMessage) GetInviteLinkStatus() InviteLinkStatus {
	if x != nil {
		return x.InviteLinkStatus
	}
	return InviteLinkStatus_INVITE_LINK_STATUS_UNSET
}

type GameClosedStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId        string  `protobuf:"bytes,1,opt,name=appId,proto3" json:"appId,omitempty"`
	Participants []*UUID `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *GameClosedStatusMessage) Reset() {
	*x = GameClosedStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameClosedStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameClosedStatusMessage) ProtoMessage() {}

func (x *GameClosedStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameClosedStatusMessage.ProtoReflect.Descriptor instead.
func (*GameClosedStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{17}
}

func (x *GameClosedStatusMessage) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GameClosedStatusMessage) GetParticipants() []*UUID {
	if x != nil {
		return x.Participants
	}
	return nil
}

type ChangeConversationRetentionPolicyStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUserId                                *UUID                                          `protobuf:"bytes,1,opt,name=initiatingUserId,proto3" json:"initiatingUserId,omitempty"`
	NewRetentionPolicy                              *RetentionPolicy                               `protobuf:"bytes,2,opt,name=newRetentionPolicy,proto3" json:"newRetentionPolicy,omitempty"`
	DisplayType                                     ChangeConversationRetentionPolicyDisplayStatus `protobuf:"varint,3,opt,name=displayType,proto3,enum=status.ChangeConversationRetentionPolicyDisplayStatus" json:"displayType,omitempty"`
	AlsoRevertedSnapPostOpenViewingPolicyToEnvelope bool                                           `protobuf:"varint,5,opt,name=alsoRevertedSnapPostOpenViewingPolicyToEnvelope,proto3" json:"alsoRevertedSnapPostOpenViewingPolicyToEnvelope,omitempty"`
}

func (x *ChangeConversationRetentionPolicyStatusMessage) Reset() {
	*x = ChangeConversationRetentionPolicyStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeConversationRetentionPolicyStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeConversationRetentionPolicyStatusMessage) ProtoMessage() {}

func (x *ChangeConversationRetentionPolicyStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeConversationRetentionPolicyStatusMessage.ProtoReflect.Descriptor instead.
func (*ChangeConversationRetentionPolicyStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{18}
}

func (x *ChangeConversationRetentionPolicyStatusMessage) GetInitiatingUserId() *UUID {
	if x != nil {
		return x.InitiatingUserId
	}
	return nil
}

func (x *ChangeConversationRetentionPolicyStatusMessage) GetNewRetentionPolicy() *RetentionPolicy {
	if x != nil {
		return x.NewRetentionPolicy
	}
	return nil
}

func (x *ChangeConversationRetentionPolicyStatusMessage) GetDisplayType() ChangeConversationRetentionPolicyDisplayStatus {
	if x != nil {
		return x.DisplayType
	}
	return ChangeConversationRetentionPolicyDisplayStatus_DISPLAY_TYPE_UNSET
}

func (x *ChangeConversationRetentionPolicyStatusMessage) GetAlsoRevertedSnapPostOpenViewingPolicyToEnvelope() bool {
	if x != nil {
		return x.AlsoRevertedSnapPostOpenViewingPolicyToEnvelope
	}
	return false
}

type SaveToCameraRollStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId           *UUID               `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MessageId        int64               `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	MediaTypeToCount []*MediaTypeToCount `protobuf:"bytes,3,rep,name=mediaTypeToCount,proto3" json:"mediaTypeToCount,omitempty"`
}

func (x *SaveToCameraRollStatusMessage) Reset() {
	*x = SaveToCameraRollStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveToCameraRollStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToCameraRollStatusMessage) ProtoMessage() {}

func (x *SaveToCameraRollStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToCameraRollStatusMessage.ProtoReflect.Descriptor instead.
func (*SaveToCameraRollStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{19}
}

func (x *SaveToCameraRollStatusMessage) GetUserId() *UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *SaveToCameraRollStatusMessage) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *SaveToCameraRollStatusMessage) GetMediaTypeToCount() []*MediaTypeToCount {
	if x != nil {
		return x.MediaTypeToCount
	}
	return nil
}

type MediaTypeToCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MediaType MediaTypeToCountStatus_Type `protobuf:"varint,1,opt,name=mediaType,proto3,enum=status.MediaTypeToCountStatus_Type" json:"mediaType,omitempty"`
	Count     int64                       `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MediaTypeToCount) Reset() {
	*x = MediaTypeToCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaTypeToCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaTypeToCount) ProtoMessage() {}

func (x *MediaTypeToCount) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaTypeToCount.ProtoReflect.Descriptor instead.
func (*MediaTypeToCount) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{20}
}

func (x *MediaTypeToCount) GetMediaType() MediaTypeToCountStatus_Type {
	if x != nil {
		return x.MediaType
	}
	return MediaTypeToCountStatus_Type_UNKNOWN_MEDIA_COUNT_STATUS
}

func (x *MediaTypeToCount) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GroupChatCreatedStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUser *UUID   `protobuf:"bytes,1,opt,name=initiatingUser,proto3" json:"initiatingUser,omitempty"`
	Participants   []*UUID `protobuf:"bytes,2,rep,name=participants,proto3" json:"participants,omitempty"`
	GroupChatName  string  `protobuf:"bytes,3,opt,name=groupChatName,proto3" json:"groupChatName,omitempty"`
}

func (x *GroupChatCreatedStatusMessage) Reset() {
	*x = GroupChatCreatedStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupChatCreatedStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupChatCreatedStatusMessage) ProtoMessage() {}

func (x *GroupChatCreatedStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupChatCreatedStatusMessage.ProtoReflect.Descriptor instead.
func (*GroupChatCreatedStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{21}
}

func (x *GroupChatCreatedStatusMessage) GetInitiatingUser() *UUID {
	if x != nil {
		return x.InitiatingUser
	}
	return nil
}

func (x *GroupChatCreatedStatusMessage) GetParticipants() []*UUID {
	if x != nil {
		return x.Participants
	}
	return nil
}

func (x *GroupChatCreatedStatusMessage) GetGroupChatName() string {
	if x != nil {
		return x.GroupChatName
	}
	return ""
}

type MessageEraseStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      *UUID            `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	MessageType MessageEraseType `protobuf:"varint,2,opt,name=messageType,proto3,enum=status.MessageEraseType" json:"messageType,omitempty"`
}

func (x *MessageEraseStatusMessage) Reset() {
	*x = MessageEraseStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEraseStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEraseStatusMessage) ProtoMessage() {}

func (x *MessageEraseStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEraseStatusMessage.ProtoReflect.Descriptor instead.
func (*MessageEraseStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{22}
}

func (x *MessageEraseStatusMessage) GetUserId() *UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *MessageEraseStatusMessage) GetMessageType() MessageEraseType {
	if x != nil {
		return x.MessageType
	}
	return MessageEraseType_MESSAGE_TYPE_UNSET
}

type NameChangeStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiatingUserId *UUID  `protobuf:"bytes,1,opt,name=initiatingUserId,proto3" json:"initiatingUserId,omitempty"`
	OldName          string `protobuf:"bytes,2,opt,name=oldName,proto3" json:"oldName,omitempty"`
	NewName          string `protobuf:"bytes,3,opt,name=newName,proto3" json:"newName,omitempty"`
}

func (x *NameChangeStatusMessage) Reset() {
	*x = NameChangeStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameChangeStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameChangeStatusMessage) ProtoMessage() {}

func (x *NameChangeStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameChangeStatusMessage.ProtoReflect.Descriptor instead.
func (*NameChangeStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{23}
}

func (x *NameChangeStatusMessage) GetInitiatingUserId() *UUID {
	if x != nil {
		return x.InitiatingUserId
	}
	return nil
}

func (x *NameChangeStatusMessage) GetOldName() string {
	if x != nil {
		return x.OldName
	}
	return ""
}

func (x *NameChangeStatusMessage) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

type ScreenCaptureStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CapturingUser     *UUID             `protobuf:"bytes,1,opt,name=capturingUser,proto3" json:"capturingUser,omitempty"`
	CaptureType       ScreenCaptureType `protobuf:"varint,2,opt,name=captureType,proto3,enum=status.ScreenCaptureType" json:"captureType,omitempty"`
	CaptureSource     int32             `protobuf:"varint,3,opt,name=captureSource,proto3" json:"captureSource,omitempty"`
	CapturingUserInfo int32             `protobuf:"varint,4,opt,name=capturingUserInfo,proto3" json:"capturingUserInfo,omitempty"`
}

func (x *ScreenCaptureStatusMessage) Reset() {
	*x = ScreenCaptureStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenCaptureStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenCaptureStatusMessage) ProtoMessage() {}

func (x *ScreenCaptureStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenCaptureStatusMessage.ProtoReflect.Descriptor instead.
func (*ScreenCaptureStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{24}
}

func (x *ScreenCaptureStatusMessage) GetCapturingUser() *UUID {
	if x != nil {
		return x.CapturingUser
	}
	return nil
}

func (x *ScreenCaptureStatusMessage) GetCaptureType() ScreenCaptureType {
	if x != nil {
		return x.CaptureType
	}
	return ScreenCaptureType_SCREEN_SHOT
}

func (x *ScreenCaptureStatusMessage) GetCaptureSource() int32 {
	if x != nil {
		return x.CaptureSource
	}
	return 0
}

func (x *ScreenCaptureStatusMessage) GetCapturingUserInfo() int32 {
	if x != nil {
		return x.CapturingUserInfo
	}
	return 0
}

type CallingStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallStatus   CallStatus `protobuf:"varint,1,opt,name=callStatus,proto3,enum=status.CallStatus" json:"callStatus,omitempty"`
	CallType     CallType   `protobuf:"varint,2,opt,name=callType,proto3,enum=status.CallType" json:"callType,omitempty"`
	UserId       *UUID      `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	CallDuration int32      `protobuf:"varint,4,opt,name=callDuration,proto3" json:"callDuration,omitempty"`
	Participants []*UUID    `protobuf:"bytes,5,rep,name=participants,proto3" json:"participants,omitempty"`
}

func (x *CallingStatusMessage) Reset() {
	*x = CallingStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallingStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallingStatusMessage) ProtoMessage() {}

func (x *CallingStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallingStatusMessage.ProtoReflect.Descriptor instead.
func (*CallingStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{25}
}

func (x *CallingStatusMessage) GetCallStatus() CallStatus {
	if x != nil {
		return x.CallStatus
	}
	return CallStatus_STARTED
}

func (x *CallingStatusMessage) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_AUDIO
}

func (x *CallingStatusMessage) GetUserId() *UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *CallingStatusMessage) GetCallDuration() int32 {
	if x != nil {
		return x.CallDuration
	}
	return 0
}

func (x *CallingStatusMessage) GetParticipants() []*UUID {
	if x != nil {
		return x.Participants
	}
	return nil
}

type ParticipantChangeStatusMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusChanges            []*ParticipantChangeStatusMessage_Entry `protobuf:"bytes,1,rep,name=statusChanges,proto3" json:"statusChanges,omitempty"`
	InitiatingUserDeprecated *UUID                                   `protobuf:"bytes,2,opt,name=initiatingUserDeprecated,proto3" json:"initiatingUserDeprecated,omitempty"`
	InitiatingUser           *UUID                                   `protobuf:"bytes,3,opt,name=initiatingUser,proto3" json:"initiatingUser,omitempty"`
}

func (x *ParticipantChangeStatusMessage) Reset() {
	*x = ParticipantChangeStatusMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantChangeStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantChangeStatusMessage) ProtoMessage() {}

func (x *ParticipantChangeStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantChangeStatusMessage.ProtoReflect.Descriptor instead.
func (*ParticipantChangeStatusMessage) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{26}
}

func (x *ParticipantChangeStatusMessage) GetStatusChanges() []*ParticipantChangeStatusMessage_Entry {
	if x != nil {
		return x.StatusChanges
	}
	return nil
}

func (x *ParticipantChangeStatusMessage) GetInitiatingUserDeprecated() *UUID {
	if x != nil {
		return x.InitiatingUserDeprecated
	}
	return nil
}

func (x *ParticipantChangeStatusMessage) GetInitiatingUser() *UUID {
	if x != nil {
		return x.InitiatingUser
	}
	return nil
}

type ParticipantChangeStatusMessage_Entry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AffectedUser *UUID                   `protobuf:"bytes,1,opt,name=affectedUser,proto3" json:"affectedUser,omitempty"`
	StatusChange ParticipantStatusChange `protobuf:"varint,2,opt,name=statusChange,proto3,enum=status.ParticipantStatusChange" json:"statusChange,omitempty"`
	ChangeOrigin int32                   `protobuf:"varint,3,opt,name=changeOrigin,proto3" json:"changeOrigin,omitempty"`
	LeaveReason  ParticipantLeaveReason  `protobuf:"varint,4,opt,name=leaveReason,proto3,enum=status.ParticipantLeaveReason" json:"leaveReason,omitempty"`
}

func (x *ParticipantChangeStatusMessage_Entry) Reset() {
	*x = ParticipantChangeStatusMessage_Entry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantChangeStatusMessage_Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantChangeStatusMessage_Entry) ProtoMessage() {}

func (x *ParticipantChangeStatusMessage_Entry) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantChangeStatusMessage_Entry.ProtoReflect.Descriptor instead.
func (*ParticipantChangeStatusMessage_Entry) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{27}
}

func (x *ParticipantChangeStatusMessage_Entry) GetAffectedUser() *UUID {
	if x != nil {
		return x.AffectedUser
	}
	return nil
}

func (x *ParticipantChangeStatusMessage_Entry) GetStatusChange() ParticipantStatusChange {
	if x != nil {
		return x.StatusChange
	}
	return ParticipantStatusChange_STATUS_ADDED
}

func (x *ParticipantChangeStatusMessage_Entry) GetChangeOrigin() int32 {
	if x != nil {
		return x.ChangeOrigin
	}
	return 0
}

func (x *ParticipantChangeStatusMessage_Entry) GetLeaveReason() ParticipantLeaveReason {
	if x != nil {
		return x.LeaveReason
	}
	return ParticipantLeaveReason_LEAVE_REASON_UNSET
}

type StatusScreenCaptureDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CaptureType ScreenCaptureType `protobuf:"varint,1,opt,name=captureType,proto3,enum=status.ScreenCaptureType" json:"captureType,omitempty"`
}

func (x *StatusScreenCaptureDisplayInfo) Reset() {
	*x = StatusScreenCaptureDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusScreenCaptureDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusScreenCaptureDisplayInfo) ProtoMessage() {}

func (x *StatusScreenCaptureDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusScreenCaptureDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusScreenCaptureDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{28}
}

func (x *StatusScreenCaptureDisplayInfo) GetCaptureType() ScreenCaptureType {
	if x != nil {
		return x.CaptureType
	}
	return ScreenCaptureType_SCREEN_SHOT
}

type StatusCallingStatusDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallStatus CallStatus `protobuf:"varint,1,opt,name=callStatus,proto3,enum=status.CallStatus" json:"callStatus,omitempty"`
	CallType   CallType   `protobuf:"varint,2,opt,name=callType,proto3,enum=status.CallType" json:"callType,omitempty"`
}

func (x *StatusCallingStatusDisplayInfo) Reset() {
	*x = StatusCallingStatusDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCallingStatusDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCallingStatusDisplayInfo) ProtoMessage() {}

func (x *StatusCallingStatusDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCallingStatusDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusCallingStatusDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{29}
}

func (x *StatusCallingStatusDisplayInfo) GetCallStatus() CallStatus {
	if x != nil {
		return x.CallStatus
	}
	return CallStatus_STARTED
}

func (x *StatusCallingStatusDisplayInfo) GetCallType() CallType {
	if x != nil {
		return x.CallType
	}
	return CallType_AUDIO
}

type StatusParticipantAddDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusParticipantAddDisplayInfo) Reset() {
	*x = StatusParticipantAddDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusParticipantAddDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusParticipantAddDisplayInfo) ProtoMessage() {}

func (x *StatusParticipantAddDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusParticipantAddDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusParticipantAddDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{30}
}

type StatusNameChangeDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusNameChangeDisplayInfo) Reset() {
	*x = StatusNameChangeDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusNameChangeDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusNameChangeDisplayInfo) ProtoMessage() {}

func (x *StatusNameChangeDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusNameChangeDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusNameChangeDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{31}
}

type StatusSaveToCameraRollDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusSaveToCameraRollDisplayInfo) Reset() {
	*x = StatusSaveToCameraRollDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusSaveToCameraRollDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusSaveToCameraRollDisplayInfo) ProtoMessage() {}

func (x *StatusSaveToCameraRollDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusSaveToCameraRollDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusSaveToCameraRollDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{32}
}

type StatusInMyContactsDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecentlyJoinedUserId *UUID `protobuf:"bytes,1,opt,name=recentlyJoinedUserId,proto3" json:"recentlyJoinedUserId,omitempty"`
}

func (x *StatusInMyContactsDisplayInfo) Reset() {
	*x = StatusInMyContactsDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusInMyContactsDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusInMyContactsDisplayInfo) ProtoMessage() {}

func (x *StatusInMyContactsDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusInMyContactsDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusInMyContactsDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{33}
}

func (x *StatusInMyContactsDisplayInfo) GetRecentlyJoinedUserId() *UUID {
	if x != nil {
		return x.RecentlyJoinedUserId
	}
	return nil
}

type StatusGenericChat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusGenericChat) Reset() {
	*x = StatusGenericChat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGenericChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGenericChat) ProtoMessage() {}

func (x *StatusGenericChat) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGenericChat.ProtoReflect.Descriptor instead.
func (*StatusGenericChat) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{34}
}

type StatusParticipantKickDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusParticipantKickDisplayInfo) Reset() {
	*x = StatusParticipantKickDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusParticipantKickDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusParticipantKickDisplayInfo) ProtoMessage() {}

func (x *StatusParticipantKickDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusParticipantKickDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusParticipantKickDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{35}
}

type StatusGroupChatCreatedDisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusGroupChatCreatedDisplayInfo) Reset() {
	*x = StatusGroupChatCreatedDisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_status_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusGroupChatCreatedDisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusGroupChatCreatedDisplayInfo) ProtoMessage() {}

func (x *StatusGroupChatCreatedDisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_status_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusGroupChatCreatedDisplayInfo.ProtoReflect.Descriptor instead.
func (*StatusGroupChatCreatedDisplayInfo) Descriptor() ([]byte, []int) {
	return file_status_proto_rawDescGZIP(), []int{36}
}

var File_status_proto protoreflect.FileDescriptor

var file_status_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe6, 0x10, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x56, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x10,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x6e, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x72, 0x61, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x72, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x72, 0x61, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x10, 0x73, 0x61, 0x76,
	0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x61,
	0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x12, 0x86,
	0x01, 0x0a, 0x21, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x21, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x41, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x67, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0a, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x83, 0x01,
	0x0a, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x12, 0x4d, 0x0a, 0x0c, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x6a, 0x0a, 0x16, 0x6c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x16, 0x6c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x12, 0x47,
	0x0a, 0x0c, 0x69, 0x6e, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x49, 0x6e,
	0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x4d, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x6b, 0x0a, 0x18, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x61, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x46, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x76, 0x65,
	0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0a,
	0x64, 0x77, 0x65, 0x62, 0x55, 0x70, 0x73, 0x65, 0x6c, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x44, 0x57, 0x65, 0x62, 0x55, 0x70,
	0x73, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x77, 0x65, 0x62, 0x55, 0x70, 0x73, 0x65, 0x6c, 0x6c, 0x12,
	0x50, 0x0a, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x76, 0x0a, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x57,
	0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x20, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x57, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6c, 0x75,
	0x73, 0x47, 0x69, 0x66, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x69, 0x66, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c,
	0x75, 0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x4a, 0x0a,
	0x0d, 0x6d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65,
	0x72, 0x6c, 0x69, 0x6e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x6c,
	0x69, 0x6e, 0x57, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x69, 0x0a, 0x18, 0x6c, 0x69, 0x76,
	0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x18, 0x6c, 0x69, 0x76, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x26, 0x73, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69,
	0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x26, 0x73, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x26, 0x53, 0x6e,
	0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e,
	0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x5f, 0x0a, 0x19,
	0x73, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x21, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x19, 0x73, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e,
	0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x25, 0x0a,
	0x23, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x4d, 0x65, 0x72, 0x6c, 0x69, 0x6e, 0x57, 0x65,
	0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x71, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x0c, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x6c, 0x75, 0x73, 0x47, 0x69, 0x66,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x22,
	0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x57, 0x61, 0x6c, 0x6c,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x57, 0x65, 0x62, 0x55, 0x70, 0x73, 0x65, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x20, 0x0a,
	0x1e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x27, 0x0a, 0x25, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x1b, 0x0a, 0x19, 0x49, 0x6e, 0x4d, 0x79,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x01, 0x0a, 0x28, 0x4c, 0x69, 0x76, 0x65, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x65, 0x72, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65,
	0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0xd5, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x6d, 0x65,
	0x64, 0x69, 0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x65, 0x78, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x76, 0x61, 0x73,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x16,
	0x43, 0x61, 0x6e, 0x76, 0x61, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x2d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x53, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x17, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x44,
	0x0a, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x10, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xf5, 0x02, 0x0a, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x47, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x12, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x58, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x68, 0x0a, 0x2f, 0x61, 0x6c, 0x73, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56,
	0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x54, 0x6f, 0x45, 0x6e,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x2f, 0x61, 0x6c,
	0x73, 0x6f, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x6f,
	0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x54, 0x6f, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x22, 0xa7, 0x01,
	0x0a, 0x1d, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x10, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x10, 0x4d, 0x65, 0x64, 0x69, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x09, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x0e, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x7b, 0x0a, 0x19, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x72, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x72, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x17, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x10, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x10, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65,
	0x77, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x01, 0x0a, 0x1a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x69, 0x6e,
	0x67, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75,
	0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x74,
	0x75, 0x72, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x61, 0x70,
	0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x43, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x61,
	0x6c, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x1e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a,
	0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x46, 0x0a, 0x18, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x18, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0e, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x22, 0x81, 0x02,
	0x0a, 0x24, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0c, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12,
	0x40, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x5d, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x82, 0x01, 0x0a, 0x1e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x63, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x63, 0x61, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x63, 0x61, 0x6c, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x61, 0x6c,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c,
	0x6c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5f, 0x0a, 0x1d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x4d, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x73, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a,
	0x14, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x14, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x6c,
	0x79, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x13, 0x0a,
	0x11, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x43, 0x68,
	0x61, 0x74, 0x22, 0x22, 0x0a, 0x20, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4b, 0x69, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x68, 0x61, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2a, 0x57, 0x0a, 0x0c, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13, 0x53,
	0x54, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x45, 0x54, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x53, 0x54, 0x52, 0x45, 0x41, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x4e, 0x44, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x10, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x4c, 0x69,
	0x6e, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x18, 0x49, 0x4e, 0x56, 0x49,
	0x54, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x56, 0x49, 0x54, 0x45,
	0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xb3, 0x01, 0x0a, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x49, 0x53,
	0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52,
	0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12,
	0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x54, 0x4f, 0x47, 0x47, 0x4c, 0x45, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x2a, 0x79, 0x0a, 0x1b,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x49,
	0x4d, 0x41, 0x47, 0x45, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x49, 0x44,
	0x45, 0x4f, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x02, 0x2a, 0x58, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x45, 0x72, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4e, 0x41, 0x50, 0x10,
	0x02, 0x2a, 0x50, 0x0a, 0x17, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x44, 0x44, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4c, 0x45, 0x46,
	0x54, 0x10, 0x02, 0x2a, 0x6a, 0x0a, 0x16, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x12, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x4b, 0x49, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x2a,
	0x37, 0x0a, 0x11, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x61, 0x70, 0x74, 0x75, 0x72, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x53,
	0x48, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x2a, 0x46, 0x0a, 0x0a, 0x43, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4a, 0x4f, 0x49, 0x4e,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x53, 0x53, 0x45, 0x44, 0x10, 0x04,
	0x2a, 0x20, 0x0a, 0x08, 0x43, 0x61, 0x6c, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x49, 0x44, 0x45, 0x4f,
	0x10, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_status_proto_rawDescOnce sync.Once
	file_status_proto_rawDescData = file_status_proto_rawDesc
)

func file_status_proto_rawDescGZIP() []byte {
	file_status_proto_rawDescOnce.Do(func() {
		file_status_proto_rawDescData = protoimpl.X.CompressGZIP(file_status_proto_rawDescData)
	})
	return file_status_proto_rawDescData
}

var file_status_proto_enumTypes = make([]protoimpl.EnumInfo, 10)
var file_status_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_status_proto_goTypes = []interface{}{
	(StreakStatus)(0),     // 0: status.StreakStatus
	(InviteLinkStatus)(0), // 1: status.InviteLinkStatus
	(ChangeConversationRetentionPolicyDisplayStatus)(0),    // 2: status.ChangeConversationRetentionPolicyDisplayStatus
	(MediaTypeToCountStatus_Type)(0),                       // 3: status.MediaTypeToCountStatus_Type
	(MessageEraseType)(0),                                  // 4: status.MessageEraseType
	(ParticipantStatusChange)(0),                           // 5: status.ParticipantStatusChange
	(ParticipantLeaveReason)(0),                            // 6: status.ParticipantLeaveReason
	(ScreenCaptureType)(0),                                 // 7: status.ScreenCaptureType
	(CallStatus)(0),                                        // 8: status.CallStatus
	(CallType)(0),                                          // 9: status.CallType
	(*StatusMessage)(nil),                                  // 10: status.StatusMessage
	(*SnapPostOpenViewingPolicyStatusMessage)(nil),         // 11: status.SnapPostOpenViewingPolicyStatusMessage
	(*LiveLocationGroupShareStatusMessage)(nil),            // 12: status.LiveLocationGroupShareStatusMessage
	(*MerlinWelcomeStatusMessage)(nil),                     // 13: status.MerlinWelcomeStatusMessage
	(*StreakStatusMessage)(nil),                            // 14: status.StreakStatusMessage
	(*PlusGiftStatusMessage)(nil),                          // 15: status.PlusGiftStatusMessage
	(*UpdateChatWallpaperStatusMessage)(nil),               // 16: status.UpdateChatWallpaperStatusMessage
	(*QuoteReplyShareStatusMessage)(nil),                   // 17: status.QuoteReplyShareStatusMessage
	(*DWebUpsellStatusMessage)(nil),                        // 18: status.DWebUpsellStatusMessage
	(*LeaveFamilyCenterStatusMessage)(nil),                 // 19: status.LeaveFamilyCenterStatusMessage
	(*AcceptFamilyCenterInviteStatusMessage)(nil),          // 20: status.AcceptFamilyCenterInviteStatusMessage
	(*InMyContactsStatusMessage)(nil),                      // 21: status.InMyContactsStatusMessage
	(*LiveLocationShareTerminatedStatusMessage)(nil),       // 22: status.LiveLocationShareTerminatedStatusMessage
	(*CanvasCustomUpdateStatusMessage)(nil),                // 23: status.CanvasCustomUpdateStatusMessage
	(*CanvasCustomUpdateInfo)(nil),                         // 24: status.CanvasCustomUpdateInfo
	(*GroupInviteStickerJoinTextPromptStatusMessage)(nil),  // 25: status.GroupInviteStickerJoinTextPromptStatusMessage
	(*InviteLinkStatusMessage)(nil),                        // 26: status.InviteLinkStatusMessage
	(*GameClosedStatusMessage)(nil),                        // 27: status.GameClosedStatusMessage
	(*ChangeConversationRetentionPolicyStatusMessage)(nil), // 28: status.ChangeConversationRetentionPolicyStatusMessage
	(*SaveToCameraRollStatusMessage)(nil),                  // 29: status.SaveToCameraRollStatusMessage
	(*MediaTypeToCount)(nil),                               // 30: status.MediaTypeToCount
	(*GroupChatCreatedStatusMessage)(nil),                  // 31: status.GroupChatCreatedStatusMessage
	(*MessageEraseStatusMessage)(nil),                      // 32: status.MessageEraseStatusMessage
	(*NameChangeStatusMessage)(nil),                        // 33: status.NameChangeStatusMessage
	(*ScreenCaptureStatusMessage)(nil),                     // 34: status.ScreenCaptureStatusMessage
	(*CallingStatusMessage)(nil),                           // 35: status.CallingStatusMessage
	(*ParticipantChangeStatusMessage)(nil),                 // 36: status.ParticipantChangeStatusMessage
	(*ParticipantChangeStatusMessage_Entry)(nil),           // 37: status.ParticipantChangeStatusMessage_Entry
	(*StatusScreenCaptureDisplayInfo)(nil),                 // 38: status.StatusScreenCaptureDisplayInfo
	(*StatusCallingStatusDisplayInfo)(nil),                 // 39: status.StatusCallingStatusDisplayInfo
	(*StatusParticipantAddDisplayInfo)(nil),                // 40: status.StatusParticipantAddDisplayInfo
	(*StatusNameChangeDisplayInfo)(nil),                    // 41: status.StatusNameChangeDisplayInfo
	(*StatusSaveToCameraRollDisplayInfo)(nil),              // 42: status.StatusSaveToCameraRollDisplayInfo
	(*StatusInMyContactsDisplayInfo)(nil),                  // 43: status.StatusInMyContactsDisplayInfo
	(*StatusGenericChat)(nil),                              // 44: status.StatusGenericChat
	(*StatusParticipantKickDisplayInfo)(nil),               // 45: status.StatusParticipantKickDisplayInfo
	(*StatusGroupChatCreatedDisplayInfo)(nil),              // 46: status.StatusGroupChatCreatedDisplayInfo
	(*UUID)(nil),                   // 47: uuid.UUID
	(SnapPostOpenViewingPolicy)(0), // 48: policy.SnapPostOpenViewingPolicy
	(*RetentionPolicy)(nil),        // 49: policy.RetentionPolicy
}
var file_status_proto_depIdxs = []int32{
	34, // 0: status.StatusMessage.screenCapture:type_name -> status.ScreenCaptureStatusMessage
	35, // 1: status.StatusMessage.callingStatus:type_name -> status.CallingStatusMessage
	36, // 2: status.StatusMessage.participantChange:type_name -> status.ParticipantChangeStatusMessage
	33, // 3: status.StatusMessage.nameStatusChange:type_name -> status.NameChangeStatusMessage
	32, // 4: status.StatusMessage.messageErase:type_name -> status.MessageEraseStatusMessage
	31, // 5: status.StatusMessage.groupChatCreated:type_name -> status.GroupChatCreatedStatusMessage
	29, // 6: status.StatusMessage.saveToCameraRoll:type_name -> status.SaveToCameraRollStatusMessage
	28, // 7: status.StatusMessage.changeConversationRetentionPolicy:type_name -> status.ChangeConversationRetentionPolicyStatusMessage
	27, // 8: status.StatusMessage.gameClosed:type_name -> status.GameClosedStatusMessage
	26, // 9: status.StatusMessage.inviteLink:type_name -> status.InviteLinkStatusMessage
	25, // 10: status.StatusMessage.groupInviteStickerJoinTextPrompt:type_name -> status.GroupInviteStickerJoinTextPromptStatusMessage
	23, // 11: status.StatusMessage.canvasUpdate:type_name -> status.CanvasCustomUpdateStatusMessage
	22, // 12: status.StatusMessage.liveLocationTerminated:type_name -> status.LiveLocationShareTerminatedStatusMessage
	21, // 13: status.StatusMessage.inMyContacts:type_name -> status.InMyContactsStatusMessage
	20, // 14: status.StatusMessage.acceptFamilyCenterInvite:type_name -> status.AcceptFamilyCenterInviteStatusMessage
	19, // 15: status.StatusMessage.leaveFamilyCenter:type_name -> status.LeaveFamilyCenterStatusMessage
	18, // 16: status.StatusMessage.dwebUpsell:type_name -> status.DWebUpsellStatusMessage
	17, // 17: status.StatusMessage.quoteReplyShare:type_name -> status.QuoteReplyShareStatusMessage
	16, // 18: status.StatusMessage.updateChatWallpaperStatusMessage:type_name -> status.UpdateChatWallpaperStatusMessage
	15, // 19: status.StatusMessage.plusGift:type_name -> status.PlusGiftStatusMessage
	14, // 20: status.StatusMessage.streak:type_name -> status.StreakStatusMessage
	13, // 21: status.StatusMessage.merlinWelcome:type_name -> status.MerlinWelcomeStatusMessage
	12, // 22: status.StatusMessage.liveLocationGroupMessage:type_name -> status.LiveLocationGroupShareStatusMessage
	11, // 23: status.StatusMessage.snapPostOpenViewingPolicyStatusMessage:type_name -> status.SnapPostOpenViewingPolicyStatusMessage
	47, // 24: status.SnapPostOpenViewingPolicyStatusMessage.initiatingUserId:type_name -> uuid.UUID
	48, // 25: status.SnapPostOpenViewingPolicyStatusMessage.snapPostOpenViewingPolicy:type_name -> policy.SnapPostOpenViewingPolicy
	0,  // 26: status.StreakStatusMessage.streakStatus:type_name -> status.StreakStatus
	47, // 27: status.LiveLocationShareTerminatedStatusMessage.initiatingUserId:type_name -> uuid.UUID
	47, // 28: status.CanvasCustomUpdateStatusMessage.appId:type_name -> uuid.UUID
	47, // 29: status.CanvasCustomUpdateStatusMessage.mediaUserIds:type_name -> uuid.UUID
	24, // 30: status.CanvasCustomUpdateStatusMessage.updateInfo:type_name -> status.CanvasCustomUpdateInfo
	47, // 31: status.GroupInviteStickerJoinTextPromptStatusMessage.inviteGroupId:type_name -> uuid.UUID
	47, // 32: status.GroupInviteStickerJoinTextPromptStatusMessage.inviteId:type_name -> uuid.UUID
	47, // 33: status.InviteLinkStatusMessage.initiatingUserId:type_name -> uuid.UUID
	1,  // 34: status.InviteLinkStatusMessage.inviteLinkStatus:type_name -> status.InviteLinkStatus
	47, // 35: status.GameClosedStatusMessage.participants:type_name -> uuid.UUID
	47, // 36: status.ChangeConversationRetentionPolicyStatusMessage.initiatingUserId:type_name -> uuid.UUID
	49, // 37: status.ChangeConversationRetentionPolicyStatusMessage.newRetentionPolicy:type_name -> policy.RetentionPolicy
	2,  // 38: status.ChangeConversationRetentionPolicyStatusMessage.displayType:type_name -> status.ChangeConversationRetentionPolicyDisplayStatus
	47, // 39: status.SaveToCameraRollStatusMessage.userId:type_name -> uuid.UUID
	30, // 40: status.SaveToCameraRollStatusMessage.mediaTypeToCount:type_name -> status.MediaTypeToCount
	3,  // 41: status.MediaTypeToCount.mediaType:type_name -> status.MediaTypeToCountStatus_Type
	47, // 42: status.GroupChatCreatedStatusMessage.initiatingUser:type_name -> uuid.UUID
	47, // 43: status.GroupChatCreatedStatusMessage.participants:type_name -> uuid.UUID
	47, // 44: status.MessageEraseStatusMessage.userId:type_name -> uuid.UUID
	4,  // 45: status.MessageEraseStatusMessage.messageType:type_name -> status.MessageEraseType
	47, // 46: status.NameChangeStatusMessage.initiatingUserId:type_name -> uuid.UUID
	47, // 47: status.ScreenCaptureStatusMessage.capturingUser:type_name -> uuid.UUID
	7,  // 48: status.ScreenCaptureStatusMessage.captureType:type_name -> status.ScreenCaptureType
	8,  // 49: status.CallingStatusMessage.callStatus:type_name -> status.CallStatus
	9,  // 50: status.CallingStatusMessage.callType:type_name -> status.CallType
	47, // 51: status.CallingStatusMessage.userId:type_name -> uuid.UUID
	47, // 52: status.CallingStatusMessage.participants:type_name -> uuid.UUID
	37, // 53: status.ParticipantChangeStatusMessage.statusChanges:type_name -> status.ParticipantChangeStatusMessage_Entry
	47, // 54: status.ParticipantChangeStatusMessage.initiatingUserDeprecated:type_name -> uuid.UUID
	47, // 55: status.ParticipantChangeStatusMessage.initiatingUser:type_name -> uuid.UUID
	47, // 56: status.ParticipantChangeStatusMessage_Entry.affectedUser:type_name -> uuid.UUID
	5,  // 57: status.ParticipantChangeStatusMessage_Entry.statusChange:type_name -> status.ParticipantStatusChange
	6,  // 58: status.ParticipantChangeStatusMessage_Entry.leaveReason:type_name -> status.ParticipantLeaveReason
	7,  // 59: status.StatusScreenCaptureDisplayInfo.captureType:type_name -> status.ScreenCaptureType
	8,  // 60: status.StatusCallingStatusDisplayInfo.callStatus:type_name -> status.CallStatus
	9,  // 61: status.StatusCallingStatusDisplayInfo.callType:type_name -> status.CallType
	47, // 62: status.StatusInMyContactsDisplayInfo.recentlyJoinedUserId:type_name -> uuid.UUID
	63, // [63:63] is the sub-list for method output_type
	63, // [63:63] is the sub-list for method input_type
	63, // [63:63] is the sub-list for extension type_name
	63, // [63:63] is the sub-list for extension extendee
	0,  // [0:63] is the sub-list for field type_name
}

func init() { file_status_proto_init() }
func file_status_proto_init() {
	if File_status_proto != nil {
		return
	}
	file_uuid_proto_init()
	file_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_status_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnapPostOpenViewingPolicyStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLocationGroupShareStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MerlinWelcomeStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreakStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlusGiftStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChatWallpaperStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteReplyShareStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DWebUpsellStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveFamilyCenterStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptFamilyCenterInviteStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InMyContactsStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiveLocationShareTerminatedStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanvasCustomUpdateStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanvasCustomUpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupInviteStickerJoinTextPromptStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteLinkStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameClosedStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeConversationRetentionPolicyStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveToCameraRollStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaTypeToCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupChatCreatedStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEraseStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameChangeStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenCaptureStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallingStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantChangeStatusMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantChangeStatusMessage_Entry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusScreenCaptureDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCallingStatusDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusParticipantAddDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusNameChangeDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusSaveToCameraRollDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusInMyContactsDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGenericChat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusParticipantKickDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_status_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusGroupChatCreatedDisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_status_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StatusMessage_ScreenCapture)(nil),
		(*StatusMessage_CallingStatus)(nil),
		(*StatusMessage_ParticipantChange)(nil),
		(*StatusMessage_NameStatusChange)(nil),
		(*StatusMessage_MessageErase)(nil),
		(*StatusMessage_GroupChatCreated)(nil),
		(*StatusMessage_SaveToCameraRoll)(nil),
		(*StatusMessage_ChangeConversationRetentionPolicy)(nil),
		(*StatusMessage_GameClosed)(nil),
		(*StatusMessage_InviteLink)(nil),
		(*StatusMessage_GroupInviteStickerJoinTextPrompt)(nil),
		(*StatusMessage_CanvasUpdate)(nil),
		(*StatusMessage_LiveLocationTerminated)(nil),
		(*StatusMessage_InMyContacts)(nil),
		(*StatusMessage_AcceptFamilyCenterInvite)(nil),
		(*StatusMessage_LeaveFamilyCenter)(nil),
		(*StatusMessage_DwebUpsell)(nil),
		(*StatusMessage_QuoteReplyShare)(nil),
		(*StatusMessage_UpdateChatWallpaperStatusMessage)(nil),
		(*StatusMessage_PlusGift)(nil),
		(*StatusMessage_Streak)(nil),
		(*StatusMessage_MerlinWelcome)(nil),
		(*StatusMessage_LiveLocationGroupMessage)(nil),
		(*StatusMessage_SnapPostOpenViewingPolicyStatusMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_status_proto_rawDesc,
			NumEnums:      10,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_status_proto_goTypes,
		DependencyIndexes: file_status_proto_depIdxs,
		EnumInfos:         file_status_proto_enumTypes,
		MessageInfos:      file_status_proto_msgTypes,
	}.Build()
	File_status_proto = out.File
	file_status_proto_rawDesc = nil
	file_status_proto_goTypes = nil
	file_status_proto_depIdxs = nil
}
