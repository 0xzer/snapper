// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: messages.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId           int64                    `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	SenderId            *UUID                    `protobuf:"bytes,2,opt,name=senderId,proto3" json:"senderId,omitempty"`
	DeliveryDestination *DeliveryDestination     `protobuf:"bytes,3,opt,name=deliveryDestination,proto3" json:"deliveryDestination,omitempty"`
	Contents            *ContentEnvelope         `protobuf:"bytes,4,opt,name=contents,proto3" json:"contents,omitempty"`
	ReleasePolicy       ContentReadReleasePolicy `protobuf:"varint,5,opt,name=releasePolicy,proto3,enum=policy.ContentReadReleasePolicy" json:"releasePolicy,omitempty"`
	MetaData            *MessageMetadata         `protobuf:"bytes,6,opt,name=metaData,proto3" json:"metaData,omitempty"`
	ClientResolutionId  uint64                   `protobuf:"varint,7,opt,name=clientResolutionId,proto3" json:"clientResolutionId,omitempty"`
	LeavePolicy         ContentSenderLeavePolicy `protobuf:"varint,8,opt,name=leavePolicy,proto3,enum=policy.ContentSenderLeavePolicy" json:"leavePolicy,omitempty"`
	AnalyticsMessageId  *LegacyMessageId         `protobuf:"bytes,9,opt,name=analyticsMessageId,proto3" json:"analyticsMessageId,omitempty"`
	StreakMetadata      *StreakMetadata          `protobuf:"bytes,10,opt,name=streakMetadata,proto3" json:"streakMetadata,omitempty"`
}

func (x *ContentMessage) Reset() {
	*x = ContentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContentMessage) ProtoMessage() {}

func (x *ContentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContentMessage.ProtoReflect.Descriptor instead.
func (*ContentMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *ContentMessage) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *ContentMessage) GetSenderId() *UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *ContentMessage) GetDeliveryDestination() *DeliveryDestination {
	if x != nil {
		return x.DeliveryDestination
	}
	return nil
}

func (x *ContentMessage) GetContents() *ContentEnvelope {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *ContentMessage) GetReleasePolicy() ContentReadReleasePolicy {
	if x != nil {
		return x.ReleasePolicy
	}
	return ContentReadReleasePolicy_HIGH_WATER_MARK
}

func (x *ContentMessage) GetMetaData() *MessageMetadata {
	if x != nil {
		return x.MetaData
	}
	return nil
}

func (x *ContentMessage) GetClientResolutionId() uint64 {
	if x != nil {
		return x.ClientResolutionId
	}
	return 0
}

func (x *ContentMessage) GetLeavePolicy() ContentSenderLeavePolicy {
	if x != nil {
		return x.LeavePolicy
	}
	return ContentSenderLeavePolicy_REMOVE
}

func (x *ContentMessage) GetAnalyticsMessageId() *LegacyMessageId {
	if x != nil {
		return x.AnalyticsMessageId
	}
	return nil
}

func (x *ContentMessage) GetStreakMetadata() *StreakMetadata {
	if x != nil {
		return x.StreakMetadata
	}
	return nil
}

type LegacyMessageId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to LegacyMessageId:
	//
	//	*LegacyMessageId_ChatMessageId
	//	*LegacyMessageId_OneOnOneSnapId
	//	*LegacyMessageId_StringMessageId
	LegacyMessageId isLegacyMessageId_LegacyMessageId `protobuf_oneof:"legacyMessageId"`
	IsLowerCase     bool                              `protobuf:"varint,4,opt,name=isLowerCase,proto3" json:"isLowerCase,omitempty"`
}

func (x *LegacyMessageId) Reset() {
	*x = LegacyMessageId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyMessageId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyMessageId) ProtoMessage() {}

func (x *LegacyMessageId) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyMessageId.ProtoReflect.Descriptor instead.
func (*LegacyMessageId) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (m *LegacyMessageId) GetLegacyMessageId() isLegacyMessageId_LegacyMessageId {
	if m != nil {
		return m.LegacyMessageId
	}
	return nil
}

func (x *LegacyMessageId) GetChatMessageId() *UUID {
	if x, ok := x.GetLegacyMessageId().(*LegacyMessageId_ChatMessageId); ok {
		return x.ChatMessageId
	}
	return nil
}

func (x *LegacyMessageId) GetOneOnOneSnapId() int64 {
	if x, ok := x.GetLegacyMessageId().(*LegacyMessageId_OneOnOneSnapId); ok {
		return x.OneOnOneSnapId
	}
	return 0
}

func (x *LegacyMessageId) GetStringMessageId() string {
	if x, ok := x.GetLegacyMessageId().(*LegacyMessageId_StringMessageId); ok {
		return x.StringMessageId
	}
	return ""
}

func (x *LegacyMessageId) GetIsLowerCase() bool {
	if x != nil {
		return x.IsLowerCase
	}
	return false
}

type isLegacyMessageId_LegacyMessageId interface {
	isLegacyMessageId_LegacyMessageId()
}

type LegacyMessageId_ChatMessageId struct {
	ChatMessageId *UUID `protobuf:"bytes,1,opt,name=chatMessageId,proto3,oneof"`
}

type LegacyMessageId_OneOnOneSnapId struct {
	OneOnOneSnapId int64 `protobuf:"varint,2,opt,name=oneOnOneSnapId,proto3,oneof"`
}

type LegacyMessageId_StringMessageId struct {
	StringMessageId string `protobuf:"bytes,3,opt,name=stringMessageId,proto3,oneof"`
}

func (*LegacyMessageId_ChatMessageId) isLegacyMessageId_LegacyMessageId() {}

func (*LegacyMessageId_OneOnOneSnapId) isLegacyMessageId_LegacyMessageId() {}

func (*LegacyMessageId_StringMessageId) isLegacyMessageId_LegacyMessageId() {}

type MessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerCreatedAt     int64   `protobuf:"varint,1,opt,name=serverCreatedAt,proto3" json:"serverCreatedAt,omitempty"`
	ReadTimestamp       int64   `protobuf:"varint,2,opt,name=readTimestamp,proto3" json:"readTimestamp,omitempty"`
	Tombstone           bool    `protobuf:"varint,3,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	ReadBy              []*UUID `protobuf:"bytes,4,rep,name=readBy,proto3" json:"readBy,omitempty"`
	ReleasedBy          []*UUID `protobuf:"bytes,5,rep,name=releasedBy,proto3" json:"releasedBy,omitempty"`
	SavedBy             []*UUID `protobuf:"bytes,6,rep,name=savedBy,proto3" json:"savedBy,omitempty"`
	MentionedUserIds    []*UUID `protobuf:"bytes,7,rep,name=mentionedUserIds,proto3" json:"mentionedUserIds,omitempty"`
	ScreenshottedBy     []*UUID `protobuf:"bytes,8,rep,name=screenshottedBy,proto3" json:"screenshottedBy,omitempty"`
	ScreenRecordedBy    []*UUID `protobuf:"bytes,9,rep,name=screenRecordedBy,proto3" json:"screenRecordedBy,omitempty"`
	ReplayedBy          []*UUID `protobuf:"bytes,10,rep,name=replayedBy,proto3" json:"replayedBy,omitempty"`
	ConversationVersion int64   `protobuf:"varint,11,opt,name=conversationVersion,proto3" json:"conversationVersion,omitempty"`
	// Types that are assignable to QuotedMessageInfo:
	//
	//	*MessageMetadata_QuotedMetadata
	//	*MessageMetadata_HiddenReason
	QuotedMessageInfo                     isMessageMetadata_QuotedMessageInfo   `protobuf_oneof:"quotedMessageInfo"`
	Reactions                             []*Reaction                           `protobuf:"bytes,14,rep,name=reactions,proto3" json:"reactions,omitempty"`
	LastReactionUpdateConversationVersion int64                                 `protobuf:"varint,15,opt,name=lastReactionUpdateConversationVersion,proto3" json:"lastReactionUpdateConversationVersion,omitempty"`
	EelReEncryptionInits                  []*EelReEncryptionInit                `protobuf:"bytes,16,rep,name=eelReEncryptionInits,proto3" json:"eelReEncryptionInits,omitempty"`
	SnapPostOpenViewingPolicy             SnapPostOpenViewingPolicy             `protobuf:"varint,17,opt,name=snapPostOpenViewingPolicy,proto3,enum=policy.SnapPostOpenViewingPolicy" json:"snapPostOpenViewingPolicy,omitempty"`
	ReplayedByUsers                       []*MessageMetadata_ReplayUserMetadata `protobuf:"bytes,18,rep,name=replayedByUsers,proto3" json:"replayedByUsers,omitempty"`
}

func (x *MessageMetadata) Reset() {
	*x = MessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetadata) ProtoMessage() {}

func (x *MessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetadata.ProtoReflect.Descriptor instead.
func (*MessageMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *MessageMetadata) GetServerCreatedAt() int64 {
	if x != nil {
		return x.ServerCreatedAt
	}
	return 0
}

func (x *MessageMetadata) GetReadTimestamp() int64 {
	if x != nil {
		return x.ReadTimestamp
	}
	return 0
}

func (x *MessageMetadata) GetTombstone() bool {
	if x != nil {
		return x.Tombstone
	}
	return false
}

func (x *MessageMetadata) GetReadBy() []*UUID {
	if x != nil {
		return x.ReadBy
	}
	return nil
}

func (x *MessageMetadata) GetReleasedBy() []*UUID {
	if x != nil {
		return x.ReleasedBy
	}
	return nil
}

func (x *MessageMetadata) GetSavedBy() []*UUID {
	if x != nil {
		return x.SavedBy
	}
	return nil
}

func (x *MessageMetadata) GetMentionedUserIds() []*UUID {
	if x != nil {
		return x.MentionedUserIds
	}
	return nil
}

func (x *MessageMetadata) GetScreenshottedBy() []*UUID {
	if x != nil {
		return x.ScreenshottedBy
	}
	return nil
}

func (x *MessageMetadata) GetScreenRecordedBy() []*UUID {
	if x != nil {
		return x.ScreenRecordedBy
	}
	return nil
}

func (x *MessageMetadata) GetReplayedBy() []*UUID {
	if x != nil {
		return x.ReplayedBy
	}
	return nil
}

func (x *MessageMetadata) GetConversationVersion() int64 {
	if x != nil {
		return x.ConversationVersion
	}
	return 0
}

func (m *MessageMetadata) GetQuotedMessageInfo() isMessageMetadata_QuotedMessageInfo {
	if m != nil {
		return m.QuotedMessageInfo
	}
	return nil
}

func (x *MessageMetadata) GetQuotedMetadata() *MessageMetadata_QuotedMessageMetadata {
	if x, ok := x.GetQuotedMessageInfo().(*MessageMetadata_QuotedMetadata); ok {
		return x.QuotedMetadata
	}
	return nil
}

func (x *MessageMetadata) GetHiddenReason() int32 {
	if x, ok := x.GetQuotedMessageInfo().(*MessageMetadata_HiddenReason); ok {
		return x.HiddenReason
	}
	return 0
}

func (x *MessageMetadata) GetReactions() []*Reaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

func (x *MessageMetadata) GetLastReactionUpdateConversationVersion() int64 {
	if x != nil {
		return x.LastReactionUpdateConversationVersion
	}
	return 0
}

func (x *MessageMetadata) GetEelReEncryptionInits() []*EelReEncryptionInit {
	if x != nil {
		return x.EelReEncryptionInits
	}
	return nil
}

func (x *MessageMetadata) GetSnapPostOpenViewingPolicy() SnapPostOpenViewingPolicy {
	if x != nil {
		return x.SnapPostOpenViewingPolicy
	}
	return SnapPostOpenViewingPolicy_POLICY_UNSET_OR_ENVELOPE
}

func (x *MessageMetadata) GetReplayedByUsers() []*MessageMetadata_ReplayUserMetadata {
	if x != nil {
		return x.ReplayedByUsers
	}
	return nil
}

type isMessageMetadata_QuotedMessageInfo interface {
	isMessageMetadata_QuotedMessageInfo()
}

type MessageMetadata_QuotedMetadata struct {
	QuotedMetadata *MessageMetadata_QuotedMessageMetadata `protobuf:"bytes,12,opt,name=quotedMetadata,proto3,oneof"`
}

type MessageMetadata_HiddenReason struct {
	HiddenReason int32 `protobuf:"varint,13,opt,name=hiddenReason,proto3,oneof"`
}

func (*MessageMetadata_QuotedMetadata) isMessageMetadata_QuotedMessageInfo() {}

func (*MessageMetadata_HiddenReason) isMessageMetadata_QuotedMessageInfo() {}

type MessageMetadata_ReplayUserMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId *UUID `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Count  int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *MessageMetadata_ReplayUserMetadata) Reset() {
	*x = MessageMetadata_ReplayUserMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMetadata_ReplayUserMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetadata_ReplayUserMetadata) ProtoMessage() {}

func (x *MessageMetadata_ReplayUserMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetadata_ReplayUserMetadata.ProtoReflect.Descriptor instead.
func (*MessageMetadata_ReplayUserMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *MessageMetadata_ReplayUserMetadata) GetUserId() *UUID {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *MessageMetadata_ReplayUserMetadata) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type MessageMetadata_QuotedMessageMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotedMessageId int64 `protobuf:"varint,1,opt,name=quotedMessageId,proto3" json:"quotedMessageId,omitempty"`
}

func (x *MessageMetadata_QuotedMessageMetadata) Reset() {
	*x = MessageMetadata_QuotedMessageMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageMetadata_QuotedMessageMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageMetadata_QuotedMessageMetadata) ProtoMessage() {}

func (x *MessageMetadata_QuotedMessageMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageMetadata_QuotedMessageMetadata.ProtoReflect.Descriptor instead.
func (*MessageMetadata_QuotedMessageMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *MessageMetadata_QuotedMessageMetadata) GetQuotedMessageId() int64 {
	if x != nil {
		return x.QuotedMessageId
	}
	return 0
}

type DeliveryDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Destination:
	//
	//	*DeliveryDestination_ConversationDestination
	//	*DeliveryDestination_StoryDestination
	//	*DeliveryDestination_PhoneNumberDestination
	Destination    isDeliveryDestination_Destination `protobuf_oneof:"destination"`
	EncryptionInfo *EncryptionInfo                   `protobuf:"bytes,99,opt,name=encryptionInfo,proto3" json:"encryptionInfo,omitempty"`
}

func (x *DeliveryDestination) Reset() {
	*x = DeliveryDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryDestination) ProtoMessage() {}

func (x *DeliveryDestination) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryDestination.ProtoReflect.Descriptor instead.
func (*DeliveryDestination) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (m *DeliveryDestination) GetDestination() isDeliveryDestination_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (x *DeliveryDestination) GetConversationDestination() *ConversationDestination {
	if x, ok := x.GetDestination().(*DeliveryDestination_ConversationDestination); ok {
		return x.ConversationDestination
	}
	return nil
}

func (x *DeliveryDestination) GetStoryDestination() *StoryDestination {
	if x, ok := x.GetDestination().(*DeliveryDestination_StoryDestination); ok {
		return x.StoryDestination
	}
	return nil
}

func (x *DeliveryDestination) GetPhoneNumberDestination() *PhoneNumberDestination {
	if x, ok := x.GetDestination().(*DeliveryDestination_PhoneNumberDestination); ok {
		return x.PhoneNumberDestination
	}
	return nil
}

func (x *DeliveryDestination) GetEncryptionInfo() *EncryptionInfo {
	if x != nil {
		return x.EncryptionInfo
	}
	return nil
}

type isDeliveryDestination_Destination interface {
	isDeliveryDestination_Destination()
}

type DeliveryDestination_ConversationDestination struct {
	ConversationDestination *ConversationDestination `protobuf:"bytes,1,opt,name=conversationDestination,proto3,oneof"`
}

type DeliveryDestination_StoryDestination struct {
	StoryDestination *StoryDestination `protobuf:"bytes,2,opt,name=storyDestination,proto3,oneof"`
}

type DeliveryDestination_PhoneNumberDestination struct {
	PhoneNumberDestination *PhoneNumberDestination `protobuf:"bytes,3,opt,name=phoneNumberDestination,proto3,oneof"`
}

func (*DeliveryDestination_ConversationDestination) isDeliveryDestination_Destination() {}

func (*DeliveryDestination_StoryDestination) isDeliveryDestination_Destination() {}

func (*DeliveryDestination_PhoneNumberDestination) isDeliveryDestination_Destination() {}

type ConversationDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId      *UUID `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	CurrentVersion      int64 `protobuf:"varint,2,opt,name=currentVersion,proto3" json:"currentVersion,omitempty"`
	ServerSyncCreatedAt int64 `protobuf:"varint,3,opt,name=serverSyncCreatedAt,proto3" json:"serverSyncCreatedAt,omitempty"`
}

func (x *ConversationDestination) Reset() {
	*x = ConversationDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConversationDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationDestination) ProtoMessage() {}

func (x *ConversationDestination) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationDestination.ProtoReflect.Descriptor instead.
func (*ConversationDestination) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

func (x *ConversationDestination) GetConversationId() *UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *ConversationDestination) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

func (x *ConversationDestination) GetServerSyncCreatedAt() int64 {
	if x != nil {
		return x.ServerSyncCreatedAt
	}
	return 0
}

type PhoneNumberDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
}

func (x *PhoneNumberDestination) Reset() {
	*x = PhoneNumberDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhoneNumberDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhoneNumberDestination) ProtoMessage() {}

func (x *PhoneNumberDestination) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhoneNumberDestination.ProtoReflect.Descriptor instead.
func (*PhoneNumberDestination) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *PhoneNumberDestination) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

type ReplyMessageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuotedMessageId int64 `protobuf:"varint,1,opt,name=quotedMessageId,proto3" json:"quotedMessageId,omitempty"`
}

func (x *ReplyMessageInfo) Reset() {
	*x = ReplyMessageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyMessageInfo) ProtoMessage() {}

func (x *ReplyMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyMessageInfo.ProtoReflect.Descriptor instead.
func (*ReplyMessageInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyMessageInfo) GetQuotedMessageId() int64 {
	if x != nil {
		return x.QuotedMessageId
	}
	return 0
}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x04, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4f,
	0x0a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x46, 0x0a,
	0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0b,
	0x6c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x0b, 0x6c, 0x65, 0x61, 0x76, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x12, 0x49, 0x0a, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x12, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd0, 0x01, 0x0a, 0x0f,
	0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55,
	0x49, 0x44, 0x48, 0x00, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0e, 0x6f, 0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x53,
	0x6e, 0x61, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x6f,
	0x6e, 0x65, 0x4f, 0x6e, 0x4f, 0x6e, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x0f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x4c,
	0x6f, 0x77, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x61, 0x73, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x6c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xa2,
	0x08, 0x0a, 0x0f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65,
	0x12, 0x22, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x42, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x64, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64,
	0x42, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e,
	0x55, 0x55, 0x49, 0x44, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x24, 0x0a, 0x07, 0x73, 0x61, 0x76, 0x65, 0x64, 0x42, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x07, 0x73,
	0x61, 0x76, 0x65, 0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x6d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x34,
	0x0a, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x52, 0x0f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x36, 0x0a, 0x10, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x42, 0x79, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x10, 0x73, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x0a,
	0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x42, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x0e, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0c, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x0c, 0x68,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54,
	0x0a, 0x25, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x25, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x45, 0x65, 0x6c, 0x52,
	0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x14, 0x65, 0x65, 0x6c, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x5f, 0x0a, 0x19, 0x73, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69,
	0x65, 0x77, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x19, 0x73, 0x6e, 0x61,
	0x70, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x56, 0x0a, 0x0f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x72,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x13,
	0x0a, 0x11, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x5e, 0x0a, 0x22, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x25, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xe6, 0x02, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5d,
	0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a,
	0x10, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5a, 0x0a, 0x16, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x16, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xa7, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x53, 0x79, 0x6e, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x79, 0x6e, 0x63,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3a, 0x0a, 0x16, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x10, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_messages_proto_goTypes = []interface{}{
	(*ContentMessage)(nil),                        // 0: messages.ContentMessage
	(*LegacyMessageId)(nil),                       // 1: messages.LegacyMessageId
	(*MessageMetadata)(nil),                       // 2: messages.MessageMetadata
	(*MessageMetadata_ReplayUserMetadata)(nil),    // 3: messages.MessageMetadata_ReplayUserMetadata
	(*MessageMetadata_QuotedMessageMetadata)(nil), // 4: messages.MessageMetadata_QuotedMessageMetadata
	(*DeliveryDestination)(nil),                   // 5: messages.DeliveryDestination
	(*ConversationDestination)(nil),               // 6: messages.ConversationDestination
	(*PhoneNumberDestination)(nil),                // 7: messages.PhoneNumberDestination
	(*ReplyMessageInfo)(nil),                      // 8: messages.ReplyMessageInfo
	(*UUID)(nil),                                  // 9: uuid.UUID
	(*ContentEnvelope)(nil),                       // 10: contentEnvelope.ContentEnvelope
	(ContentReadReleasePolicy)(0),                 // 11: policy.ContentReadReleasePolicy
	(ContentSenderLeavePolicy)(0),                 // 12: policy.ContentSenderLeavePolicy
	(*StreakMetadata)(nil),                        // 13: common.StreakMetadata
	(*Reaction)(nil),                              // 14: reactions.Reaction
	(*EelReEncryptionInit)(nil),                   // 15: crypto.EelReEncryptionInit
	(SnapPostOpenViewingPolicy)(0),                // 16: policy.SnapPostOpenViewingPolicy
	(*StoryDestination)(nil),                      // 17: story.StoryDestination
	(*EncryptionInfo)(nil),                        // 18: crypto.EncryptionInfo
}
var file_messages_proto_depIdxs = []int32{
	9,  // 0: messages.ContentMessage.senderId:type_name -> uuid.UUID
	5,  // 1: messages.ContentMessage.deliveryDestination:type_name -> messages.DeliveryDestination
	10, // 2: messages.ContentMessage.contents:type_name -> contentEnvelope.ContentEnvelope
	11, // 3: messages.ContentMessage.releasePolicy:type_name -> policy.ContentReadReleasePolicy
	2,  // 4: messages.ContentMessage.metaData:type_name -> messages.MessageMetadata
	12, // 5: messages.ContentMessage.leavePolicy:type_name -> policy.ContentSenderLeavePolicy
	1,  // 6: messages.ContentMessage.analyticsMessageId:type_name -> messages.LegacyMessageId
	13, // 7: messages.ContentMessage.streakMetadata:type_name -> common.StreakMetadata
	9,  // 8: messages.LegacyMessageId.chatMessageId:type_name -> uuid.UUID
	9,  // 9: messages.MessageMetadata.readBy:type_name -> uuid.UUID
	9,  // 10: messages.MessageMetadata.releasedBy:type_name -> uuid.UUID
	9,  // 11: messages.MessageMetadata.savedBy:type_name -> uuid.UUID
	9,  // 12: messages.MessageMetadata.mentionedUserIds:type_name -> uuid.UUID
	9,  // 13: messages.MessageMetadata.screenshottedBy:type_name -> uuid.UUID
	9,  // 14: messages.MessageMetadata.screenRecordedBy:type_name -> uuid.UUID
	9,  // 15: messages.MessageMetadata.replayedBy:type_name -> uuid.UUID
	4,  // 16: messages.MessageMetadata.quotedMetadata:type_name -> messages.MessageMetadata_QuotedMessageMetadata
	14, // 17: messages.MessageMetadata.reactions:type_name -> reactions.Reaction
	15, // 18: messages.MessageMetadata.eelReEncryptionInits:type_name -> crypto.EelReEncryptionInit
	16, // 19: messages.MessageMetadata.snapPostOpenViewingPolicy:type_name -> policy.SnapPostOpenViewingPolicy
	3,  // 20: messages.MessageMetadata.replayedByUsers:type_name -> messages.MessageMetadata_ReplayUserMetadata
	9,  // 21: messages.MessageMetadata_ReplayUserMetadata.userId:type_name -> uuid.UUID
	6,  // 22: messages.DeliveryDestination.conversationDestination:type_name -> messages.ConversationDestination
	17, // 23: messages.DeliveryDestination.storyDestination:type_name -> story.StoryDestination
	7,  // 24: messages.DeliveryDestination.phoneNumberDestination:type_name -> messages.PhoneNumberDestination
	18, // 25: messages.DeliveryDestination.encryptionInfo:type_name -> crypto.EncryptionInfo
	9,  // 26: messages.ConversationDestination.conversationId:type_name -> uuid.UUID
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_uuid_proto_init()
	file_story_proto_init()
	file_crypto_proto_init()
	file_contentEnvelope_proto_init()
	file_reactions_proto_init()
	file_common_proto_init()
	file_policy_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyMessageId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMetadata_ReplayUserMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageMetadata_QuotedMessageMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConversationDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhoneNumberDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_messages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyMessageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_messages_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LegacyMessageId_ChatMessageId)(nil),
		(*LegacyMessageId_OneOnOneSnapId)(nil),
		(*LegacyMessageId_StringMessageId)(nil),
	}
	file_messages_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*MessageMetadata_QuotedMetadata)(nil),
		(*MessageMetadata_HiddenReason)(nil),
	}
	file_messages_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*DeliveryDestination_ConversationDestination)(nil),
		(*DeliveryDestination_StoryDestination)(nil),
		(*DeliveryDestination_PhoneNumberDestination)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
