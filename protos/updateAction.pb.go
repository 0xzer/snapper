// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: updateAction.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderId       *UUID `protobuf:"bytes,1,opt,name=senderId,proto3" json:"senderId,omitempty"`
	MessageId      int64 `protobuf:"varint,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	ConversationId *UUID `protobuf:"bytes,3,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	// Types that are assignable to Update:
	//
	//	*UpdateAction_Read
	//	*UpdateAction_Release
	//	*UpdateAction_Save
	//	*UpdateAction_Unsave
	//	*UpdateAction_Erase
	//	*UpdateAction_SaveToCameraRoll
	//	*UpdateAction_Screenshot
	//	*UpdateAction_ScreenRecord
	//	*UpdateAction_Replay
	//	*UpdateAction_EncryptionUpdate
	//	*UpdateAction_MessageReaction
	//	*UpdateAction_RemoveReaction
	//	*UpdateAction_AddEelReEncryptionInit
	//	*UpdateAction_EelAppendReEncryptionDestination
	//	*UpdateAction_UpdateAllowsTranscription
	//	*UpdateAction_AttachTranscription
	//	*UpdateAction_EraseStoryMedia
	Update          isUpdateAction_Update `protobuf_oneof:"update"`
	UpdateTimestamp int64                 `protobuf:"varint,14,opt,name=updateTimestamp,proto3" json:"updateTimestamp,omitempty"` // now
}

func (x *UpdateAction) Reset() {
	*x = UpdateAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAction) ProtoMessage() {}

func (x *UpdateAction) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAction.ProtoReflect.Descriptor instead.
func (*UpdateAction) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateAction) GetSenderId() *UUID {
	if x != nil {
		return x.SenderId
	}
	return nil
}

func (x *UpdateAction) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *UpdateAction) GetConversationId() *UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (m *UpdateAction) GetUpdate() isUpdateAction_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *UpdateAction) GetRead() *Read {
	if x, ok := x.GetUpdate().(*UpdateAction_Read); ok {
		return x.Read
	}
	return nil
}

func (x *UpdateAction) GetRelease() *Release {
	if x, ok := x.GetUpdate().(*UpdateAction_Release); ok {
		return x.Release
	}
	return nil
}

func (x *UpdateAction) GetSave() *Save {
	if x, ok := x.GetUpdate().(*UpdateAction_Save); ok {
		return x.Save
	}
	return nil
}

func (x *UpdateAction) GetUnsave() *Unsave {
	if x, ok := x.GetUpdate().(*UpdateAction_Unsave); ok {
		return x.Unsave
	}
	return nil
}

func (x *UpdateAction) GetErase() *Erase {
	if x, ok := x.GetUpdate().(*UpdateAction_Erase); ok {
		return x.Erase
	}
	return nil
}

func (x *UpdateAction) GetSaveToCameraRoll() *SaveToCameraRoll {
	if x, ok := x.GetUpdate().(*UpdateAction_SaveToCameraRoll); ok {
		return x.SaveToCameraRoll
	}
	return nil
}

func (x *UpdateAction) GetScreenshot() *Screenshot {
	if x, ok := x.GetUpdate().(*UpdateAction_Screenshot); ok {
		return x.Screenshot
	}
	return nil
}

func (x *UpdateAction) GetScreenRecord() *ScreenRecord {
	if x, ok := x.GetUpdate().(*UpdateAction_ScreenRecord); ok {
		return x.ScreenRecord
	}
	return nil
}

func (x *UpdateAction) GetReplay() *Replay {
	if x, ok := x.GetUpdate().(*UpdateAction_Replay); ok {
		return x.Replay
	}
	return nil
}

func (x *UpdateAction) GetEncryptionUpdate() *UpdateEncryption {
	if x, ok := x.GetUpdate().(*UpdateAction_EncryptionUpdate); ok {
		return x.EncryptionUpdate
	}
	return nil
}

func (x *UpdateAction) GetMessageReaction() *ReactionRequest {
	if x, ok := x.GetUpdate().(*UpdateAction_MessageReaction); ok {
		return x.MessageReaction
	}
	return nil
}

func (x *UpdateAction) GetRemoveReaction() *RemoveReactionRequest {
	if x, ok := x.GetUpdate().(*UpdateAction_RemoveReaction); ok {
		return x.RemoveReaction
	}
	return nil
}

func (x *UpdateAction) GetAddEelReEncryptionInit() *AddEelReEncryptionInit {
	if x, ok := x.GetUpdate().(*UpdateAction_AddEelReEncryptionInit); ok {
		return x.AddEelReEncryptionInit
	}
	return nil
}

func (x *UpdateAction) GetEelAppendReEncryptionDestination() *AppendEelReEncryptionDestination {
	if x, ok := x.GetUpdate().(*UpdateAction_EelAppendReEncryptionDestination); ok {
		return x.EelAppendReEncryptionDestination
	}
	return nil
}

func (x *UpdateAction) GetUpdateAllowsTranscription() *UpdateAllowsTranscription {
	if x, ok := x.GetUpdate().(*UpdateAction_UpdateAllowsTranscription); ok {
		return x.UpdateAllowsTranscription
	}
	return nil
}

func (x *UpdateAction) GetAttachTranscription() *AttachTranscription {
	if x, ok := x.GetUpdate().(*UpdateAction_AttachTranscription); ok {
		return x.AttachTranscription
	}
	return nil
}

func (x *UpdateAction) GetEraseStoryMedia() *EraseStoryMedia {
	if x, ok := x.GetUpdate().(*UpdateAction_EraseStoryMedia); ok {
		return x.EraseStoryMedia
	}
	return nil
}

func (x *UpdateAction) GetUpdateTimestamp() int64 {
	if x != nil {
		return x.UpdateTimestamp
	}
	return 0
}

type isUpdateAction_Update interface {
	isUpdateAction_Update()
}

type UpdateAction_Read struct {
	Read *Read `protobuf:"bytes,4,opt,name=read,proto3,oneof"`
}

type UpdateAction_Release struct {
	Release *Release `protobuf:"bytes,5,opt,name=release,proto3,oneof"`
}

type UpdateAction_Save struct {
	Save *Save `protobuf:"bytes,6,opt,name=save,proto3,oneof"`
}

type UpdateAction_Unsave struct {
	Unsave *Unsave `protobuf:"bytes,7,opt,name=unsave,proto3,oneof"`
}

type UpdateAction_Erase struct {
	Erase *Erase `protobuf:"bytes,8,opt,name=erase,proto3,oneof"`
}

type UpdateAction_SaveToCameraRoll struct {
	SaveToCameraRoll *SaveToCameraRoll `protobuf:"bytes,10,opt,name=saveToCameraRoll,proto3,oneof"`
}

type UpdateAction_Screenshot struct {
	Screenshot *Screenshot `protobuf:"bytes,11,opt,name=screenshot,proto3,oneof"`
}

type UpdateAction_ScreenRecord struct {
	ScreenRecord *ScreenRecord `protobuf:"bytes,12,opt,name=screenRecord,proto3,oneof"`
}

type UpdateAction_Replay struct {
	Replay *Replay `protobuf:"bytes,13,opt,name=replay,proto3,oneof"`
}

type UpdateAction_EncryptionUpdate struct {
	EncryptionUpdate *UpdateEncryption `protobuf:"bytes,15,opt,name=encryptionUpdate,proto3,oneof"`
}

type UpdateAction_MessageReaction struct {
	MessageReaction *ReactionRequest `protobuf:"bytes,16,opt,name=messageReaction,proto3,oneof"`
}

type UpdateAction_RemoveReaction struct {
	RemoveReaction *RemoveReactionRequest `protobuf:"bytes,17,opt,name=removeReaction,proto3,oneof"`
}

type UpdateAction_AddEelReEncryptionInit struct {
	AddEelReEncryptionInit *AddEelReEncryptionInit `protobuf:"bytes,18,opt,name=addEelReEncryptionInit,proto3,oneof"`
}

type UpdateAction_EelAppendReEncryptionDestination struct {
	EelAppendReEncryptionDestination *AppendEelReEncryptionDestination `protobuf:"bytes,19,opt,name=eelAppendReEncryptionDestination,proto3,oneof"`
}

type UpdateAction_UpdateAllowsTranscription struct {
	UpdateAllowsTranscription *UpdateAllowsTranscription `protobuf:"bytes,20,opt,name=updateAllowsTranscription,proto3,oneof"`
}

type UpdateAction_AttachTranscription struct {
	AttachTranscription *AttachTranscription `protobuf:"bytes,21,opt,name=attachTranscription,proto3,oneof"`
}

type UpdateAction_EraseStoryMedia struct {
	EraseStoryMedia *EraseStoryMedia `protobuf:"bytes,22,opt,name=eraseStoryMedia,proto3,oneof"`
}

func (*UpdateAction_Read) isUpdateAction_Update() {}

func (*UpdateAction_Release) isUpdateAction_Update() {}

func (*UpdateAction_Save) isUpdateAction_Update() {}

func (*UpdateAction_Unsave) isUpdateAction_Update() {}

func (*UpdateAction_Erase) isUpdateAction_Update() {}

func (*UpdateAction_SaveToCameraRoll) isUpdateAction_Update() {}

func (*UpdateAction_Screenshot) isUpdateAction_Update() {}

func (*UpdateAction_ScreenRecord) isUpdateAction_Update() {}

func (*UpdateAction_Replay) isUpdateAction_Update() {}

func (*UpdateAction_EncryptionUpdate) isUpdateAction_Update() {}

func (*UpdateAction_MessageReaction) isUpdateAction_Update() {}

func (*UpdateAction_RemoveReaction) isUpdateAction_Update() {}

func (*UpdateAction_AddEelReEncryptionInit) isUpdateAction_Update() {}

func (*UpdateAction_EelAppendReEncryptionDestination) isUpdateAction_Update() {}

func (*UpdateAction_UpdateAllowsTranscription) isUpdateAction_Update() {}

func (*UpdateAction_AttachTranscription) isUpdateAction_Update() {}

func (*UpdateAction_EraseStoryMedia) isUpdateAction_Update() {}

type Read struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Read) Reset() {
	*x = Read{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Read) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Read) ProtoMessage() {}

func (x *Read) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Read.ProtoReflect.Descriptor instead.
func (*Read) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{1}
}

type Release struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Release) Reset() {
	*x = Release{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Release) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Release) ProtoMessage() {}

func (x *Release) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Release.ProtoReflect.Descriptor instead.
func (*Release) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{2}
}

type Save struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvelopeEncryption *EnvelopeEncryption `protobuf:"bytes,1,opt,name=envelopeEncryption,proto3" json:"envelopeEncryption,omitempty"`
}

func (x *Save) Reset() {
	*x = Save{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Save) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Save) ProtoMessage() {}

func (x *Save) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Save.ProtoReflect.Descriptor instead.
func (*Save) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{3}
}

func (x *Save) GetEnvelopeEncryption() *EnvelopeEncryption {
	if x != nil {
		return x.EnvelopeEncryption
	}
	return nil
}

type Unsave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Unsave) Reset() {
	*x = Unsave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unsave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unsave) ProtoMessage() {}

func (x *Unsave) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unsave.ProtoReflect.Descriptor instead.
func (*Unsave) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{4}
}

type Erase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Erase) Reset() {
	*x = Erase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Erase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Erase) ProtoMessage() {}

func (x *Erase) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Erase.ProtoReflect.Descriptor instead.
func (*Erase) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{5}
}

type EraseStoryMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EraseStoryMedia) Reset() {
	*x = EraseStoryMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EraseStoryMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EraseStoryMedia) ProtoMessage() {}

func (x *EraseStoryMedia) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EraseStoryMedia.ProtoReflect.Descriptor instead.
func (*EraseStoryMedia) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{6}
}

type Tombstone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Tombstone) Reset() {
	*x = Tombstone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tombstone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tombstone) ProtoMessage() {}

func (x *Tombstone) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tombstone.ProtoReflect.Descriptor instead.
func (*Tombstone) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{7}
}

type SaveToCameraRoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SaveToCameraRoll) Reset() {
	*x = SaveToCameraRoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveToCameraRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToCameraRoll) ProtoMessage() {}

func (x *SaveToCameraRoll) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToCameraRoll.ProtoReflect.Descriptor instead.
func (*SaveToCameraRoll) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{8}
}

type Screenshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Screenshot) Reset() {
	*x = Screenshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screenshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screenshot) ProtoMessage() {}

func (x *Screenshot) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screenshot.ProtoReflect.Descriptor instead.
func (*Screenshot) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{9}
}

type ScreenRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ScreenRecord) Reset() {
	*x = ScreenRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenRecord) ProtoMessage() {}

func (x *ScreenRecord) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenRecord.ProtoReflect.Descriptor instead.
func (*ScreenRecord) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{10}
}

type Replay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentReplayCount int32 `protobuf:"varint,1,opt,name=currentReplayCount,proto3" json:"currentReplayCount,omitempty"`
}

func (x *Replay) Reset() {
	*x = Replay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Replay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Replay) ProtoMessage() {}

func (x *Replay) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Replay.ProtoReflect.Descriptor instead.
func (*Replay) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{11}
}

func (x *Replay) GetCurrentReplayCount() int32 {
	if x != nil {
		return x.CurrentReplayCount
	}
	return 0
}

type UpdateEncryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnvelopeEncryption *EnvelopeEncryption `protobuf:"bytes,1,opt,name=envelopeEncryption,proto3" json:"envelopeEncryption,omitempty"`
}

func (x *UpdateEncryption) Reset() {
	*x = UpdateEncryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_updateAction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEncryption) ProtoMessage() {}

func (x *UpdateEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_updateAction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEncryption.ProtoReflect.Descriptor instead.
func (*UpdateEncryption) Descriptor() ([]byte, []int) {
	return file_updateAction_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateEncryption) GetEnvelopeEncryption() *EnvelopeEncryption {
	if x != nil {
		return x.EnvelopeEncryption
	}
	return nil
}

var File_updateAction_proto protoreflect.FileDescriptor

var file_updateAction_proto_rawDesc = []byte{
	0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x0a, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xdd, 0x0a, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0e, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x04, 0x72, 0x65, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x48,
	0x00, 0x52, 0x04, 0x72, 0x65, 0x61, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x73, 0x61,
	0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x04,
	0x73, 0x61, 0x76, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x75, 0x6e, 0x73, 0x61, 0x76, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x6e, 0x73, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x06, 0x75, 0x6e,
	0x73, 0x61, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x72, 0x61, 0x73, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x61, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x10, 0x73, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x54,
	0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x10, 0x73,
	0x61, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x12,
	0x3a, 0x0a, 0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x48, 0x00, 0x52,
	0x0a, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x40, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a,
	0x06, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x4c, 0x0a,
	0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0e, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x58, 0x0a, 0x16, 0x61, 0x64, 0x64, 0x45, 0x65, 0x6c, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x65, 0x6c, 0x52,
	0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x48,
	0x00, 0x52, 0x16, 0x61, 0x64, 0x64, 0x45, 0x65, 0x6c, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x76, 0x0a, 0x20, 0x65, 0x65, 0x6c,
	0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x41, 0x70, 0x70,
	0x65, 0x6e, 0x64, 0x45, 0x65, 0x6c, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x20, 0x65, 0x65, 0x6c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x68, 0x0a, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77,
	0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x73, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x13, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x0f, 0x65, 0x72, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x65,
	0x72, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x28,
	0x0a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x22, 0x06, 0x0a, 0x04, 0x52, 0x65, 0x61, 0x64, 0x22, 0x09, 0x0a, 0x07, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x04, 0x53, 0x61, 0x76, 0x65, 0x12, 0x4a, 0x0a,
	0x12, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x08, 0x0a, 0x06, 0x55, 0x6e, 0x73,
	0x61, 0x76, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x72, 0x61, 0x73, 0x65, 0x22, 0x11, 0x0a, 0x0f,
	0x45, 0x72, 0x61, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x22,
	0x0b, 0x0a, 0x09, 0x54, 0x6f, 0x6d, 0x62, 0x73, 0x74, 0x6f, 0x6e, 0x65, 0x22, 0x12, 0x0a, 0x10,
	0x53, 0x61, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c,
	0x22, 0x0c, 0x0a, 0x0a, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x0e,
	0x0a, 0x0c, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x38,
	0x0a, 0x06, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5e, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x12,
	0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x65, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_updateAction_proto_rawDescOnce sync.Once
	file_updateAction_proto_rawDescData = file_updateAction_proto_rawDesc
)

func file_updateAction_proto_rawDescGZIP() []byte {
	file_updateAction_proto_rawDescOnce.Do(func() {
		file_updateAction_proto_rawDescData = protoimpl.X.CompressGZIP(file_updateAction_proto_rawDescData)
	})
	return file_updateAction_proto_rawDescData
}

var file_updateAction_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_updateAction_proto_goTypes = []interface{}{
	(*UpdateAction)(nil),                     // 0: updateAction.UpdateAction
	(*Read)(nil),                             // 1: updateAction.Read
	(*Release)(nil),                          // 2: updateAction.Release
	(*Save)(nil),                             // 3: updateAction.Save
	(*Unsave)(nil),                           // 4: updateAction.Unsave
	(*Erase)(nil),                            // 5: updateAction.Erase
	(*EraseStoryMedia)(nil),                  // 6: updateAction.EraseStoryMedia
	(*Tombstone)(nil),                        // 7: updateAction.Tombstone
	(*SaveToCameraRoll)(nil),                 // 8: updateAction.SaveToCameraRoll
	(*Screenshot)(nil),                       // 9: updateAction.Screenshot
	(*ScreenRecord)(nil),                     // 10: updateAction.ScreenRecord
	(*Replay)(nil),                           // 11: updateAction.Replay
	(*UpdateEncryption)(nil),                 // 12: updateAction.UpdateEncryption
	(*UUID)(nil),                             // 13: uuid.UUID
	(*ReactionRequest)(nil),                  // 14: reactions.ReactionRequest
	(*RemoveReactionRequest)(nil),            // 15: reactions.RemoveReactionRequest
	(*AddEelReEncryptionInit)(nil),           // 16: crypto.AddEelReEncryptionInit
	(*AppendEelReEncryptionDestination)(nil), // 17: crypto.AppendEelReEncryptionDestination
	(*UpdateAllowsTranscription)(nil),        // 18: transcription.UpdateAllowsTranscription
	(*AttachTranscription)(nil),              // 19: transcription.AttachTranscription
	(*EnvelopeEncryption)(nil),               // 20: crypto.EnvelopeEncryption
}
var file_updateAction_proto_depIdxs = []int32{
	13, // 0: updateAction.UpdateAction.senderId:type_name -> uuid.UUID
	13, // 1: updateAction.UpdateAction.conversationId:type_name -> uuid.UUID
	1,  // 2: updateAction.UpdateAction.read:type_name -> updateAction.Read
	2,  // 3: updateAction.UpdateAction.release:type_name -> updateAction.Release
	3,  // 4: updateAction.UpdateAction.save:type_name -> updateAction.Save
	4,  // 5: updateAction.UpdateAction.unsave:type_name -> updateAction.Unsave
	5,  // 6: updateAction.UpdateAction.erase:type_name -> updateAction.Erase
	8,  // 7: updateAction.UpdateAction.saveToCameraRoll:type_name -> updateAction.SaveToCameraRoll
	9,  // 8: updateAction.UpdateAction.screenshot:type_name -> updateAction.Screenshot
	10, // 9: updateAction.UpdateAction.screenRecord:type_name -> updateAction.ScreenRecord
	11, // 10: updateAction.UpdateAction.replay:type_name -> updateAction.Replay
	12, // 11: updateAction.UpdateAction.encryptionUpdate:type_name -> updateAction.UpdateEncryption
	14, // 12: updateAction.UpdateAction.messageReaction:type_name -> reactions.ReactionRequest
	15, // 13: updateAction.UpdateAction.removeReaction:type_name -> reactions.RemoveReactionRequest
	16, // 14: updateAction.UpdateAction.addEelReEncryptionInit:type_name -> crypto.AddEelReEncryptionInit
	17, // 15: updateAction.UpdateAction.eelAppendReEncryptionDestination:type_name -> crypto.AppendEelReEncryptionDestination
	18, // 16: updateAction.UpdateAction.updateAllowsTranscription:type_name -> transcription.UpdateAllowsTranscription
	19, // 17: updateAction.UpdateAction.attachTranscription:type_name -> transcription.AttachTranscription
	6,  // 18: updateAction.UpdateAction.eraseStoryMedia:type_name -> updateAction.EraseStoryMedia
	20, // 19: updateAction.Save.envelopeEncryption:type_name -> crypto.EnvelopeEncryption
	20, // 20: updateAction.UpdateEncryption.envelopeEncryption:type_name -> crypto.EnvelopeEncryption
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_updateAction_proto_init() }
func file_updateAction_proto_init() {
	if File_updateAction_proto != nil {
		return
	}
	file_uuid_proto_init()
	file_crypto_proto_init()
	file_reactions_proto_init()
	file_transcription_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_updateAction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Read); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Release); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Save); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unsave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Erase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EraseStoryMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tombstone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveToCameraRoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screenshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Replay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_updateAction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEncryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_updateAction_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*UpdateAction_Read)(nil),
		(*UpdateAction_Release)(nil),
		(*UpdateAction_Save)(nil),
		(*UpdateAction_Unsave)(nil),
		(*UpdateAction_Erase)(nil),
		(*UpdateAction_SaveToCameraRoll)(nil),
		(*UpdateAction_Screenshot)(nil),
		(*UpdateAction_ScreenRecord)(nil),
		(*UpdateAction_Replay)(nil),
		(*UpdateAction_EncryptionUpdate)(nil),
		(*UpdateAction_MessageReaction)(nil),
		(*UpdateAction_RemoveReaction)(nil),
		(*UpdateAction_AddEelReEncryptionInit)(nil),
		(*UpdateAction_EelAppendReEncryptionDestination)(nil),
		(*UpdateAction_UpdateAllowsTranscription)(nil),
		(*UpdateAction_AttachTranscription)(nil),
		(*UpdateAction_EraseStoryMedia)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_updateAction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_updateAction_proto_goTypes,
		DependencyIndexes: file_updateAction_proto_depIdxs,
		MessageInfos:      file_updateAction_proto_msgTypes,
	}.Build()
	File_updateAction_proto = out.File
	file_updateAction_proto_rawDesc = nil
	file_updateAction_proto_goTypes = nil
	file_updateAction_proto_depIdxs = nil
}
