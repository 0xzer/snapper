// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: deltaSync.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BatchDeltaSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaSyncRequests []*DeltaSyncRequest `protobuf:"bytes,1,rep,name=deltaSyncRequests,proto3" json:"deltaSyncRequests,omitempty"`
}

func (x *BatchDeltaSyncRequest) Reset() {
	*x = BatchDeltaSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeltaSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaSyncRequest) ProtoMessage() {}

func (x *BatchDeltaSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaSyncRequest.ProtoReflect.Descriptor instead.
func (*BatchDeltaSyncRequest) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{0}
}

func (x *BatchDeltaSyncRequest) GetDeltaSyncRequests() []*DeltaSyncRequest {
	if x != nil {
		return x.DeltaSyncRequests
	}
	return nil
}

type BatchDeltaSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaSyncResponses []*DeltaSyncResponseWrapper `protobuf:"bytes,1,rep,name=deltaSyncResponses,proto3" json:"deltaSyncResponses,omitempty"`
}

func (x *BatchDeltaSyncResponse) Reset() {
	*x = BatchDeltaSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchDeltaSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchDeltaSyncResponse) ProtoMessage() {}

func (x *BatchDeltaSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchDeltaSyncResponse.ProtoReflect.Descriptor instead.
func (*BatchDeltaSyncResponse) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{1}
}

func (x *BatchDeltaSyncResponse) GetDeltaSyncResponses() []*DeltaSyncResponseWrapper {
	if x != nil {
		return x.DeltaSyncResponses
	}
	return nil
}

type DeltaSyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartingVersion        int64 `protobuf:"varint,1,opt,name=startingVersion,proto3" json:"startingVersion,omitempty"`
	ConversationId         *UUID `protobuf:"bytes,2,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	SelfUserId             *UUID `protobuf:"bytes,4,opt,name=selfUserId,proto3" json:"selfUserId,omitempty"`
	OtherParticipantUserId *UUID `protobuf:"bytes,6,opt,name=otherParticipantUserId,proto3" json:"otherParticipantUserId,omitempty"`
}

func (x *DeltaSyncRequest) Reset() {
	*x = DeltaSyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaSyncRequest) ProtoMessage() {}

func (x *DeltaSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaSyncRequest.ProtoReflect.Descriptor instead.
func (*DeltaSyncRequest) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{2}
}

func (x *DeltaSyncRequest) GetStartingVersion() int64 {
	if x != nil {
		return x.StartingVersion
	}
	return 0
}

func (x *DeltaSyncRequest) GetConversationId() *UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *DeltaSyncRequest) GetSelfUserId() *UUID {
	if x != nil {
		return x.SelfUserId
	}
	return nil
}

func (x *DeltaSyncRequest) GetOtherParticipantUserId() *UUID {
	if x != nil {
		return x.OtherParticipantUserId
	}
	return nil
}

type DeltaSyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartingVersion   int64 `protobuf:"varint,1,opt,name=startingVersion,proto3" json:"startingVersion,omitempty"`
	CurrentServerTime int64 `protobuf:"varint,2,opt,name=currentServerTime,proto3" json:"currentServerTime,omitempty"`
	// Types that are assignable to Metadata:
	//
	//	*DeltaSyncResponse_Conversation
	//	*DeltaSyncResponse_LightweightConversation
	Metadata          isDeltaSyncResponse_Metadata `protobuf_oneof:"metadata"`
	ContentMessages   []*ContentMessage            `protobuf:"bytes,4,rep,name=contentMessages,proto3" json:"contentMessages,omitempty"`
	ResetConversation bool                         `protobuf:"varint,5,opt,name=resetConversation,proto3" json:"resetConversation,omitempty"`
	// Types that are assignable to FeedInfo:
	//
	//	*DeltaSyncResponse_FeedEntry
	//	*DeltaSyncResponse_FeedOpenedMessageDisplayTimestamp
	FeedInfo    isDeltaSyncResponse_FeedInfo `protobuf_oneof:"feedInfo"`
	BaseVersion int64                        `protobuf:"varint,9,opt,name=baseVersion,proto3" json:"baseVersion,omitempty"`
}

func (x *DeltaSyncResponse) Reset() {
	*x = DeltaSyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaSyncResponse) ProtoMessage() {}

func (x *DeltaSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaSyncResponse.ProtoReflect.Descriptor instead.
func (*DeltaSyncResponse) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{3}
}

func (x *DeltaSyncResponse) GetStartingVersion() int64 {
	if x != nil {
		return x.StartingVersion
	}
	return 0
}

func (x *DeltaSyncResponse) GetCurrentServerTime() int64 {
	if x != nil {
		return x.CurrentServerTime
	}
	return 0
}

func (m *DeltaSyncResponse) GetMetadata() isDeltaSyncResponse_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *DeltaSyncResponse) GetConversation() *Conversation {
	if x, ok := x.GetMetadata().(*DeltaSyncResponse_Conversation); ok {
		return x.Conversation
	}
	return nil
}

func (x *DeltaSyncResponse) GetLightweightConversation() *LightweightConversation {
	if x, ok := x.GetMetadata().(*DeltaSyncResponse_LightweightConversation); ok {
		return x.LightweightConversation
	}
	return nil
}

func (x *DeltaSyncResponse) GetContentMessages() []*ContentMessage {
	if x != nil {
		return x.ContentMessages
	}
	return nil
}

func (x *DeltaSyncResponse) GetResetConversation() bool {
	if x != nil {
		return x.ResetConversation
	}
	return false
}

func (m *DeltaSyncResponse) GetFeedInfo() isDeltaSyncResponse_FeedInfo {
	if m != nil {
		return m.FeedInfo
	}
	return nil
}

func (x *DeltaSyncResponse) GetFeedEntry() *ConversationEntry {
	if x, ok := x.GetFeedInfo().(*DeltaSyncResponse_FeedEntry); ok {
		return x.FeedEntry
	}
	return nil
}

func (x *DeltaSyncResponse) GetFeedOpenedMessageDisplayTimestamp() int64 {
	if x, ok := x.GetFeedInfo().(*DeltaSyncResponse_FeedOpenedMessageDisplayTimestamp); ok {
		return x.FeedOpenedMessageDisplayTimestamp
	}
	return 0
}

func (x *DeltaSyncResponse) GetBaseVersion() int64 {
	if x != nil {
		return x.BaseVersion
	}
	return 0
}

type isDeltaSyncResponse_Metadata interface {
	isDeltaSyncResponse_Metadata()
}

type DeltaSyncResponse_Conversation struct {
	Conversation *Conversation `protobuf:"bytes,3,opt,name=conversation,proto3,oneof"`
}

type DeltaSyncResponse_LightweightConversation struct {
	LightweightConversation *LightweightConversation `protobuf:"bytes,8,opt,name=lightweightConversation,proto3,oneof"`
}

func (*DeltaSyncResponse_Conversation) isDeltaSyncResponse_Metadata() {}

func (*DeltaSyncResponse_LightweightConversation) isDeltaSyncResponse_Metadata() {}

type isDeltaSyncResponse_FeedInfo interface {
	isDeltaSyncResponse_FeedInfo()
}

type DeltaSyncResponse_FeedEntry struct {
	FeedEntry *ConversationEntry `protobuf:"bytes,6,opt,name=feedEntry,proto3,oneof"`
}

type DeltaSyncResponse_FeedOpenedMessageDisplayTimestamp struct {
	FeedOpenedMessageDisplayTimestamp int64 `protobuf:"varint,7,opt,name=feedOpenedMessageDisplayTimestamp,proto3,oneof"`
}

func (*DeltaSyncResponse_FeedEntry) isDeltaSyncResponse_FeedInfo() {}

func (*DeltaSyncResponse_FeedOpenedMessageDisplayTimestamp) isDeltaSyncResponse_FeedInfo() {}

type DeltaSyncResponseWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*DeltaSyncResponseWrapper_SuccessResponse
	//	*DeltaSyncResponseWrapper_FailureResponse
	//	*DeltaSyncResponseWrapper_UpToDateResponse
	Response isDeltaSyncResponseWrapper_Response `protobuf_oneof:"response"`
}

func (x *DeltaSyncResponseWrapper) Reset() {
	*x = DeltaSyncResponseWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaSyncResponseWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaSyncResponseWrapper) ProtoMessage() {}

func (x *DeltaSyncResponseWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaSyncResponseWrapper.ProtoReflect.Descriptor instead.
func (*DeltaSyncResponseWrapper) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{4}
}

func (m *DeltaSyncResponseWrapper) GetResponse() isDeltaSyncResponseWrapper_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *DeltaSyncResponseWrapper) GetSuccessResponse() *DeltaSyncResponse {
	if x, ok := x.GetResponse().(*DeltaSyncResponseWrapper_SuccessResponse); ok {
		return x.SuccessResponse
	}
	return nil
}

func (x *DeltaSyncResponseWrapper) GetFailureResponse() *DeltaSyncFailureResponse {
	if x, ok := x.GetResponse().(*DeltaSyncResponseWrapper_FailureResponse); ok {
		return x.FailureResponse
	}
	return nil
}

func (x *DeltaSyncResponseWrapper) GetUpToDateResponse() *DeltaSyncUpToDateResponse {
	if x, ok := x.GetResponse().(*DeltaSyncResponseWrapper_UpToDateResponse); ok {
		return x.UpToDateResponse
	}
	return nil
}

type isDeltaSyncResponseWrapper_Response interface {
	isDeltaSyncResponseWrapper_Response()
}

type DeltaSyncResponseWrapper_SuccessResponse struct {
	SuccessResponse *DeltaSyncResponse `protobuf:"bytes,1,opt,name=successResponse,proto3,oneof"`
}

type DeltaSyncResponseWrapper_FailureResponse struct {
	FailureResponse *DeltaSyncFailureResponse `protobuf:"bytes,2,opt,name=failureResponse,proto3,oneof"`
}

type DeltaSyncResponseWrapper_UpToDateResponse struct {
	UpToDateResponse *DeltaSyncUpToDateResponse `protobuf:"bytes,3,opt,name=upToDateResponse,proto3,oneof"`
}

func (*DeltaSyncResponseWrapper_SuccessResponse) isDeltaSyncResponseWrapper_Response() {}

func (*DeltaSyncResponseWrapper_FailureResponse) isDeltaSyncResponseWrapper_Response() {}

func (*DeltaSyncResponseWrapper_UpToDateResponse) isDeltaSyncResponseWrapper_Response() {}

type DeltaSyncUpToDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId *UUID `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
}

func (x *DeltaSyncUpToDateResponse) Reset() {
	*x = DeltaSyncUpToDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaSyncUpToDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaSyncUpToDateResponse) ProtoMessage() {}

func (x *DeltaSyncUpToDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaSyncUpToDateResponse.ProtoReflect.Descriptor instead.
func (*DeltaSyncUpToDateResponse) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{5}
}

func (x *DeltaSyncUpToDateResponse) GetConversationId() *UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

type DeltaSyncFailureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationId *UUID          `protobuf:"bytes,1,opt,name=conversationId,proto3" json:"conversationId,omitempty"`
	FailureReason  *FailureReason `protobuf:"bytes,2,opt,name=failureReason,proto3" json:"failureReason,omitempty"`
	Retryable      bool           `protobuf:"varint,3,opt,name=retryable,proto3" json:"retryable,omitempty"`
}

func (x *DeltaSyncFailureResponse) Reset() {
	*x = DeltaSyncFailureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_deltaSync_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeltaSyncFailureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeltaSyncFailureResponse) ProtoMessage() {}

func (x *DeltaSyncFailureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_deltaSync_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeltaSyncFailureResponse.ProtoReflect.Descriptor instead.
func (*DeltaSyncFailureResponse) Descriptor() ([]byte, []int) {
	return file_deltaSync_proto_rawDescGZIP(), []int{6}
}

func (x *DeltaSyncFailureResponse) GetConversationId() *UUID {
	if x != nil {
		return x.ConversationId
	}
	return nil
}

func (x *DeltaSyncFailureResponse) GetFailureReason() *FailureReason {
	if x != nil {
		return x.FailureReason
	}
	return nil
}

func (x *DeltaSyncFailureResponse) GetRetryable() bool {
	if x != nil {
		return x.Retryable
	}
	return false
}

var File_deltaSync_proto protoreflect.FileDescriptor

var file_deltaSync_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x1a, 0x0a, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x68, 0x74,
	0x74, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x62, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x6d, 0x0a, 0x16,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x44,
	0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x12, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79,
	0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0a,
	0x73, 0x65, 0x6c, 0x66, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x16, 0x6f, 0x74,
	0x68, 0x65, 0x72, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75, 0x69,
	0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x16, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xcd,
	0x04, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x61,
	0x0a, 0x17, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x67, 0x68, 0x74, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x09, 0x66, 0x65, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x01, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x21, 0x66, 0x65, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x01, 0x52, 0x21, 0x66, 0x65, 0x65, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x95,
	0x02, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x0f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63,
	0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x75, 0x70, 0x54, 0x6f, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x75, 0x70, 0x54, 0x6f, 0x44, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x55, 0x70, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x75,
	0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x74,
	0x61, 0x53, 0x79, 0x6e, 0x63, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75,
	0x75, 0x69, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x61, 0x62, 0x6c,
	0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_deltaSync_proto_rawDescOnce sync.Once
	file_deltaSync_proto_rawDescData = file_deltaSync_proto_rawDesc
)

func file_deltaSync_proto_rawDescGZIP() []byte {
	file_deltaSync_proto_rawDescOnce.Do(func() {
		file_deltaSync_proto_rawDescData = protoimpl.X.CompressGZIP(file_deltaSync_proto_rawDescData)
	})
	return file_deltaSync_proto_rawDescData
}

var file_deltaSync_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_deltaSync_proto_goTypes = []interface{}{
	(*BatchDeltaSyncRequest)(nil),     // 0: deltaSync.BatchDeltaSyncRequest
	(*BatchDeltaSyncResponse)(nil),    // 1: deltaSync.BatchDeltaSyncResponse
	(*DeltaSyncRequest)(nil),          // 2: deltaSync.DeltaSyncRequest
	(*DeltaSyncResponse)(nil),         // 3: deltaSync.DeltaSyncResponse
	(*DeltaSyncResponseWrapper)(nil),  // 4: deltaSync.DeltaSyncResponseWrapper
	(*DeltaSyncUpToDateResponse)(nil), // 5: deltaSync.DeltaSyncUpToDateResponse
	(*DeltaSyncFailureResponse)(nil),  // 6: deltaSync.DeltaSyncFailureResponse
	(*UUID)(nil),                      // 7: uuid.UUID
	(*Conversation)(nil),              // 8: conversation.Conversation
	(*LightweightConversation)(nil),   // 9: conversation.LightweightConversation
	(*ContentMessage)(nil),            // 10: messages.ContentMessage
	(*ConversationEntry)(nil),         // 11: conversation.ConversationEntry
	(*FailureReason)(nil),             // 12: http.FailureReason
}
var file_deltaSync_proto_depIdxs = []int32{
	2,  // 0: deltaSync.BatchDeltaSyncRequest.deltaSyncRequests:type_name -> deltaSync.DeltaSyncRequest
	4,  // 1: deltaSync.BatchDeltaSyncResponse.deltaSyncResponses:type_name -> deltaSync.DeltaSyncResponseWrapper
	7,  // 2: deltaSync.DeltaSyncRequest.conversationId:type_name -> uuid.UUID
	7,  // 3: deltaSync.DeltaSyncRequest.selfUserId:type_name -> uuid.UUID
	7,  // 4: deltaSync.DeltaSyncRequest.otherParticipantUserId:type_name -> uuid.UUID
	8,  // 5: deltaSync.DeltaSyncResponse.conversation:type_name -> conversation.Conversation
	9,  // 6: deltaSync.DeltaSyncResponse.lightweightConversation:type_name -> conversation.LightweightConversation
	10, // 7: deltaSync.DeltaSyncResponse.contentMessages:type_name -> messages.ContentMessage
	11, // 8: deltaSync.DeltaSyncResponse.feedEntry:type_name -> conversation.ConversationEntry
	3,  // 9: deltaSync.DeltaSyncResponseWrapper.successResponse:type_name -> deltaSync.DeltaSyncResponse
	6,  // 10: deltaSync.DeltaSyncResponseWrapper.failureResponse:type_name -> deltaSync.DeltaSyncFailureResponse
	5,  // 11: deltaSync.DeltaSyncResponseWrapper.upToDateResponse:type_name -> deltaSync.DeltaSyncUpToDateResponse
	7,  // 12: deltaSync.DeltaSyncUpToDateResponse.conversationId:type_name -> uuid.UUID
	7,  // 13: deltaSync.DeltaSyncFailureResponse.conversationId:type_name -> uuid.UUID
	12, // 14: deltaSync.DeltaSyncFailureResponse.failureReason:type_name -> http.FailureReason
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_deltaSync_proto_init() }
func file_deltaSync_proto_init() {
	if File_deltaSync_proto != nil {
		return
	}
	file_uuid_proto_init()
	file_conversation_proto_init()
	file_messages_proto_init()
	file_http_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_deltaSync_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeltaSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchDeltaSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaSyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaSyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaSyncResponseWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaSyncUpToDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_deltaSync_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeltaSyncFailureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_deltaSync_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*DeltaSyncResponse_Conversation)(nil),
		(*DeltaSyncResponse_LightweightConversation)(nil),
		(*DeltaSyncResponse_FeedEntry)(nil),
		(*DeltaSyncResponse_FeedOpenedMessageDisplayTimestamp)(nil),
	}
	file_deltaSync_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*DeltaSyncResponseWrapper_SuccessResponse)(nil),
		(*DeltaSyncResponseWrapper_FailureResponse)(nil),
		(*DeltaSyncResponseWrapper_UpToDateResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_deltaSync_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_deltaSync_proto_goTypes,
		DependencyIndexes: file_deltaSync_proto_depIdxs,
		MessageInfos:      file_deltaSync_proto_msgTypes,
	}.Build()
	File_deltaSync_proto = out.File
	file_deltaSync_proto_rawDesc = nil
	file_deltaSync_proto_goTypes = nil
	file_deltaSync_proto_depIdxs = nil
}
