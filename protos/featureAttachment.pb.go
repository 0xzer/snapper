// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: featureAttachment.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FeatureAttachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Attachment:
	//
	//	*FeatureAttachment_FsnEndpoint
	//	*FeatureAttachment_SnapStoryContent
	//	*FeatureAttachment_ShareInfo
	//	*FeatureAttachment_StoryPostInfo
	//	*FeatureAttachment_MentionInfo
	//	*FeatureAttachment_ReplyMessageInfo
	//	*FeatureAttachment_GiftInfo
	//	*FeatureAttachment_AutoSave
	//	*FeatureAttachment_SnapViewability
	Attachment isFeatureAttachment_Attachment `protobuf_oneof:"attachment"`
}

func (x *FeatureAttachment) Reset() {
	*x = FeatureAttachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_featureAttachment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeatureAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeatureAttachment) ProtoMessage() {}

func (x *FeatureAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_featureAttachment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeatureAttachment.ProtoReflect.Descriptor instead.
func (*FeatureAttachment) Descriptor() ([]byte, []int) {
	return file_featureAttachment_proto_rawDescGZIP(), []int{0}
}

func (m *FeatureAttachment) GetAttachment() isFeatureAttachment_Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (x *FeatureAttachment) GetFsnEndpoint() *FSNEndpoint {
	if x, ok := x.GetAttachment().(*FeatureAttachment_FsnEndpoint); ok {
		return x.FsnEndpoint
	}
	return nil
}

func (x *FeatureAttachment) GetSnapStoryContent() *SnapStoryId {
	if x, ok := x.GetAttachment().(*FeatureAttachment_SnapStoryContent); ok {
		return x.SnapStoryContent
	}
	return nil
}

func (x *FeatureAttachment) GetShareInfo() *StoryMentionInfo {
	if x, ok := x.GetAttachment().(*FeatureAttachment_ShareInfo); ok {
		return x.ShareInfo
	}
	return nil
}

func (x *FeatureAttachment) GetStoryPostInfo() *StoryPostInfo {
	if x, ok := x.GetAttachment().(*FeatureAttachment_StoryPostInfo); ok {
		return x.StoryPostInfo
	}
	return nil
}

func (x *FeatureAttachment) GetMentionInfo() *MentionInfo {
	if x, ok := x.GetAttachment().(*FeatureAttachment_MentionInfo); ok {
		return x.MentionInfo
	}
	return nil
}

func (x *FeatureAttachment) GetReplyMessageInfo() *ReplyMessageInfo {
	if x, ok := x.GetAttachment().(*FeatureAttachment_ReplyMessageInfo); ok {
		return x.ReplyMessageInfo
	}
	return nil
}

func (x *FeatureAttachment) GetGiftInfo() *GiftInfo {
	if x, ok := x.GetAttachment().(*FeatureAttachment_GiftInfo); ok {
		return x.GiftInfo
	}
	return nil
}

func (x *FeatureAttachment) GetAutoSave() *AutoSave {
	if x, ok := x.GetAttachment().(*FeatureAttachment_AutoSave); ok {
		return x.AutoSave
	}
	return nil
}

func (x *FeatureAttachment) GetSnapViewability() *SnapViewability {
	if x, ok := x.GetAttachment().(*FeatureAttachment_SnapViewability); ok {
		return x.SnapViewability
	}
	return nil
}

type isFeatureAttachment_Attachment interface {
	isFeatureAttachment_Attachment()
}

type FeatureAttachment_FsnEndpoint struct {
	FsnEndpoint *FSNEndpoint `protobuf:"bytes,1,opt,name=fsnEndpoint,proto3,oneof"`
}

type FeatureAttachment_SnapStoryContent struct {
	SnapStoryContent *SnapStoryId `protobuf:"bytes,2,opt,name=snapStoryContent,proto3,oneof"`
}

type FeatureAttachment_ShareInfo struct {
	ShareInfo *StoryMentionInfo `protobuf:"bytes,3,opt,name=shareInfo,proto3,oneof"`
}

type FeatureAttachment_StoryPostInfo struct {
	StoryPostInfo *StoryPostInfo `protobuf:"bytes,4,opt,name=storyPostInfo,proto3,oneof"`
}

type FeatureAttachment_MentionInfo struct {
	MentionInfo *MentionInfo `protobuf:"bytes,5,opt,name=mentionInfo,proto3,oneof"`
}

type FeatureAttachment_ReplyMessageInfo struct {
	ReplyMessageInfo *ReplyMessageInfo `protobuf:"bytes,6,opt,name=replyMessageInfo,proto3,oneof"`
}

type FeatureAttachment_GiftInfo struct {
	GiftInfo *GiftInfo `protobuf:"bytes,7,opt,name=giftInfo,proto3,oneof"`
}

type FeatureAttachment_AutoSave struct {
	AutoSave *AutoSave `protobuf:"bytes,8,opt,name=autoSave,proto3,oneof"`
}

type FeatureAttachment_SnapViewability struct {
	SnapViewability *SnapViewability `protobuf:"bytes,9,opt,name=snapViewability,proto3,oneof"`
}

func (*FeatureAttachment_FsnEndpoint) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_SnapStoryContent) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_ShareInfo) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_StoryPostInfo) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_MentionInfo) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_ReplyMessageInfo) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_GiftInfo) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_AutoSave) isFeatureAttachment_Attachment() {}

func (*FeatureAttachment_SnapViewability) isFeatureAttachment_Attachment() {}

type FSNEndpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FsnEndpoint string `protobuf:"bytes,1,opt,name=fsnEndpoint,proto3" json:"fsnEndpoint,omitempty"`
}

func (x *FSNEndpoint) Reset() {
	*x = FSNEndpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_featureAttachment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSNEndpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSNEndpoint) ProtoMessage() {}

func (x *FSNEndpoint) ProtoReflect() protoreflect.Message {
	mi := &file_featureAttachment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSNEndpoint.ProtoReflect.Descriptor instead.
func (*FSNEndpoint) Descriptor() ([]byte, []int) {
	return file_featureAttachment_proto_rawDescGZIP(), []int{1}
}

func (x *FSNEndpoint) GetFsnEndpoint() string {
	if x != nil {
		return x.FsnEndpoint
	}
	return ""
}

type AutoSave struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AutoSave) Reset() {
	*x = AutoSave{}
	if protoimpl.UnsafeEnabled {
		mi := &file_featureAttachment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoSave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoSave) ProtoMessage() {}

func (x *AutoSave) ProtoReflect() protoreflect.Message {
	mi := &file_featureAttachment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoSave.ProtoReflect.Descriptor instead.
func (*AutoSave) Descriptor() ([]byte, []int) {
	return file_featureAttachment_proto_rawDescGZIP(), []int{2}
}

var File_featureAttachment_proto protoreflect.FileDescriptor

var file_featureAttachment_proto_rawDesc = []byte{
	0x0a, 0x17, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0b, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x04, 0x0a, 0x11, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x66, 0x73,
	0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x46, 0x53, 0x4e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x66, 0x73, 0x6e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x40,
	0x0a, 0x10, 0x73, 0x6e, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x2e, 0x53, 0x6e, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x48, 0x00, 0x52, 0x10,
	0x73, 0x6e, 0x61, 0x70, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x37, 0x0a, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x79, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x48, 0x0a, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x69,
	0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x67,
	0x69, 0x66, 0x74, 0x73, 0x2e, 0x47, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x08, 0x67, 0x69, 0x66, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x39, 0x0a, 0x08, 0x61, 0x75, 0x74,
	0x6f, 0x53, 0x61, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x61, 0x76, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f,
	0x53, 0x61, 0x76, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x56, 0x69, 0x65, 0x77,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6e, 0x61, 0x70, 0x56, 0x69, 0x65, 0x77, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x56, 0x69,
	0x65, 0x77, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x2f, 0x0a, 0x0b, 0x46, 0x53, 0x4e, 0x45, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x73, 0x6e, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x73, 0x6e,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x0a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x6f,
	0x53, 0x61, 0x76, 0x65, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_featureAttachment_proto_rawDescOnce sync.Once
	file_featureAttachment_proto_rawDescData = file_featureAttachment_proto_rawDesc
)

func file_featureAttachment_proto_rawDescGZIP() []byte {
	file_featureAttachment_proto_rawDescOnce.Do(func() {
		file_featureAttachment_proto_rawDescData = protoimpl.X.CompressGZIP(file_featureAttachment_proto_rawDescData)
	})
	return file_featureAttachment_proto_rawDescData
}

var file_featureAttachment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_featureAttachment_proto_goTypes = []interface{}{
	(*FeatureAttachment)(nil), // 0: featureAttachment.FeatureAttachment
	(*FSNEndpoint)(nil),       // 1: featureAttachment.FSNEndpoint
	(*AutoSave)(nil),          // 2: featureAttachment.AutoSave
	(*SnapStoryId)(nil),       // 3: story.SnapStoryId
	(*StoryMentionInfo)(nil),  // 4: story.StoryMentionInfo
	(*StoryPostInfo)(nil),     // 5: story.StoryPostInfo
	(*MentionInfo)(nil),       // 6: common.MentionInfo
	(*ReplyMessageInfo)(nil),  // 7: messages.ReplyMessageInfo
	(*GiftInfo)(nil),          // 8: gifts.GiftInfo
	(*SnapViewability)(nil),   // 9: common.SnapViewability
}
var file_featureAttachment_proto_depIdxs = []int32{
	1, // 0: featureAttachment.FeatureAttachment.fsnEndpoint:type_name -> featureAttachment.FSNEndpoint
	3, // 1: featureAttachment.FeatureAttachment.snapStoryContent:type_name -> story.SnapStoryId
	4, // 2: featureAttachment.FeatureAttachment.shareInfo:type_name -> story.StoryMentionInfo
	5, // 3: featureAttachment.FeatureAttachment.storyPostInfo:type_name -> story.StoryPostInfo
	6, // 4: featureAttachment.FeatureAttachment.mentionInfo:type_name -> common.MentionInfo
	7, // 5: featureAttachment.FeatureAttachment.replyMessageInfo:type_name -> messages.ReplyMessageInfo
	8, // 6: featureAttachment.FeatureAttachment.giftInfo:type_name -> gifts.GiftInfo
	2, // 7: featureAttachment.FeatureAttachment.autoSave:type_name -> featureAttachment.AutoSave
	9, // 8: featureAttachment.FeatureAttachment.snapViewability:type_name -> common.SnapViewability
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_featureAttachment_proto_init() }
func file_featureAttachment_proto_init() {
	if File_featureAttachment_proto != nil {
		return
	}
	file_story_proto_init()
	file_common_proto_init()
	file_messages_proto_init()
	file_gifts_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_featureAttachment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeatureAttachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_featureAttachment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSNEndpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_featureAttachment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoSave); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_featureAttachment_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*FeatureAttachment_FsnEndpoint)(nil),
		(*FeatureAttachment_SnapStoryContent)(nil),
		(*FeatureAttachment_ShareInfo)(nil),
		(*FeatureAttachment_StoryPostInfo)(nil),
		(*FeatureAttachment_MentionInfo)(nil),
		(*FeatureAttachment_ReplyMessageInfo)(nil),
		(*FeatureAttachment_GiftInfo)(nil),
		(*FeatureAttachment_AutoSave)(nil),
		(*FeatureAttachment_SnapViewability)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_featureAttachment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_featureAttachment_proto_goTypes,
		DependencyIndexes: file_featureAttachment_proto_depIdxs,
		MessageInfos:      file_featureAttachment_proto_msgTypes,
	}.Build()
	File_featureAttachment_proto = out.File
	file_featureAttachment_proto_rawDesc = nil
	file_featureAttachment_proto_goTypes = nil
	file_featureAttachment_proto_depIdxs = nil
}
