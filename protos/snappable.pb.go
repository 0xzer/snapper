// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: snappable.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EncryptionScheme int32

const (
	EncryptionScheme_ENCRYPTION_SCHEME_NOT_APPLICABLE EncryptionScheme = 0
	EncryptionScheme_ENCRYPTION_SCHEME_SPOOKEY        EncryptionScheme = 1
	EncryptionScheme_ENCRYPTION_SCHEME_REGISTRY       EncryptionScheme = 2
	EncryptionScheme_ENCRYPTION_SCHEME_FIDELIUS       EncryptionScheme = 3
)

// Enum value maps for EncryptionScheme.
var (
	EncryptionScheme_name = map[int32]string{
		0: "ENCRYPTION_SCHEME_NOT_APPLICABLE",
		1: "ENCRYPTION_SCHEME_SPOOKEY",
		2: "ENCRYPTION_SCHEME_REGISTRY",
		3: "ENCRYPTION_SCHEME_FIDELIUS",
	}
	EncryptionScheme_value = map[string]int32{
		"ENCRYPTION_SCHEME_NOT_APPLICABLE": 0,
		"ENCRYPTION_SCHEME_SPOOKEY":        1,
		"ENCRYPTION_SCHEME_REGISTRY":       2,
		"ENCRYPTION_SCHEME_FIDELIUS":       3,
	}
)

func (x EncryptionScheme) Enum() *EncryptionScheme {
	p := new(EncryptionScheme)
	*p = x
	return p
}

func (x EncryptionScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_snappable_proto_enumTypes[0].Descriptor()
}

func (EncryptionScheme) Type() protoreflect.EnumType {
	return &file_snappable_proto_enumTypes[0]
}

func (x EncryptionScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionScheme.Descriptor instead.
func (EncryptionScheme) EnumDescriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{0}
}

type ReplyType int32

const (
	ReplyType_REPLY_TYPE_NOT_APPLICABLE ReplyType = 0
	ReplyType_REPLY_TYPE_CONTEXT        ReplyType = 1
	ReplyType_REPLY_TYPE_INTERSTITIAL   ReplyType = 2
)

// Enum value maps for ReplyType.
var (
	ReplyType_name = map[int32]string{
		0: "REPLY_TYPE_NOT_APPLICABLE",
		1: "REPLY_TYPE_CONTEXT",
		2: "REPLY_TYPE_INTERSTITIAL",
	}
	ReplyType_value = map[string]int32{
		"REPLY_TYPE_NOT_APPLICABLE": 0,
		"REPLY_TYPE_CONTEXT":        1,
		"REPLY_TYPE_INTERSTITIAL":   2,
	}
)

func (x ReplyType) Enum() *ReplyType {
	p := new(ReplyType)
	*p = x
	return p
}

func (x ReplyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplyType) Descriptor() protoreflect.EnumDescriptor {
	return file_snappable_proto_enumTypes[1].Descriptor()
}

func (ReplyType) Type() protoreflect.EnumType {
	return &file_snappable_proto_enumTypes[1]
}

func (x ReplyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReplyType.Descriptor instead.
func (ReplyType) EnumDescriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{1}
}

type EncryptionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                  []byte           `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	IvStore              []*IvStoreEntry  `protobuf:"bytes,2,rep,name=ivStore,proto3" json:"ivStore,omitempty"`
	IsKeyServerEncrypted bool             `protobuf:"varint,3,opt,name=isKeyServerEncrypted,proto3" json:"isKeyServerEncrypted,omitempty"`
	IsKeyE2EEncrypted    bool             `protobuf:"varint,4,opt,name=isKeyE2eEncrypted,proto3" json:"isKeyE2eEncrypted,omitempty"`
	EncryptionScheme     EncryptionScheme `protobuf:"varint,5,opt,name=encryptionScheme,proto3,enum=snappable.EncryptionScheme" json:"encryptionScheme,omitempty"`
}

func (x *EncryptionData) Reset() {
	*x = EncryptionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionData) ProtoMessage() {}

func (x *EncryptionData) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionData.ProtoReflect.Descriptor instead.
func (*EncryptionData) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{0}
}

func (x *EncryptionData) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *EncryptionData) GetIvStore() []*IvStoreEntry {
	if x != nil {
		return x.IvStore
	}
	return nil
}

func (x *EncryptionData) GetIsKeyServerEncrypted() bool {
	if x != nil {
		return x.IsKeyServerEncrypted
	}
	return false
}

func (x *EncryptionData) GetIsKeyE2EEncrypted() bool {
	if x != nil {
		return x.IsKeyE2EEncrypted
	}
	return false
}

func (x *EncryptionData) GetEncryptionScheme() EncryptionScheme {
	if x != nil {
		return x.EncryptionScheme
	}
	return EncryptionScheme_ENCRYPTION_SCHEME_NOT_APPLICABLE
}

type PlayerData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Store           []*StoreEntry `protobuf:"bytes,1,rep,name=store,proto3" json:"store,omitempty"`
	SerializedStore []byte        `protobuf:"bytes,2,opt,name=serializedStore,proto3" json:"serializedStore,omitempty"`
}

func (x *PlayerData) Reset() {
	*x = PlayerData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerData) ProtoMessage() {}

func (x *PlayerData) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerData.ProtoReflect.Descriptor instead.
func (*PlayerData) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{1}
}

func (x *PlayerData) GetStore() []*StoreEntry {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *PlayerData) GetSerializedStore() []byte {
	if x != nil {
		return x.SerializedStore
	}
	return nil
}

type StoreEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StoreEntry) Reset() {
	*x = StoreEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreEntry) ProtoMessage() {}

func (x *StoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreEntry.ProtoReflect.Descriptor instead.
func (*StoreEntry) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{2}
}

func (x *StoreEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StoreEntry) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SessionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData []*PlayerDataEntry `protobuf:"bytes,1,rep,name=playerData,proto3" json:"playerData,omitempty"`
}

func (x *SessionData) Reset() {
	*x = SessionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionData) ProtoMessage() {}

func (x *SessionData) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionData.ProtoReflect.Descriptor instead.
func (*SessionData) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{3}
}

func (x *SessionData) GetPlayerData() []*PlayerDataEntry {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type PlayerDataEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *PlayerData `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PlayerDataEntry) Reset() {
	*x = PlayerDataEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerDataEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerDataEntry) ProtoMessage() {}

func (x *PlayerDataEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerDataEntry.ProtoReflect.Descriptor instead.
func (*PlayerDataEntry) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerDataEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PlayerDataEntry) GetValue() *PlayerData {
	if x != nil {
		return x.Value
	}
	return nil
}

type SnappableMedia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	PlayerId    string `protobuf:"bytes,2,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Key         string `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	CreatedTime int64  `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
}

func (x *SnappableMedia) Reset() {
	*x = SnappableMedia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnappableMedia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnappableMedia) ProtoMessage() {}

func (x *SnappableMedia) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnappableMedia.ProtoReflect.Descriptor instead.
func (*SnappableMedia) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{5}
}

func (x *SnappableMedia) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SnappableMedia) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SnappableMedia) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SnappableMedia) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SnappableMedia) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

type SnappableMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Snappable          *Snappable        `protobuf:"bytes,1,opt,name=snappable,proto3" json:"snappable,omitempty"`
	Media              []*SnappableMedia `protobuf:"bytes,2,rep,name=media,proto3" json:"media,omitempty"`
	EffectId           string            `protobuf:"bytes,3,opt,name=effectId,proto3" json:"effectId,omitempty"`
	UserIds            []string          `protobuf:"bytes,4,rep,name=userIds,proto3" json:"userIds,omitempty"`
	FocusPointX        float64           `protobuf:"fixed64,5,opt,name=focusPointX,proto3" json:"focusPointX,omitempty"`
	FocusPointY        float64           `protobuf:"fixed64,6,opt,name=focusPointY,proto3" json:"focusPointY,omitempty"`
	FocusPointWidth    float64           `protobuf:"fixed64,7,opt,name=focusPointWidth,proto3" json:"focusPointWidth,omitempty"`
	ReplyType          ReplyType         `protobuf:"varint,8,opt,name=replyType,proto3,enum=snappable.ReplyType" json:"replyType,omitempty"`
	Snap3DData         *Snap3DData       `protobuf:"bytes,9,opt,name=snap3dData,proto3" json:"snap3dData,omitempty"`
	UsesCameraRollData *UsesCameraRoll   `protobuf:"bytes,10,opt,name=usesCameraRollData,proto3" json:"usesCameraRollData,omitempty"`
	AssetBatchId       string            `protobuf:"bytes,500,opt,name=assetBatchId,proto3" json:"assetBatchId,omitempty"`
}

func (x *SnappableMessage) Reset() {
	*x = SnappableMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SnappableMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnappableMessage) ProtoMessage() {}

func (x *SnappableMessage) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnappableMessage.ProtoReflect.Descriptor instead.
func (*SnappableMessage) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{6}
}

func (x *SnappableMessage) GetSnappable() *Snappable {
	if x != nil {
		return x.Snappable
	}
	return nil
}

func (x *SnappableMessage) GetMedia() []*SnappableMedia {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *SnappableMessage) GetEffectId() string {
	if x != nil {
		return x.EffectId
	}
	return ""
}

func (x *SnappableMessage) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *SnappableMessage) GetFocusPointX() float64 {
	if x != nil {
		return x.FocusPointX
	}
	return 0
}

func (x *SnappableMessage) GetFocusPointY() float64 {
	if x != nil {
		return x.FocusPointY
	}
	return 0
}

func (x *SnappableMessage) GetFocusPointWidth() float64 {
	if x != nil {
		return x.FocusPointWidth
	}
	return 0
}

func (x *SnappableMessage) GetReplyType() ReplyType {
	if x != nil {
		return x.ReplyType
	}
	return ReplyType_REPLY_TYPE_NOT_APPLICABLE
}

func (x *SnappableMessage) GetSnap3DData() *Snap3DData {
	if x != nil {
		return x.Snap3DData
	}
	return nil
}

func (x *SnappableMessage) GetUsesCameraRollData() *UsesCameraRoll {
	if x != nil {
		return x.UsesCameraRollData
	}
	return nil
}

func (x *SnappableMessage) GetAssetBatchId() string {
	if x != nil {
		return x.AssetBatchId
	}
	return ""
}

type Snappable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	SessionId      string          `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	PlayerId       string          `protobuf:"bytes,3,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SessionData    *SessionData    `protobuf:"bytes,4,opt,name=sessionData,proto3" json:"sessionData,omitempty"`
	CreatedTime    int64           `protobuf:"varint,5,opt,name=createdTime,proto3" json:"createdTime,omitempty"`
	ExpireTime     int64           `protobuf:"varint,6,opt,name=expireTime,proto3" json:"expireTime,omitempty"`
	Version        int32           `protobuf:"varint,7,opt,name=version,proto3" json:"version,omitempty"`
	EncryptionData *EncryptionData `protobuf:"bytes,8,opt,name=encryptionData,proto3" json:"encryptionData,omitempty"`
	SessionDepth   int32           `protobuf:"varint,9,opt,name=sessionDepth,proto3" json:"sessionDepth,omitempty"`
}

func (x *Snappable) Reset() {
	*x = Snappable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snappable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snappable) ProtoMessage() {}

func (x *Snappable) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snappable.ProtoReflect.Descriptor instead.
func (*Snappable) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{7}
}

func (x *Snappable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Snappable) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Snappable) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Snappable) GetSessionData() *SessionData {
	if x != nil {
		return x.SessionData
	}
	return nil
}

func (x *Snappable) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *Snappable) GetExpireTime() int64 {
	if x != nil {
		return x.ExpireTime
	}
	return 0
}

func (x *Snappable) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Snappable) GetEncryptionData() *EncryptionData {
	if x != nil {
		return x.EncryptionData
	}
	return nil
}

func (x *Snappable) GetSessionDepth() int32 {
	if x != nil {
		return x.SessionDepth
	}
	return 0
}

type Snap3DData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AllowZippedMedia bool `protobuf:"varint,1,opt,name=allowZippedMedia,proto3" json:"allowZippedMedia,omitempty"`
}

func (x *Snap3DData) Reset() {
	*x = Snap3DData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Snap3DData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snap3DData) ProtoMessage() {}

func (x *Snap3DData) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snap3DData.ProtoReflect.Descriptor instead.
func (*Snap3DData) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{8}
}

func (x *Snap3DData) GetAllowZippedMedia() bool {
	if x != nil {
		return x.AllowZippedMedia
	}
	return false
}

type UsesCameraRoll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UsesCameraRoll bool `protobuf:"varint,1,opt,name=usesCameraRoll,proto3" json:"usesCameraRoll,omitempty"`
}

func (x *UsesCameraRoll) Reset() {
	*x = UsesCameraRoll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsesCameraRoll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsesCameraRoll) ProtoMessage() {}

func (x *UsesCameraRoll) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsesCameraRoll.ProtoReflect.Descriptor instead.
func (*UsesCameraRoll) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{9}
}

func (x *UsesCameraRoll) GetUsesCameraRoll() bool {
	if x != nil {
		return x.UsesCameraRoll
	}
	return false
}

type IvStoreEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *IvStoreEntry) Reset() {
	*x = IvStoreEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_snappable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IvStoreEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IvStoreEntry) ProtoMessage() {}

func (x *IvStoreEntry) ProtoReflect() protoreflect.Message {
	mi := &file_snappable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IvStoreEntry.ProtoReflect.Descriptor instead.
func (*IvStoreEntry) Descriptor() ([]byte, []int) {
	return file_snappable_proto_rawDescGZIP(), []int{10}
}

func (x *IvStoreEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IvStoreEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_snappable_proto protoreflect.FileDescriptor

var file_snappable_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x80, 0x02, 0x0a,
	0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x31, 0x0a, 0x07, 0x69, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x49,
	0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x76, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x4b, 0x65,
	0x79, 0x45, 0x32, 0x65, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x4b, 0x65, 0x79, 0x45, 0x32, 0x65, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x12, 0x47, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x10, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x22,
	0x63, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x0b, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x50, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x6e, 0x61, 0x70,
	0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x53, 0x6e, 0x61, 0x70,
	0x70, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf6, 0x03, 0x0a, 0x10, 0x53,
	0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x32, 0x0a, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53,
	0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x52, 0x05, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f,
	0x63, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x58, 0x12, 0x20, 0x0a, 0x0b,
	0x66, 0x6f, 0x63, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0b, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x59, 0x12, 0x28,
	0x0a, 0x0f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x32, 0x0a, 0x09, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x6e,
	0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x0a,
	0x73, 0x6e, 0x61, 0x70, 0x33, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x6e, 0x61,
	0x70, 0x33, 0x44, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x33, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x49, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x73,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x52, 0x12, 0x75, 0x73, 0x65, 0x73,
	0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x18, 0xf4,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x49, 0x64, 0x22, 0xd2, 0x02, 0x0a, 0x09, 0x53, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x6e, 0x61, 0x70, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x41, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x6e, 0x61, 0x70,
	0x70, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x22, 0x38, 0x0a, 0x0a, 0x53, 0x6e, 0x61, 0x70,
	0x33, 0x44, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5a,
	0x69, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5a, 0x69, 0x70, 0x70, 0x65, 0x64, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x22, 0x38, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x52, 0x6f, 0x6c, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x73, 0x43, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x75, 0x73,
	0x65, 0x73, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x6f, 0x6c, 0x6c, 0x22, 0x36, 0x0a, 0x0c,
	0x49, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x2a, 0x97, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x20, 0x45, 0x4e, 0x43,
	0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43,
	0x48, 0x45, 0x4d, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x4f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x4d, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x59, 0x10, 0x02, 0x12, 0x1e,
	0x0a, 0x1a, 0x45, 0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x43, 0x48,
	0x45, 0x4d, 0x45, 0x5f, 0x46, 0x49, 0x44, 0x45, 0x4c, 0x49, 0x55, 0x53, 0x10, 0x03, 0x2a, 0x5f,
	0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x52,
	0x45, 0x50, 0x4c, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x50,
	0x50, 0x4c, 0x49, 0x43, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x50, 0x4c, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54,
	0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x54, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x02, 0x42,
	0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_snappable_proto_rawDescOnce sync.Once
	file_snappable_proto_rawDescData = file_snappable_proto_rawDesc
)

func file_snappable_proto_rawDescGZIP() []byte {
	file_snappable_proto_rawDescOnce.Do(func() {
		file_snappable_proto_rawDescData = protoimpl.X.CompressGZIP(file_snappable_proto_rawDescData)
	})
	return file_snappable_proto_rawDescData
}

var file_snappable_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_snappable_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_snappable_proto_goTypes = []interface{}{
	(EncryptionScheme)(0),    // 0: snappable.EncryptionScheme
	(ReplyType)(0),           // 1: snappable.ReplyType
	(*EncryptionData)(nil),   // 2: snappable.EncryptionData
	(*PlayerData)(nil),       // 3: snappable.PlayerData
	(*StoreEntry)(nil),       // 4: snappable.StoreEntry
	(*SessionData)(nil),      // 5: snappable.SessionData
	(*PlayerDataEntry)(nil),  // 6: snappable.PlayerDataEntry
	(*SnappableMedia)(nil),   // 7: snappable.SnappableMedia
	(*SnappableMessage)(nil), // 8: snappable.SnappableMessage
	(*Snappable)(nil),        // 9: snappable.Snappable
	(*Snap3DData)(nil),       // 10: snappable.Snap3DData
	(*UsesCameraRoll)(nil),   // 11: snappable.UsesCameraRoll
	(*IvStoreEntry)(nil),     // 12: snappable.IvStoreEntry
}
var file_snappable_proto_depIdxs = []int32{
	12, // 0: snappable.EncryptionData.ivStore:type_name -> snappable.IvStoreEntry
	0,  // 1: snappable.EncryptionData.encryptionScheme:type_name -> snappable.EncryptionScheme
	4,  // 2: snappable.PlayerData.store:type_name -> snappable.StoreEntry
	6,  // 3: snappable.SessionData.playerData:type_name -> snappable.PlayerDataEntry
	3,  // 4: snappable.PlayerDataEntry.value:type_name -> snappable.PlayerData
	9,  // 5: snappable.SnappableMessage.snappable:type_name -> snappable.Snappable
	7,  // 6: snappable.SnappableMessage.media:type_name -> snappable.SnappableMedia
	1,  // 7: snappable.SnappableMessage.replyType:type_name -> snappable.ReplyType
	10, // 8: snappable.SnappableMessage.snap3dData:type_name -> snappable.Snap3DData
	11, // 9: snappable.SnappableMessage.usesCameraRollData:type_name -> snappable.UsesCameraRoll
	5,  // 10: snappable.Snappable.sessionData:type_name -> snappable.SessionData
	2,  // 11: snappable.Snappable.encryptionData:type_name -> snappable.EncryptionData
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_snappable_proto_init() }
func file_snappable_proto_init() {
	if File_snappable_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_snappable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerDataEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnappableMedia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SnappableMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snappable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Snap3DData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsesCameraRoll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_snappable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IvStoreEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_snappable_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_snappable_proto_goTypes,
		DependencyIndexes: file_snappable_proto_depIdxs,
		EnumInfos:         file_snappable_proto_enumTypes,
		MessageInfos:      file_snappable_proto_msgTypes,
	}.Build()
	File_snappable_proto = out.File
	file_snappable_proto_rawDesc = nil
	file_snappable_proto_goTypes = nil
	file_snappable_proto_depIdxs = nil
}
